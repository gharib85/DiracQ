(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    254061,       7115]
NotebookOptionsPosition[    226922,       6269]
NotebookOutlinePosition[    230799,       6379]
CellTagsIndexPosition[    229809,       6353]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["DiracQ: Getting Started and Tutorial",
 FontSize->18]], "Title",
 CellChangeTimes->{{3.4880433049384537`*^9, 3.4880433256841784`*^9}, {
   3.490643961591359*^9, 3.4906439809443607`*^9}, {3.5658796365801477`*^9, 
   3.5658796384051504`*^9}, 3.565879795905371*^9, {3.5662160378209057`*^9, 
   3.566216051160669*^9}, {3.566217530226267*^9, 3.5662175337034655`*^9}, {
   3.648390775254273*^9, 3.648390779764114*^9}},
 TextAlignment->Center,
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->24],

Cell["\<\
\tThe purpose of this notebook is to familiarize the reader with the \
operation of the DiracQ package. This tutorial covers both the basic and more \
advanced uses of the package. The use of every function in the package is not \
covered in this notebook. See the \[OpenCurlyDoubleQuote]Glossary\
\[CloseCurlyDoubleQuote] notebook for an explanation of every function. For \
more in-depth examples demonstrating the types of manipulations DiracQ can \
perform, see the \[OpenCurlyDoubleQuote]Examplebook\[CloseCurlyDoubleQuote] \
notebook.\
\>", "Text",
 CellChangeTimes->{{3.5658797567053165`*^9, 3.5658797732753396`*^9}, {
  3.565879937370569*^9, 3.5658799425005765`*^9}, {3.5659029939405427`*^9, 
  3.5659030717409925`*^9}, {3.5659031065909863`*^9, 3.56590312169285*^9}, {
  3.5662162837119703`*^9, 3.5662163525179057`*^9}, {3.566217523274869*^9, 
  3.566217588099577*^9}, {3.5662176661850433`*^9, 3.5662176726594133`*^9}}],

Cell[CellGroupData[{

Cell["I : Getting Started", "Section",
 CellChangeTimes->{{3.648381622036251*^9, 3.648381649212699*^9}},
 FontFamily->"Times",
 FontSize->16],

Cell[CellGroupData[{

Cell["What the Package Does", "Subsection",
 CellChangeTimes->{{3.5659153517016263`*^9, 3.565915362758259*^9}},
 FontFamily->"Times New Roman",
 FontWeight->"Bold"],

Cell["\<\
The DiracQ package is intended to provide a way to manipulate quantum \
mechanical operators and other noncommutative objects using Mathematica. This \
package excels at performing algebraic manipulations of noncommutative \
objects, specifically quantum mechanical operators, that are difficult or \
tedious to perform by hand. The package \[OpenCurlyDoubleQuote]knows\
\[CloseCurlyDoubleQuote] the properties of the operators and can utilize them \
to perform manipulations, calculations, and simplifications of expressions \
involving both numbers and variables that commute and operators, which do not \
commute.\
\>", "Text",
 CellChangeTimes->{{3.5659141675808983`*^9, 3.565914177855486*^9}, {
  3.5659142112593966`*^9, 3.565914448108944*^9}, {3.5659153738728943`*^9, 
  3.5659153854245553`*^9}, {3.565918469058499*^9, 3.565918654125084*^9}, {
  3.566215852991334*^9, 3.566215953049057*^9}},
 FontFamily->"Times New Roman"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Loading the Package ",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.5659144502210646`*^9, 3.565914478481681*^9}, {
   3.56591461850369*^9, 3.565914681204276*^9}, {3.5659151609477158`*^9, 
   3.565915161857768*^9}, 3.5659152490607557`*^9},
 FontFamily->"Times New Roman"],

Cell[TextData[{
 "There are a number of ways to run ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " packages; we present two methods here. \nThe simplest method to get the \
package working immediately is to save the notebook in which you are \
currently working in the same folder as the file \
\[OpenCurlyDoubleQuote]DiracQV1.m\[CloseCurlyDoubleQuote]. When this is done \
the command below will load the package."
}], "Text",
 CellChangeTimes->{{3.565914682730363*^9, 3.5659147157762537`*^9}, {
  3.565914894383469*^9, 3.5659148953775263`*^9}, {3.5659149895719137`*^9, 
  3.565915058489856*^9}, {3.5659200108686857`*^9, 3.565920052583071*^9}, {
  3.5659785316859713`*^9, 3.5659786764412503`*^9}, {3.648380404533557*^9, 
  3.648380412623829*^9}, {3.648380510702621*^9, 3.648380518774555*^9}, {
  3.648380576506691*^9, 3.6483807521601467`*^9}, {3.64838095101713*^9, 
  3.648381013363302*^9}, {3.648641315699188*^9, 3.648641340853622*^9}, {
  3.648885638140341*^9, 3.648885738202524*^9}},
 FontFamily->"Times New Roman"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<DiracQV1.m\>\"", "]"}], ";"}]}], "Input"],

Cell[TextData[{
 "Alternatively, the package can be placed in a folder that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will autimatically search when you use the \[OpenCurlyDoubleQuote]Get\
\[CloseCurlyDoubleQuote] function. Upon download the file \
\[OpenCurlyDoubleQuote]DiracQV1.m\[CloseCurlyDoubleQuote] is located in a \
folder titled \"DiracQ\", along with a folder named \"Kernel\". To begin \
using the package, place this \"DiracQ\" folder within the private \
applications folder in your user base directory. To find the location of your \
user base directory, call the input below."
}], "Text",
 CellChangeTimes->{{3.648885741346607*^9, 3.648885860540663*^9}}],

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellChangeTimes->{{3.648380756558236*^9, 3.64838076277579*^9}}],

Cell["\<\
Once the \"DiracQ\" folder is placed in the Applications folder located \
within the user base directory, the package can be called with the \"Get\" \
command below.\
\>", "Text",
 CellChangeTimes->{{3.648380769063754*^9, 3.648380807785166*^9}, {
   3.648380875097003*^9, 3.648380907434451*^9}, 3.6483809401950893`*^9, 
   3.648381037954317*^9, {3.648885875824432*^9, 3.6488858762085342`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "DiracQ`"}]], "Input",
 CellChangeTimes->{{3.648380910039761*^9, 3.648380914796736*^9}}],

Cell["\<\
If you see a warning regarding dynamic content, choose to allow dynamic \
content. The package allows the user to update options and settings \
dynamically, and there is no harm in running dynamic content.\
\>", "Text",
 CellChangeTimes->{{3.565915073397708*^9, 3.56591511311998*^9}, {
  3.5659151709252863`*^9, 3.5659152015910406`*^9}, {3.5659786830696297`*^9, 
  3.5659786909010773`*^9}},
 FontFamily->"Times New Roman"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What You See When You Load the Package", "Subsection",
 CellChangeTimes->{{3.5659152049122305`*^9, 3.565915247528668*^9}},
 FontFamily->"Times New Roman",
 FontWeight->"Bold"],

Cell[TextData[{
 "The package should automatically open a palette. If the palette doesn' t \
open, then the package has not loaded, or there has been some other error. \
The palette should look like other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " palettes. The palette allows the user to control the operation of some of \
the functions of the package.\nThe most important thing the package does is \
allow the user to specify what symbols should be viewed as operators. \
Initially no symbols will be viewed as operators. This may seem inconvenient \
but we think that it will lead to fewer mistakes than the alternative.\n\
Checking the box next to an operator in the lower half of the palette will \
activate that operator. Now that symbol will be viewed as having the \
properties of the operator to which it corresponds."
}], "Text",
 CellChangeTimes->{{3.565915250867859*^9, 3.565915343663166*^9}, {
  3.565918666389786*^9, 3.565918723670062*^9}, {3.5659187542038083`*^9, 
  3.5659188715475197`*^9}, {3.565978697984483*^9, 3.5659787265291157`*^9}},
 FontFamily->"Times New Roman"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using the Functions of the Package\
\>", "Subsection",
 CellChangeTimes->{{3.565919116533532*^9, 3.565919126000074*^9}, 
   3.565919160503047*^9, {3.6483817291095667`*^9, 3.6483817320221367`*^9}},
 FontFamily->"Times New Roman",
 FontWeight->"Bold"],

Cell["\<\
The package provides a large number of functions. To understand what the \
package does only a small number of functions needs to be used. \
\>", "Text",
 CellChangeTimes->{{3.5659191653423243`*^9, 3.5659191704706173`*^9}, {
  3.565919622711484*^9, 3.5659196598266068`*^9}},
 FontFamily->"Times New Roman"],

Cell[CellGroupData[{

Cell["Commutator/AntiCommutator", "Item",
 CellChangeTimes->{{3.56591966354982*^9, 3.5659196811338253`*^9}},
 FontFamily->"Times New Roman"],

Cell["ProductQ", "Item",
 CellChangeTimes->{{3.565919685115053*^9, 3.5659196889912753`*^9}},
 FontFamily->"Times New Roman"],

Cell["SimplifyQ", "Item",
 CellChangeTimes->{{3.5659196895833087`*^9, 3.5659196921404552`*^9}},
 FontFamily->"Times New Roman"]
}, Open  ]],

Cell[TextData[{
 "To get information about a function, you can call the usage paragraph, as \
is done for other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions. This can be done for any of the functions."
}], "Text",
 CellChangeTimes->{{3.56591969624769*^9, 3.5659197116475706`*^9}, {
  3.565919863793273*^9, 3.5659198898167615`*^9}, {3.5659200847689123`*^9, 
  3.5659200934974117`*^9}},
 FontFamily->"Times New Roman"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Commutator"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"Commutator is used to calculate the commutators of expressions \
involving operators with known commutation relations. Commutator[A,B] is \
defined as AB-BA.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5662161871354465`*^9},
 CellTags->"Info3566187387-9547786"]
}, Open  ]],

Cell["\<\
Our goal was to allow the user to write input as similar as possible to the \
way we write by hand. That being said, the notation used might take a little \
getting used to.
Operators need to have an argument, otherwise they will not be viewed as \
operators. This may seem inconvenient but in practice it is not. The argument \
of an operator is usually used to specify an index, such as a site index.
The example below shows how to calculate the anticommutator of two fermionic \
operators, one creation operator and one annihilation operator. Here we will \
assume that the operators act at the same site.\
\>", "Text",
 CellChangeTimes->{{3.5659189045434074`*^9, 3.565918958600499*^9}, {
   3.565919089775002*^9, 3.5659191032677736`*^9}, {3.565920103497984*^9, 
   3.565920124902208*^9}, {3.5659207189521856`*^9, 3.5659207427085447`*^9}, {
   3.565920812443533*^9, 3.5659208164357615`*^9}, {3.565920870634861*^9, 
   3.56592088285456*^9}, 3.565978222075262*^9, {3.565978779443142*^9, 
   3.56597896526377*^9}, {3.5659790200649047`*^9, 3.5659790226840544`*^9}},
 FontFamily->"Times New Roman"],

Cell["\<\
Before evaluating the input below, check the box next to \
\[OpenCurlyDoubleQuote]Fermionic Operators\[CloseCurlyDoubleQuote] on the \
pallete.\
\>", "Item",
 CellChangeTimes->{{3.5659790483135204`*^9, 3.565979111124113*^9}},
 FontFamily->"Times New Roman",
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"f", "[", "i", "]"}], ",", 
   RowBox[{"f\[Dagger]", "[", "i", "]"}]}], "]"}]], "Input"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.566216212853917*^9, 3.5662162207443686`*^9}, {
  3.648381561261301*^9, 3.648381580695045*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["The answer should of course be unity. If it is not, \
check to ensure that fermionic operators have been activated on the DiracQ \
Palette. This calculation is not meant to be impressive, but if it works then \
you have successfully downloaded and loaded the package.",
 FontSize->12]], "Text",
 CellChangeTimes->{{3.565920126411294*^9, 3.5659201366998825`*^9}, {
  3.5659790426411963`*^9, 3.5659790455663633`*^9}, {3.5659791137632637`*^9, 
  3.5659791683423853`*^9}, {3.5659792789177103`*^9, 3.56597933258578*^9}, {
  3.648381781838303*^9, 3.648381803213332*^9}},
 FontFamily->"Times New Roman",
 FontSize->10]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["II: List of Functions and Symbols Provided by the Package", "Section",
 CellChangeTimes->{{3.488043347925671*^9, 3.4880433716518507`*^9}, {
   3.5303838998362627`*^9, 3.530383900195642*^9}, {3.530384602423491*^9, 
   3.530384603615592*^9}, 3.530448156969618*^9, {3.565873515888317*^9, 
   3.565873518150321*^9}, {3.5658798687004733`*^9, 3.5658798698004746`*^9}, {
   3.5659018690342016`*^9, 3.565901871322333*^9}, 3.648381326456559*^9},
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->16],

Cell[TextData[{
 "The Functions in the package are in the context \"DiracQ\". The command \
below calls a list of all functions provided to the user by the package and \
the symbols used by the package for both input and output. The notebook \
\[OpenCurlyDoubleQuote]Glossary_VX.nb\[CloseCurlyDoubleQuote] and its pdf \
version \[OpenCurlyDoubleQuote]Glossary_VX.pdf\[CloseCurlyDoubleQuote] \
contain the definitions, usage and simple examples of the functions and \
symbols listed in the next output. Brief usage paragraphs can be called for \
any of the functions below by clicking the function, assuming that you have \
already invoked DiracQ. Usage paragraphs can also be called using the \
familiar ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " command \[OpenCurlyDoubleQuote]?*functionname*\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.488820885487401*^9, 3.488820949360956*^9}, {
   3.488821011064869*^9, 3.488821037896224*^9}, 3.489179197137115*^9, {
   3.530381120230217*^9, 3.530381243924732*^9}, {3.530381314475206*^9, 
   3.530381322674325*^9}, {3.552127695512248*^9, 3.552127718361112*^9}, {
   3.565873354079526*^9, 3.56587337917997*^9}, {3.56587341015324*^9, 
   3.5658734148800488`*^9}, {3.567176563016119*^9, 3.567176576036991*^9}, {
   3.5671767180631037`*^9, 3.5671767578882027`*^9}, 3.648381326464616*^9, {
   3.648381480985302*^9, 3.648381529691023*^9}},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["DiracQ`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["DiracQ`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["AddOperator",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"AddOperator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["FullOrganize",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"FullOrganize", "DiracQ`"}},
          
          ButtonNote->"DiracQ`"], 
         ButtonBox["q",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"q", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["AllSymbols",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"AllSymbols", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["function",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"function", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["QCoefficient",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"QCoefficient", "DiracQ`"}},
          
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["anticommutator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"anticommutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["f\[Dagger]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"f\[Dagger]", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["SecondaryOperators",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"SecondaryOperators", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["AntiCommutator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"AntiCommutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Humanize",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Humanize", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["SimplifyQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"SimplifyQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["AntiCommutatorDefinition",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"AntiCommutatorDefinition", "DiracQ`"}},
          
          ButtonNote->"DiracQ`"], 
         ButtonBox["Identical",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Identical", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["StandardOrderQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"StandardOrderQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["ApplyDefinition",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"ApplyDefinition", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["J",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"J", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["StandardReordering",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"StandardReordering", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["b",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"b", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["n",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"n", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["TakeCPart",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"TakeCPart", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["b\[Dagger]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"b\[Dagger]", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["NCcross",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"NCcross", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["TakeQPart",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"TakeQPart", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["commutator",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"commutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["OperatorProduct",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"OperatorProduct", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["TakeSummand",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"TakeSummand", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["Commutator",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Commutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Operators",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Operators", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Vacuum",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Vacuum", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["CommutatorDefinition",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"CommutatorDefinition", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Organize",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Organize", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["x",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"x", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["CommutatorRule",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"CommutatorRule", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["OrganizedExpression",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"OrganizedExpression", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["X",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"X", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["CommuteParts",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"CommuteParts", "DiracQ`"}},
          
          ButtonNote->"DiracQ`"], 
         ButtonBox["OrganizedProduct",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"OrganizedProduct", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["y",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"y", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["Decomposition",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Decomposition", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["OrganizeQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"OrganizeQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["z",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"z", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["DeleteOperator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"DeleteOperator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["p",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"p", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Delta]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"\[Delta]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["DiracQPalette",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"DiracQPalette", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["PositionQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"PositionQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Epsilon]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"\[Epsilon]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["DropQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"DropQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["ProductQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"ProductQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Sigma]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"\[Sigma]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["Evaluation",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"Evaluation", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["PushOperatorLeft",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"PushOperatorLeft", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Dagger]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"\[Dagger]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["f",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"f", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["PushOperatorRight",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3552067720-9535980", {"PushOperatorRight", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[HBar]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3552067720-9535980", {"\[HBar]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.552092921474914*^9, 3.64838132677104*^9},
 TextJustification->1.],

Cell[BoxData[
 StyleBox["\<\"function is a label used by the Organize function to denote a \
function of operators that can not be decomposed simply. The first argument \
is the function, and the second argument is the operators on which the \
function depends. This function is not intended to be manipulated by the \
user.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3552067720-9535980"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["III: Basic Use and Notation", "Section",
 CellChangeTimes->{{3.4888221527984943`*^9, 3.488822155397573*^9}, {
   3.530383903807212*^9, 3.530383904324074*^9}, {3.530384607474572*^9, 
   3.5303846090043287`*^9}, 3.530448161211433*^9, {3.552095852866596*^9, 
   3.552095855042698*^9}, {3.565873858748719*^9, 3.5658738611511235`*^9}, {
   3.565879870910476*^9, 3.5658798720104775`*^9}, {3.565901874013487*^9, 
   3.565901875775587*^9}, 3.64838132677205*^9},
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->16],

Cell["\<\
To use DiracQ at the most basic level is quite simple. When the package is \
loaded, the DiracQ palette should load automatically. The palette utilizes \
dynamic features. If the user receives a warning regarding dynamic features \
they should choose to activate dynamic content. The palette contains a list \
of the operators that are included with the package. In the section titled \
\[OpenCurlyDoubleQuote]Active Operators\[CloseCurlyDoubleQuote] there are two \
windows and a list of operators with check boxes next to them. Check the box \
of any operator(s) you want to use. Now that operator is active, meaning that \
the package will view this symbol as having the properties of the quantum \
mechanical operator to which it corresponds. The symbols for innactive \
operators will not be viewed as having any special properties.
Lets try a simple example: calculating the commutator or two spin operators.\
\>", "Text",
 CellChangeTimes->{{3.552094275647194*^9, 3.552094614406122*^9}, {
   3.552127767253304*^9, 3.552127827945277*^9}, {3.552127861025494*^9, 
   3.5521279219283867`*^9}, 3.648381326776909*^9},
 TextJustification->1.],

Cell["\<\
Activate the Pauli matrix symbol \"\[Sigma]\" by clicking the box to the \
right of the \[Sigma] symbol within the Operator Controls section\
\>", "Item",
 CellChangeTimes->{{3.4929686704746027`*^9, 3.492968699776744*^9}, {
   3.493488890668804*^9, 3.493488918209257*^9}, {3.493488950245287*^9, 
   3.493488960302186*^9}, 3.648381326780048*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"j", ",", " ", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.552094638814207*^9, 3.552094666908381*^9}, 
   3.5527373625728807`*^9, {3.5658735526107817`*^9, 3.565873565746004*^9}, 
   3.64838132678209*^9},
 TextJustification->1.],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
  RowBox[{
   RowBox[{"\[Delta]", "[", 
    RowBox[{"i", ",", "j"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.55209466804839*^9, 3.552094672502363*^9}, 
   3.552095869039072*^9, {3.5658735676960077`*^9, 3.565873577243225*^9}, 
   3.6483813267899733`*^9},
 TextJustification->1.]
}, Open  ]],

Cell["\<\
Here we reproduce a familiar result, though at first glance it may appear \
somewhat cryptic. What we have shown is more familiarly written\
\>", "Text",
 CellChangeTimes->{{3.5520946788750134`*^9, 3.552094741148655*^9}, 
   3.64838132679121*^9},
 TextJustification->1.],

Cell[BoxData[
 RowBox[{
  RowBox[{"[", 
   RowBox[{
    SubscriptBox["\[Sigma]", 
     RowBox[{"i", ",", "x"}]], ",", 
    SubscriptBox["\[Sigma]", 
     RowBox[{"j", ",", "y"}]]}], "]"}], "=", 
  RowBox[{"2", "\[ImaginaryI]", " ", 
   SubscriptBox["\[Delta]", 
    RowBox[{"i", ",", "j"}]], " ", 
   SubscriptBox["\[Sigma]", 
    RowBox[{"i", ",", "z"}]], "  "}]}]], "InlineFormula",
 CellChangeTimes->{{3.552094744713423*^9, 3.552094750502288*^9}, {
   3.552094851138363*^9, 3.552094918582615*^9}, {3.552095883703074*^9, 
   3.5520958910849247`*^9}, 3.5523346328695183`*^9, {3.5658735898792467`*^9, 
   3.5658735971176596`*^9}, 3.648381326883031*^9},
 TextAlignment->Center,
 TextJustification->1.],

Cell[TextData[{
 "where i and j represent site index. However, we cannot write it exactly \
like this and have Mathematica understand. Therefore the notation used \
throughout the package is as follows :\n  \[Bullet] ",
 StyleBox["Indices of operators are written as arguments",
  FontWeight->"Bold"],
 " (i.e. in brackets following the operators symbol)\n  \n\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", 
    RowBox[{"i", ",", "x"}]], TraditionalForm]]],
 "  \[DoubleLongRightArrow]  \[Sigma][i,x]\t\t\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", 
    RowBox[{"i", ",", "j", " "}]], TraditionalForm]]],
 "\[DoubleLongRightArrow] \[Delta][i,j]\n  \t\t\t\t\n  \[Bullet] ",
 StyleBox["Every operator needs at least one argument to specify site index",
  FontWeight->"Bold"],
 ". If specifying a site is not relevant for the problem you are doing then \
simply specify all operators with the same arbitrary site index. Some \
operators, such as Pauli Spin Matrices, need additional arguments, in this \
case to specify direction. See the more detailed descriptions in this \
tutorial for more information on specific operators.\n  \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "x"], "+", " ", 
    SubscriptBox["\[Sigma]", "y"]}], TraditionalForm]]],
 " \[DoubleLongRightArrow] \[Sigma][i,x]+\[Sigma][i,y]\n  \t\t\t\t\n",
 StyleBox["  \[Bullet] NonCommutativeMultiply ",
  FontWeight->"Bold"],
 "(written as **) is used in place of Times (*) between objects to preserve \
the correct ordering. NonCommutativeMultiply must be used by the user when \
input involves the product of commutators (q numbers).\n  \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "x"], " ", 
    SubscriptBox["\[Sigma]", "y"]}], TraditionalForm]]],
 " \[DoubleLongRightArrow] \[Sigma][i,x]**\[Sigma][i,y]"
}], "Text",
 CellChangeTimes->{{3.552094920896905*^9, 3.552094979483417*^9}, {
   3.5520950125463247`*^9, 3.552095386722395*^9}, {3.552095432555111*^9, 
   3.552095511903503*^9}, {3.5520955445581207`*^9, 3.552095724762744*^9}, {
   3.5520958866216373`*^9, 3.552095903139337*^9}, {3.5520959540273447`*^9, 
   3.552095959683298*^9}, {3.552177216097946*^9, 3.552177303517785*^9}, {
   3.565873620845301*^9, 3.5658736354937267`*^9}, 3.565873696817435*^9, {
   3.565874026153613*^9, 3.565874045856448*^9}, 3.6483813270151873`*^9},
 TextAlignment->Left,
 TextJustification->1.,
 LineSpacing->{1, 3}],

Cell["\<\
Now we see that our result above is actually familiar. In this example we \
used the Commutator function. This is one of the many function of the DiracQ \
package. Another commonly useful function is ProductQ, which allows the user \
to calculate the product of two exressions. This function, as do all other \
DiracQ functions, utilizes the properties of quantum mechanical operators. \
Here, we reproduce the familiar product of two Pauli spin matrices.\
\>", "Text",
 CellChangeTimes->{{3.552095728099227*^9, 3.552095845410789*^9}, {
   3.5520959748681097`*^9, 3.5520960404909773`*^9}, {3.552177099735408*^9, 
   3.5521771984529657`*^9}, 3.648381327016033*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658740863697195`*^9, 3.5658740863697195`*^9}, 
   3.648381327016597*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658740868221197`*^9, 3.648381327016934*^9}]
}, Open  ]],

Cell["\<\
The above example can also be written using the \[OpenCurlyDoubleQuote]circle \
times\[CloseCurlyDoubleQuote] symbol to represent the function ProductQ. The \
input below is identical to that above.\
\>", "Text",
 CellChangeTimes->{{3.565873871181941*^9, 3.565873938168459*^9}, {
   3.5658739703357153`*^9, 3.565874004859576*^9}, 3.648381327017462*^9},
 FontFamily->"Times New Roman"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", " ", "x"}], "]"}], "\[CircleTimes]", " ", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{3.648381327018692*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565874083171714*^9, 3.648381327019038*^9}]
}, Open  ]],

Cell["\<\
     The example below demonstrates more complex input being understood and \
evaluated by the Commutator function. All of the functions in the package can \
understand input of this complexity.\
\>", "Text",
 CellChangeTimes->{{3.490641844077347*^9, 3.4906418617418623`*^9}, {
   3.492972021320262*^9, 3.4929720703342123`*^9}, 3.552178883380865*^9, 
   3.6483813270195417`*^9},
 TextJustification->1.],

Cell["\<\
Activate the Pauli matrix symbol \"\[Sigma]\" and the Fermi operator symbols \
f and f\[Dagger]\
\>", "Item",
 CellChangeTimes->{{3.4929686704746027`*^9, 3.492968699776744*^9}, {
   3.492976061833688*^9, 3.4929760830490513`*^9}, 3.648381327020648*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{
     RowBox[{"t", "[", "i", "]"}], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"i", ",", "x"}], "]"}], "**", 
      RowBox[{"f", "[", "i", "]"}]}]}]}]}], ";"}], "\[LineSeparator]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"k", ",", "y"}], "]"}], "**", 
    RowBox[{"f\[Dagger]", "[", "k", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{3.648381327221712*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{"A", ",", " ", "B"}], "]"}]], "Input",
 CellChangeTimes->{3.648381327222254*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"t", "[", "i", "]"}], " ", 
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"i", ",", "x"}], "]"}], " ", 
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"i", ",", "y"}], "]"}], " ", 
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"k", ",", "y"}], "]"}]}], ")"}], "**", 
     RowBox[{"f\[Dagger]", "[", "k", "]"}], "**", 
     RowBox[{"f", "[", "i", "]"}]}]}]}], "+", 
  RowBox[{
   RowBox[{"t", "[", "k", "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"k", ",", "x"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"k", ",", "y"}], "]"}], "2"]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565878443527473*^9, 3.6483813272285643`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IV: The DiracQ Palette", "Section",
 CellChangeTimes->{{3.552094066496869*^9, 3.5520940813736553`*^9}, 
   3.552094183544732*^9, 3.552094250039186*^9, {3.552127629090391*^9, 
   3.552127632404462*^9}, {3.565875196160068*^9, 3.565875197876071*^9}, {
   3.565876359138911*^9, 3.5658763606833134`*^9}, {3.565879950315587*^9, 
   3.565879950655588*^9}, {3.5659018799438257`*^9, 3.5659018843960805`*^9}, 
   3.648381327229047*^9},
 TextJustification->1.,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell["\<\
\tEssential to the operation of the package is the DiracQPalette. This \
palette allows users to control the options of package functions, designate \
symbols as operators, and input some of the special symbols and functions \
used frequently when operatoring the package. To open the palette, input the \
function DiracQPalette. The palette should also open automatically when the \
package is first loaded. The palette utilizes dynamic features. If the user \
receives a warning regarding dynamic features they should choose to activate \
dynamic content.\
\>", "Text",
 CellChangeTimes->{{3.4929613169543324`*^9, 3.492961481208109*^9}, {
   3.4929628733493843`*^9, 3.492962892379616*^9}, {3.492970842895443*^9, 
   3.4929708436128473`*^9}, {3.552093454430277*^9, 3.5520934971641693`*^9}, {
   3.565874176725078*^9, 3.5658741795798826`*^9}, 3.6483813272324533`*^9},
 TextJustification->1.,
 FontSize->14],

Cell["\<\
\tThe DiracQ package contains a collection of commonly used quantum \
mechanical operators for which algebraic relations such as commutators, \
anticommutators, and products are known. The functions of the package \
recognize certain symbols as operators and use these algebraic relations to \
manipulate and evaluate user input. To avoid confusion the package requires \
explicit instructions from the user to view any certain symbol as an \
operator. By default no symbols are viewed as operators. This prevents users \
from making assumptions about the status of a symbol.
\tThe DiracQ palette contains a section titled \"Operator Controls\". The \
purpose of this section is to control how the functions of the package view a \
symbol. This section contains a list of the operators that are included for \
use in the package and the symbols used to represent them. For a symbol on \
this list to be viewed as an operator it must first be activated by the user. \
This is done by locating the desired symbol(s) in the subsection titled \
\"Active Operators\" and checking the box to the right of the symbol(s). The \
symbol should now populate the list of primary operators. Any additional \
secondary operators which are composites of the primary operators will be \
found in the list \"Secondary Operators\". Once a symbol is activated that \
symbol will be viewed as an operator, or q number, by all of the DiracQ \
functions. The symbol will also be given the special algebraic properties of \
the quantum mechanical operator to which it corresponds. The same symbol when \
unactivated will be viewed as a c number with no special algebraic \
properties. The example below demonstrates this point. This example utilizes \
the DiracQ function Commutator, which will evaluate the commutator of two \
arguments, as explained by the usage paragraph for commutator.\
\>", "Text",
 CellChangeTimes->{{3.4929669928694563`*^9, 3.4929670043860273`*^9}, {
   3.492967151304242*^9, 3.49296753004604*^9}, {3.492967767122951*^9, 
   3.492968175000053*^9}, {3.492968295074183*^9, 3.492968304671041*^9}, {
   3.4929683388942003`*^9, 3.4929684140376253`*^9}, {3.492968466029028*^9, 
   3.492968498300932*^9}, {3.492968584524425*^9, 3.492968663244727*^9}, {
   3.492973332227153*^9, 3.492973372431972*^9}, {3.4934888516717253`*^9, 
   3.493488860005068*^9}, {3.5520935319192743`*^9, 3.552093533012702*^9}, {
   3.552093576580982*^9, 3.55209357688459*^9}, {3.565874165243458*^9, 
   3.5658741851490927`*^9}, {3.56587424063839*^9, 3.5658742525100107`*^9}, 
   3.648381327237645*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Commutator"}]], "Input",
 CellChangeTimes->{{3.565874340474165*^9, 3.5658743422213683`*^9}, 
   3.648381327238039*^9}],

Cell[BoxData[
 StyleBox["\<\"Commutator is used to calculate the commutators of expressions \
involving operators with known commutation relations. Commutator[A,B] is \
defined as AB-BA. Output of these functions is ordered according to standard \
order.\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658746377414875`*^9, 3.648381327241617*^9},
 CellTags->"Info3565845837-2407871"]
}, Open  ]],

Cell["\<\
Activate the Pauli matrix symbol \"\[Sigma]\" by clicking the box to the \
right of the \[Sigma] symbol within the Operator Controls section\
\>", "Item",
 CellChangeTimes->{{3.4929686704746027`*^9, 3.492968699776744*^9}, {
   3.493488890668804*^9, 3.493488918209257*^9}, {3.493488950245287*^9, 
   3.493488960302186*^9}, 3.648381327242237*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"j", ",", " ", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658743517373853`*^9, 3.5658743517373853`*^9}, 
   3.648381327242782*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
  RowBox[{
   RowBox[{"\[Delta]", "[", 
    RowBox[{"i", ",", "j"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565874353359788*^9, 3.6483813272431927`*^9}]
}, Open  ]],

Cell["\<\
Unactivate the Pauli matrix symbol \"\[Sigma]\" by either unchecking the \
corresponding box of clicking the \"Return Default Palette Settings\" button\
\>", "Item",
 CellChangeTimes->{{3.492968754343916*^9, 3.492968766985423*^9}, {
   3.493488964067733*^9, 3.4934890031660137`*^9}, 3.648381327244309*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"j", ",", " ", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565874371050219*^9, 3.565874371050219*^9}, 
   3.648381327244809*^9}],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658743716430197`*^9, 3.6483813272455463`*^9}]
}, Open  ]],

Cell["\<\
\tIt will be assumed from this point forward in this tutorial that the pallet \
is set to default settings at the beginning of an example. Therefore, no \
instructions will be given to return the palette to default settings at the \
end of an example. 
To return default settings click the \[OpenCurlyDoubleQuote]Return Default \
Palette Settings Button\[CloseCurlyDoubleQuote] near the bottom of the \
palette. 
\t
The above example shows that when \[Sigma] is active it is imbued with the \
properties of the Pauli matrices. When \[Sigma] is inactive it behaves like a \
c number. All symbols that are used to represent operators have been exported \
by the package. Information about the symbol can be obtained by calling the \
usage as shown below.\
\>", "Text",
 CellChangeTimes->{{3.492968793685876*^9, 3.492968940164708*^9}, {
   3.492970754056987*^9, 3.492970757328147*^9}, {3.493489010279553*^9, 
   3.493489076865226*^9}, {3.530381640410406*^9, 3.5303816411745377`*^9}, {
   3.552093652840317*^9, 3.5520936533807163`*^9}, {3.565874390949054*^9, 
   3.565874416579899*^9}, {3.5658748638482847`*^9, 3.5658749420980215`*^9}, 
   3.64838132724817*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\[Sigma]"}]], "Input",
 CellChangeTimes->{{3.5658744383887367`*^9, 3.5658744383887367`*^9}, 
   3.648381327248536*^9}],

Cell[BoxData[
 StyleBox["\<\"\[Sigma] is the Pauli spin matrix. This operator requires two \
arguments. The first is site index and the second is coordinate direction. An \
optional third argument is used to denote different spin species. Also \
included are the Pauli raising and lowering operators, denoted by \
\!\(\*SuperscriptBox[\\\"\[Sigma]\\\", \\\"Plus\\\"]\) and \
\!\(\*SuperscriptBox[\\\"\[Sigma]\\\", \\\"Minus\\\"]\) respectively. The \
raising and lowering operators require only one argument corresponding to \
site. A second argument (optional) will be taken to represent spin species.\"\
\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565874642905096*^9, 3.64838132726875*^9},
 CellTags->"Info3565845842-2407871"]
}, Open  ]],

Cell["\<\
Notice that all symbols used to represent operators have been exported by the \
DiracQ package and therefore appear in black (the color used by Mathematica \
to represent a symbol which has a definition). This does not mean that these \
symbols cannot be given  definition and used as would any other symbol. The \
example below shows that we can even give \[Sigma] a numerical value provided \
the symbol is not activated on the palette.\
\>", "Text",
 CellChangeTimes->{{3.4929689489406424`*^9, 3.492969066124516*^9}, {
   3.530381688494504*^9, 3.530381695096569*^9}, {3.530381729634454*^9, 
   3.530381733132147*^9}, {3.5303817633500633`*^9, 3.530381783903586*^9}, {
   3.530381832572816*^9, 3.53038183295403*^9}, {3.530382139812113*^9, 
   3.530382143286749*^9}, 3.648381327270344*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", " ", "=", " ", "2"}]], "Input",
 CellChangeTimes->{{3.56587465089231*^9, 3.56587465089231*^9}, 
   3.648381327271234*^9}],

Cell[BoxData["2"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658746515631113`*^9, 3.648381327271564*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", "[", 
  RowBox[{"i", ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.5658746777087574`*^9, 3.5658746777243576`*^9}, 
   3.648381327271968*^9}],

Cell[BoxData[
 RowBox[{"2", "[", 
  RowBox[{"i", ",", "x"}], "]"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658746782391586`*^9, 3.648381327272315*^9}]
}, Open  ]],

Cell["\<\
However if \[Sigma] is activated in the palette, uncontrollable errors will \
arise by trying to give it an additional numerical definition. Therefore, \
ensure that a symbol has not been defined before it is used to represent an \
operator. A convenient way to clean the slate is to use the \
\[OpenCurlyDoubleQuote]Clear\[CloseCurlyDoubleQuote] function.\
\>", "Text",
 CellChangeTimes->{{3.4929691417659197`*^9, 3.492969192293682*^9}, {
   3.530381800823834*^9, 3.5303818383203173`*^9}, {3.530381894053178*^9, 
   3.5303819677750797`*^9}, {3.530382003314625*^9, 3.53038203129216*^9}, {
   3.5658746869907737`*^9, 3.5658747413256693`*^9}, 3.648381327273546*^9},
 TextJustification->1.,
 FontSize->14],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Sigma]", "]"}]], "Input",
 CellChangeTimes->{3.648381327273912*^9}],

Cell["\<\
Activate the Pauli matrix symbol \"\[Sigma]\" and its standard  properties \
are restored.\
\>", "Item",
 CellChangeTimes->{{3.4929686704746027`*^9, 3.492968699776744*^9}, {
   3.5303820784867*^9, 3.5303820931787453`*^9}, 3.6483813272744102`*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"j", ",", " ", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565874766129713*^9, 3.565874766145313*^9}, 
   3.648381327274888*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
  RowBox[{
   RowBox[{"\[Delta]", "[", 
    RowBox[{"i", ",", "j"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5658747672529144`*^9, 3.565874775286929*^9}, 
   3.6483813272753*^9}]
}, Open  ]],

Cell["\<\
By activating the All Symbols button every non-numerical symbol will be \
viewed as an operator. Symbols other than those used to represent operators \
will not have algebraic relationships such as commutator and anticommutator \
defined. Therefore the definitions of the commutator and the anticommutator \
are used.\
\>", "Text",
 CellChangeTimes->{{3.49296927428113*^9, 3.492969414543326*^9}, {
   3.5658747875329504`*^9, 3.565874788406552*^9}, 3.648381327276232*^9},
 TextJustification->1.,
 FontSize->14],

Cell["Activate \"All Symbols\"", "Item",
 CellChangeTimes->{{3.4929694328591833`*^9, 3.492969440240058*^9}, 
   3.648381327276626*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "B"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Commutator", "[", 
  RowBox[{"A", ",", " ", "B"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5658748052545815`*^9, 3.5658748052701817`*^9}, {
   3.565874835783835*^9, 3.5658748378274384`*^9}, 3.648381327277092*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "**", "B"}], "-", 
  RowBox[{"B", "**", "A"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.565874812836195*^9, 3.5658748392938414`*^9}, 
   3.648381327278372*^9}]
}, Open  ]],

Cell["\<\
     The  section of the palette titled \"Function Options\" (near the top) \
allows the user to set options that apply to several functions. Apply \
Definition is an option which allows users to specify whether or not \
predefined algebraic relationships between operators should be used while \
manipulating input. For example, the canonical commutator of position and \
momentum operators is known to be equal to \[ImaginaryI] \[HBar]. By default \
Apply Definition is True, so if this commutator is encountered anywhere \
within an expression it will be replaced by \[ImaginaryI] \[HBar]. If \
however, Appy Definition was False, the commutator would remain unevaluated. \
This is demostrated below.\
\>", "Text",
 CellChangeTimes->{{3.492963455000164*^9, 3.492963845012164*^9}, {
   3.492963936106278*^9, 3.4929640071578913`*^9}, {3.4929642080717688`*^9, 
   3.492964225463834*^9}, {3.492964482830163*^9, 3.492964564366077*^9}, {
   3.492970125128048*^9, 3.492970153648117*^9}, {3.492970240088262*^9, 
   3.4929702631954947`*^9}, {3.492970438587369*^9, 3.492970440496559*^9}, {
   3.530383159472032*^9, 3.530383192927144*^9}, {3.5303832322245283`*^9, 
   3.530383235543723*^9}, {3.552093751968346*^9, 3.55209378094042*^9}, {
   3.5658749708800726`*^9, 3.5658750068069353`*^9}, 3.648381327281451*^9},
 TextJustification->1.,
 FontSize->14],

Cell["\<\
Activate the canonical position and momentum operators matrix symbol \"q and \
p\"\
\>", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, 
   3.6483813272818937`*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", "i", "]"}], ",", " ", 
   RowBox[{"p", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565875016244952*^9, 3.565875016244952*^9}, 
   3.648381327282339*^9}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[HBar]"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565875017243354*^9, 3.648381327284401*^9}]
}, Open  ]],

Cell["Set Apply Definition to False", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, {
   3.492970465091158*^9, 3.4929704749837027`*^9}, 3.64838132728484*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", "i", "]"}], ",", " ", 
   RowBox[{"p", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565875026977771*^9, 3.565875026977771*^9}, 
   3.6483813272853003`*^9}],

Cell[BoxData[
 RowBox[{"commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", "i", "]"}], ",", 
   RowBox[{"p", "[", "i", "]"}]}], "]"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658750279137726`*^9, 3.648381327287445*^9}]
}, Open  ]],

Cell["\<\
     Decomposition is an option which determines how commutators of more than \
two operators will be decomposed. Commutators of more than two operators can \
be decomposed into an expression involving commutators of only two operators \
or anticommutators of only two operators, as shown below.\
\>", "Text",
 CellChangeTimes->{{3.4929702700094147`*^9, 3.492970274990844*^9}, 
   3.648381327288047*^9},
 TextJustification->1.,
 FontSize->14],

Cell["\<\
[A,BC]=[A,B] C-B[C,A]
[A,BC]={A,B} C-B{C,A}\
\>", "Text",
 CellChangeTimes->{
  3.4929639764211273`*^9, 3.4929642121941032`*^9, {3.49296433379825*^9, 
   3.492964433572956*^9}, 3.648381327290083*^9},
 TextAlignment->Center,
 TextJustification->1.,
 FontSize->14],

Cell["\<\
     By setting Decomposition to Commutator the former definition will be \
used to decompose commutators of more than two terms. By setting \
decomposition to AntiCommutator the latter definition will be used. It is \
worth noting that a similar rule does not also hold for anticommutators. \
Anticommutators of more than two operators are decomposed into an expression \
involving both commutators and anticommutators. Therefore this setting will \
not effect the operators of the anticommutator function. Also, as a result of \
the decomposition of anticommutators it is not always possibly to decompose \
large expressions entirely into anticommutators. The ability to do so is \
dependent on the number of operators contained in each expression. The \
example below demonstrates the use of Decomposition.\
\>", "Text",
 CellChangeTimes->{{3.492964706131049*^9, 3.492964858065198*^9}, {
   3.4929649735296288`*^9, 3.4929652052465343`*^9}, {3.4929705501202097`*^9, 
   3.492970592079433*^9}, 3.648381327291367*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell["Activate \"All Symbols\"", "Item",
 CellChangeTimes->{{3.4929694328591833`*^9, 3.492969440240058*^9}, 
   3.648381327291732*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell["Set Apply Definition to False", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, {
   3.492970465091158*^9, 3.4929704749837027`*^9}, 3.6483813272920847`*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell["Set Decomposition to Commutator", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, {
   3.492970465091158*^9, 3.4929704749837027`*^9}, {3.492970695912346*^9, 
   3.4929707023181887`*^9}, 3.648381327292471*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{"A", ",", " ", 
   RowBox[{"B", " ", "**", " ", "C"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658750731694517`*^9, 3.565875073185052*^9}, 
   3.6483813272928877`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"B", "**", 
    RowBox[{"commutator", "[", 
     RowBox[{"C", ",", "A"}], "]"}]}]}], "+", 
  RowBox[{
   RowBox[{"commutator", "[", 
    RowBox[{"A", ",", "B"}], "]"}], "**", "C"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565875073731053*^9, 3.6483813272937717`*^9}]
}, Open  ]],

Cell["Set Decomposition to AntiCommutator", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, {
   3.492970465091158*^9, 3.4929704749837027`*^9}, {3.492970695912346*^9, 
   3.4929707195336514`*^9}, 3.6483813272941732`*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{"A", ",", " ", 
   RowBox[{"B", " ", "**", " ", "C"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565875089861481*^9, 3.565875089861481*^9}, 
   3.6483813272945967`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"B", "**", 
    RowBox[{"anticommutator", "[", 
     RowBox[{"C", ",", "A"}], "]"}]}]}], "+", 
  RowBox[{
   RowBox[{"anticommutator", "[", 
    RowBox[{"A", ",", "B"}], "]"}], "**", "C"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565875091062683*^9, 3.648381327295487*^9}]
}, Open  ]],

Cell["\<\
     The remaining section of the palette contains typesetting icons similar \
to the typesetting sections of other Mathematica palettes. This section is \
included only for convenience and is not necessary to the operation of the \
DiracQ package.

\tThere are a few technical points worth mentioning about using the palette. \
Once the palette is opened a second palette can be called. The options \
settings are mirrored between palettes but the operator settings are not. The \
settings used will be those that have most recently been updated. To avoid \
confusion keep only one copy of the palette open at a time. 
\tWhen the palette is closed a window will open that enables the user to save \
the DiracQ palette notebook. This is not necessary and should not be done. \
Doing so will not save palette setttings for the next use but will rather \
save the palette as a notebook in a location to be decided by the user.\
\>", "Text",
 CellChangeTimes->{{3.4929708734181147`*^9, 3.492970967962885*^9}, {
   3.492971511845763*^9, 3.492971573331719*^9}, {3.492971637803871*^9, 
   3.492971897030389*^9}, {3.4929735058357983`*^9, 3.492973510763241*^9}, {
   3.492973541339361*^9, 3.4929735893213*^9}, {3.5658751110619183`*^9, 
   3.5658751293919506`*^9}, {3.565875358431553*^9, 3.565875358961954*^9}, 
   3.648381327296653*^9},
 TextJustification->1.,
 FontSize->14]
}, Closed]],

Cell[CellGroupData[{

Cell["V: Operators Included in the Package", "Section",
 CellChangeTimes->{{3.4880444583509493`*^9, 3.488044469527892*^9}, 
   3.489176441713822*^9, {3.5303846111081877`*^9, 3.5303846139099703`*^9}, {
   3.530384722361352*^9, 3.530384725352357*^9}, 3.530448165059361*^9, 
   3.5521276340041523`*^9, {3.5658763540377016`*^9, 3.5658763573761077`*^9}, {
   3.56587987363048*^9, 3.5658798747404814`*^9}, {3.5659018867952175`*^9, 
   3.5659018889273396`*^9}, 3.64838132729706*^9},
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->16],

Cell["\<\
\tThere are some general properties shared by all operators. Most \
importantly, an operator must be called as a function with an argument. If \
only the head of the operator is used, it will not be recognized. The first \
argument is always taken to be the site at which the operator acts. Only one \
index or list of index may be used to specify site index.
\tBelow are explanation of the usage and properties for each individual type \
of operator.\
\>", "Text",
 CellChangeTimes->{{3.4891667433216143`*^9, 3.48916684787923*^9}, {
   3.489166896166979*^9, 3.48916694300637*^9}, 3.489179131568016*^9, {
   3.4891792493704*^9, 3.4891792516497793`*^9}, {3.492971949058072*^9, 
   3.492971959784726*^9}, {3.565875498379399*^9, 3.5658755655843167`*^9}, 
   3.648381327297776*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell["Bosonic Operators", "Subsubsection",
 CellChangeTimes->{{3.489166705642867*^9, 3.489166708811185*^9}, {
   3.48917646113806*^9, 3.489176462482836*^9}, {3.4909866048553057`*^9, 
   3.4909866058394213`*^9}, 3.648381327298235*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b"}]], "Input",
 CellChangeTimes->{{3.565875387057603*^9, 3.565875387057603*^9}, 
   3.6483813272986298`*^9}],

Cell[BoxData[
 StyleBox["\<\"b is the bosonic annihilation operator. This operator requires \
one index denoting site, and a second optional index can be used to denote \
spin. Also included is the bosonic number operator, represented by \
\\!\\(\\*SubscriptBox[\\\"n\\\", \\\"b\\\"]\\). The argument scheme for the \
number operator is identical to that of the annihilation operator.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658753876036043`*^9, 3.648381327306847*^9},
 CellTags->"Info3565846587-2407871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "b\[Dagger]"}]], "Input",
 CellChangeTimes->{{3.565875395419218*^9, 3.565875395419218*^9}, 
   3.648381327307249*^9}],

Cell[BoxData[
 StyleBox["\<\"b\[Dagger] is the bosonic creation operator. This operator \
requires one index denoting site, and a second optional index can be used to \
denote spin. Also included is the bosonic number operator, represented by \\!\
\\(\\*SubscriptBox[\\\"n\\\", \\\"b\\\"]\\). The argument scheme for the \
number operator is identical to that of the creation operator.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658753963864193`*^9, 3.6483813273100977`*^9},
 CellTags->"Info3565846596-2407871"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fermionic Operators", "Subsubsection",
 CellChangeTimes->{{3.489167073127501*^9, 3.4891670749747467`*^9}, {
   3.489167856667468*^9, 3.489167859443574*^9}, {3.5658757292442045`*^9, 
   3.5658757298526053`*^9}, 3.648381327310663*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.565875423296467*^9, 3.565875423296467*^9}, 
   3.64838132731108*^9}],

Cell[BoxData[
 StyleBox["\<\"f is the fermionic annihilation operator. This operator \
requires one index denoting site, and a second optional index can be used to \
denote spin. Also included is the fermionic number operator, represented by \
\\!\\(\\*SubscriptBox[\\\"n\\\", \\\"f\\\"]\\). The argument scheme for the \
number operator is identical to that of the annihilation operator.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.56587542484087*^9, 3.6483813273135633`*^9},
 CellTags->"Info3565846624-2407871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f\[Dagger]"}]], "Input",
 CellChangeTimes->{{3.565875437227291*^9, 3.565875437227291*^9}, 
   3.648381327313949*^9}],

Cell[BoxData[
 StyleBox["\<\"f\[Dagger] is the fermionic creation operator. This operator \
requires one index denoting site, and a second optional index can be used to \
denote spin. Also included is the fermionic number operator, represented by \
\\!\\(\\*SubscriptBox[\\\"n\\\", \\\"f\\\"]\\). The argument scheme for the \
number operator is identical to that of the creation operator.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565875438132093*^9, 3.648381327314952*^9},
 CellTags->"Info3565846637-2407871"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number Operators", "Subsubsection",
 CellChangeTimes->{{3.489167953976179*^9, 3.489167956622354*^9}, 
   3.5658757274346013`*^9, 3.648381327315447*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "n"}]], "Input",
 CellChangeTimes->{{3.5658754493485126`*^9, 3.5658754493485126`*^9}, 
   3.6483813273158293`*^9}],

Cell[BoxData[
 StyleBox["\<\"n is the number operator. To specify the number operator for \
bosons use \\!\\(\\*SubscriptBox[\\\"n\\\", \\\"b\\\"]\\) and for fermions \
use \\!\\(\\*SubscriptBox[\\\"n\\\", \\\"f\\\"]\\).\"\>", "MSG"]], "Print", \
"PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658754498633137`*^9, 3.6483813273165903`*^9},
 CellTags->"Info3565846649-2407871"]
}, Open  ]],

Cell["\<\
An example demonstrating the use of the number operator is given below.\
\>", "Text",
 CellChangeTimes->{{3.4891686315421*^9, 3.489168715953298*^9}, {
   3.4906412237246523`*^9, 3.490641227360753*^9}, {3.5658754633261375`*^9, 
   3.565875484308174*^9}, 3.6483813273170033`*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["n", "b"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{3.648381327318183*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b\[Dagger]", "[", "i", "]"}], "**", 
  RowBox[{"b", "[", "i", "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658755713719273`*^9, 3.648381327318563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"b\[Dagger]", "[", "i", "]"}], "**", 
  RowBox[{"b", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{3.648381327318967*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b\[Dagger]", "[", "i", "]"}], "**", 
  RowBox[{"b", "[", "i", "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565875579842742*^9, 3.648381327319319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["n", "f"], "[", 
   RowBox[{"i", ",", "up"}], "]"}], " "}]], "Input",
 CellChangeTimes->{3.6483813273204603`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f\[Dagger]", "[", 
   RowBox[{"i", ",", "up"}], "]"}], "**", 
  RowBox[{"f", "[", 
   RowBox[{"i", ",", "up"}], "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.56587559032596*^9, 3.6483813273208637`*^9}]
}, Open  ]],

Cell["The basic (anti)commutators are known to DiracQ, e.g.", "Text",
 CellChangeTimes->{{3.565104525540024*^9, 3.565104570347567*^9}, 
   3.648381327321224*^9}],

Cell["\<\
Activate Fermionic Creation and Annihilation Operators \
\[OpenCurlyDoubleQuote]f and f\[Dagger]\[CloseCurlyDoubleQuote]\
\>", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, {
   3.5658756919133387`*^9, 3.565875711132572*^9}, 3.6483813273226833`*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"i", ",", "up"}], "]"}], ",", 
   RowBox[{
    SubscriptBox["n", "f"], "[", 
    RowBox[{"i", ",", "up"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565104437608678*^9, 3.565104468813106*^9}, 
   3.648381327323195*^9}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"i", ",", "up"}], "]"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.565104469916703*^9, {3.5658756076419907`*^9, 3.5658756215260153`*^9}, 
   3.648381327323545*^9}]
}, Open  ]],

Cell["\<\
Here the symbol \[OpenCurlyDoubleQuote]up\[CloseCurlyDoubleQuote] could be \
replaced by any other convenient one, say \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote]. \
\>", "Text",
 CellChangeTimes->{{3.5651045873981667`*^9, 3.5651046340629997`*^9}, {
   3.56510467016575*^9, 3.56510467803566*^9}, 3.6483813273239727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Canonical Angular Momentum Operators", "Subsubsection",
 CellChangeTimes->{{3.489167439070755*^9, 3.489167447978524*^9}, {
   3.517410237155714*^9, 3.517410247605551*^9}, {3.5658757317090087`*^9, 
   3.5658757357494154`*^9}, 3.6483813273244457`*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "J"}]], "Input",
 CellChangeTimes->{{3.565875742161027*^9, 3.565875742161027*^9}, 
   3.648381327325305*^9}],

Cell[BoxData[
 StyleBox["\<\"J is the canonical angular momentum operator. This operator \
requires two arguments. The first is site index and the second is coordinate \
direction. An optional third argument is used to denote different  species. \
Also included are the angular momentum raising and lowering operators, \
denoted by \!\(\*SuperscriptBox[\\\"J\\\", \\\"Plus\\\"]\) and \
\!\(\*SuperscriptBox[\\\"J\\\", \\\"Minus\\\"]\) respectively. The raising \
and lowering operators accept only one argument corresponding to site. A \
second (optional) argument will be taken to represent species.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565875809802746*^9, 3.648381327327983*^9},
 CellTags->"Info3565847009-2407871"]
}, Open  ]],

Cell["\<\
Use of symbols other than x, y or z to represent coordinate direction will \
result in incomplete or incorrect output.\
\>", "Text",
 CellChangeTimes->{{3.489167080217401*^9, 3.489167188436873*^9}, {
   3.4891673145562143`*^9, 3.4891673269008512`*^9}, {3.489167367517942*^9, 
   3.4891674289322042`*^9}, {3.490641240833664*^9, 3.4906412729765253`*^9}, 
   3.648381327328848*^9},
 TextJustification->1.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pauli Matrices", "Subsubsection",
 CellChangeTimes->{{3.489167918468789*^9, 3.4891679234608994`*^9}, 
   3.64838132732931*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\[Sigma]"}]], "Input",
 CellChangeTimes->{{3.565875815590356*^9, 3.565875815590356*^9}, 
   3.648381327329701*^9}],

Cell[BoxData[
 StyleBox["\<\"\[Sigma] is the Pauli spin matrix. This operator requires two \
arguments. The first is site index and the second is coordinate direction. An \
optional third argument is used to denote different spin species. Also \
included are the Pauli raising and lowering operators, denoted by \
\\!\\(\\*SuperscriptBox[\\\"\[Sigma]\\\", \\\"Plus\\\"]\\) and \
\\!\\(\\*SuperscriptBox[\\\"\[Sigma]\\\", \\\"Minus\\\"]\\) respectively. The \
raising and lowering operators require only one argument corresponding to \
site. A second argument (optional) will be taken to represent spin species.\"\
\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565875816261157*^9, 3.648381327331068*^9},
 CellTags->"Info3565847016-2407871"]
}, Open  ]],

Cell["\<\
Use of symbols other than x, y or z to represent coordinate direction will \
result in incomplete or incorrect output.\
\>", "Text",
 CellChangeTimes->{{3.489167080217401*^9, 3.489167188436873*^9}, {
   3.4891673145562143`*^9, 3.4891673269008512`*^9}, {3.489167367517942*^9, 
   3.4891674289322042`*^9}, {3.489243192158537*^9, 3.489243192972327*^9}, 
   3.490641278238695*^9, 3.648381327331505*^9},
 TextJustification->1.]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hubbard \[OpenCurlyDoubleQuote]X\[CloseCurlyDoubleQuote] operators", \
"Subsubsection",
 CellChangeTimes->{{3.489167452563136*^9, 3.489167461115636*^9}, {
   3.5658758802680693`*^9, 3.565875881094871*^9}, 3.648381327332485*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "X"}]], "Input",
 CellChangeTimes->{{3.565875835558391*^9, 3.565875835558391*^9}, 
   3.648381327333453*^9}],

Cell[BoxData[
 StyleBox["\<\"X is the Hubbard Operator. Three arguments are required. The \
first argument represents site. The second argument is taken to be the  \
direction of the 'Ket' spin and the third argument is taken to be the \
direction of the 'Bra spin\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658758362915926`*^9, 3.6483813273387547`*^9},
 CellTags->"Info3565847036-2407871"]
}, Open  ]],

Cell["The Hubbard X operator is defined below", "Text",
 CellChangeTimes->{{3.489167521360373*^9, 3.489167539297819*^9}, 
   3.648381327339609*^9},
 TextJustification->1.],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubsuperscriptBox["X", "i", 
     RowBox[{
      SubscriptBox["\[Sigma]", "1"], 
      SubscriptBox["\[Sigma]", "2"]}]], "=", 
    RowBox[{"\[LeftBracketingBar]", 
     SubscriptBox["\[Sigma]", "1"]}]}], "\[RightAngleBracket]"}], 
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    SubscriptBox["\[Sigma]", "2"], "\[LeftBracketingBar]"}]}]}]], "Text",
 CellChangeTimes->{{3.489167541694277*^9, 3.4891675776085157`*^9}, {
   3.489167613936277*^9, 3.489167639879834*^9}, {3.489167719439443*^9, 
   3.489167725023397*^9}, {3.48924321082771*^9, 3.489243259765127*^9}, {
   3.489243290216289*^9, 3.489243303594728*^9}, 3.648381327534225*^9},
 TextAlignment->Center,
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->14,
 FontWeight->"Bold"],

Cell["\<\
An example of the use of the Hubbard \"X\" operators is provided below.\
\>", "Text",
 CellChangeTimes->{{3.565875862983239*^9, 3.565875923199345*^9}, 
   3.648381327534803*^9}],

Cell["Activate Hubbard \[OpenCurlyDoubleQuote]X\[CloseCurlyDoubleQuote] \
Operators", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, {
   3.5658756919133387`*^9, 3.565875711132572*^9}, {3.565875992853467*^9, 
   3.5658760020574837`*^9}, 3.648381327535223*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "1", ",", "2"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"j", ",", "2", ",", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658759251961484`*^9, 3.5658759444777822`*^9}, 
   3.6483813275363913`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    RowBox[{"X", "[", 
     RowBox[{"i", ",", "1", ",", "2"}], "]"}], "**", 
    RowBox[{"X", "[", 
     RowBox[{"j", ",", "2", ",", "3"}], "]"}]}]}], "+", 
  RowBox[{
   RowBox[{"\[Delta]", "[", 
    RowBox[{"i", ",", "j"}], "]"}], "**", 
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "1", ",", "3"}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   RowBox[{
    RowBox[{"\[Delta]", "[", 
     RowBox[{"i", ",", "j"}], "]"}], "**", 
    RowBox[{"X", "[", 
     RowBox[{"i", ",", "1", ",", "2"}], "]"}], "**", 
    RowBox[{"X", "[", 
     RowBox[{"j", ",", "2", ",", "3"}], "]"}]}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5658759448521833`*^9, 3.565875955585002*^9}, 
   3.6483813275380077`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bra and Ket Vectors", "Subsubsection",
 CellChangeTimes->{{3.48916839732638*^9, 3.489168403246697*^9}, 
   3.648381327539052*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Bra"}]], "Input",
 CellChangeTimes->{{3.565876049793567*^9, 3.565876049793567*^9}, 
   3.648381327539445*^9}],

Cell[BoxData[
 StyleBox["\<\"Bra[x] represents a bra vector x using Dirac notation\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658760503863688`*^9, 3.64838132754113*^9},
 CellTags->"Info3565847250-2407871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Ket"}]], "Input",
 CellChangeTimes->{{3.565876056407979*^9, 3.565876056407979*^9}, 
   3.648381327542013*^9}],

Cell[BoxData[
 StyleBox["\<\"Ket[x] represents a ket vector x using Dirac notation\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.56587605709438*^9, 3.648381327542482*^9},
 CellTags->"Info3565847256-2407871"]
}, Open  ]],

Cell[TextData[StyleBox["The Bra and  Ket vectors accept one argument : the \
name of the vector. Using \"Vacuum\" as the argument leads to the vector \
having the special properties of the vacuum state.",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.489168420447652*^9, 3.4891685752053537`*^9}, {
   3.4891766241842613`*^9, 3.489176625695634*^9}, {3.489179268727709*^9, 
   3.4891792693201036`*^9}, 3.648381327544506*^9},
 TextJustification->1.,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Vacuum"}]], "Input",
 CellChangeTimes->{{3.5658760766568146`*^9, 3.5658760766568146`*^9}, 
   3.648381327544897*^9}],

Cell[BoxData[
 StyleBox["\<\"Vacuum is the symbol used to represent the vacuum state. In \
general different operators are taken to act on different basis and therefore \
Vacuum represents the direct product of the vacuum state of several different \
basis\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658760772184153`*^9, 3.648381327547874*^9},
 CellTags->"Info3565847277-2407871"]
}, Open  ]],

Cell["\<\
The example below demonstrates the use of the Bra and Ket vectors and the \
Vacuum state.\
\>", "Text",
 CellChangeTimes->{{3.5658760875768337`*^9, 3.565876113457279*^9}, 
   3.648381327548265*^9}],

Cell["\<\
Activate Fermionic Creation and Annihilation Operators \
\[OpenCurlyDoubleQuote]f and f\[Dagger]\[CloseCurlyDoubleQuote] and Bra and \
Ket Vectors\
\>", "Item",
 CellChangeTimes->{{3.4929703238519793`*^9, 3.492970361185996*^9}, {
   3.5658756919133387`*^9, 3.565875711132572*^9}, {3.5658761415841284`*^9, 
   3.5658761597737603`*^9}, 3.648381327548766*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f\[Dagger]", "[", "i", "]"}], "\[CircleTimes]", 
  RowBox[{"Ket", "[", "Vacuum", "]"}]}]], "Input",
 CellChangeTimes->{{3.5658761747029867`*^9, 3.565876207603444*^9}, 
   3.64838132754918*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f\[Dagger]", "[", "i", "]"}], "**", 
  TemplateBox[{"Vacuum"},
   "Ket"]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.56587619353222*^9, 3.565876208087045*^9}, 
   3.6483813276052017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "i", "]"}], "\[CircleTimes]", 
  RowBox[{"Ket", "[", "Vacuum", "]"}]}]], "Input",
 CellChangeTimes->{3.565876215372258*^9, 3.6483813276063213`*^9}],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565876215824659*^9, 3.64838132760697*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Canonical Position and Momentum Operators", "Subsubsection",
 CellChangeTimes->{{3.4906410673304043`*^9, 3.4906410788820066`*^9}, 
   3.6483813276082153`*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "p"}]], "Input",
 CellChangeTimes->{{3.565876236603895*^9, 3.565876236603895*^9}, 
   3.648381327609194*^9}],

Cell[BoxData[
 StyleBox["\<\"p is the canonical momentum operator. This operator can be \
called with one argument, taken to be site index, or two arguments. The \
second argument will be taken to be coordinate direction. Also included is \
the 3 dimensional canonical momentum vector, represented by OverVector[p], or \
\\!\\(\\*OverscriptBox[\\\"p\\\", \\\"\[RightVector]\\\"]\\).\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658762372278967`*^9, 3.648381327615095*^9},
 CellTags->"Info3565847437-2407871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "q"}]], "Input",
 CellChangeTimes->{{3.565876248272716*^9, 3.565876248272716*^9}, 
   3.648381327616102*^9}],

Cell[BoxData[
 StyleBox["\<\"q is the canonical position operator. This operator can be \
called with one argument, taken to be site index, or two arguments. The \
second argument will be taken to be coordinate direction. Also included is \
the 3 dimensional canonical position vector, represented by OverVector[q], or \
\!\(\*OverscriptBox[\\\"q\\\", \\\"\[RightVector]\\\"]\).\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565876305584017*^9, 3.648381327618297*^9},
 CellTags->"Info3565847505-2407871"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["VI: Simplifyfing and Manipulating Expressions",
 FontColor->Automatic]], "Section",
 CellChangeTimes->{{3.5533383959487753`*^9, 3.553338428215869*^9}, {
   3.5658776005562925`*^9, 3.5658776029912963`*^9}, {3.565901891682497*^9, 
   3.5659018931035786`*^9}, 3.648381327619239*^9},
 TextJustification->1.,
 FontFamily->"Times New Roman",
 FontSize->16,
 FontColor->GrayLevel[0]],

Cell["\<\
\tMany of the functions of the DiracQ package function assist users in \
simplifying or manipulating expressions. These functions are outlined below. \
These functions allow the user to perform many of the manipulations normally \
performed by hand.\
\>", "Text",
 CellChangeTimes->{{3.553338541255178*^9, 3.553338582111704*^9}, {
   3.553338650926846*^9, 3.553338737157463*^9}, {3.553338776484598*^9, 
   3.5533388197332573`*^9}, {3.565876372398934*^9, 3.565876379184946*^9}, {
   3.565898131260413*^9, 3.5658981602840734`*^9}, {3.5658987278415356`*^9, 
   3.5658987322737894`*^9}, {3.565898770313965*^9, 3.5658987767563334`*^9}, {
   3.5659004239565477`*^9, 3.5659004439486914`*^9}, {3.565900530078618*^9, 
   3.565900621533849*^9}, 3.648381327620516*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell["SimplifyQ", "Subsubsection",
 CellChangeTimes->{{3.5658987442854767`*^9, 3.5658987556321254`*^9}, 
   3.648381327623365*^9}],

Cell["\<\
The most basic function for simplifying expressions is the SimplifyQ \
function. This function' s use is similar to the Mathematica function \
Simplify, and should be used in place of Simplify when simplifying \
expressions while using DiracQ. Results of DiracQ functions are most often \
already simplified to the greatest degree possible.\
\>", "Text",
 CellChangeTimes->{{3.565898733752874*^9, 3.5658987424493713`*^9}, 
   3.648381327626317*^9}],

Cell["Example :", "Text",
 CellChangeTimes->{{3.565897706198101*^9, 3.565897721053951*^9}, 
   3.6483813276278677`*^9},
 FontWeight->"Bold"],

Cell["\<\
The following shows a use of SimplifyQ to simplify an expression.\
\>", "Text",
 CellChangeTimes->{{3.5658978419928684`*^9, 3.5658978766348495`*^9}, {
   3.5658984737810044`*^9, 3.565898504773777*^9}, 3.648381327628552*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "i_", "]"}], ":=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"m", " ", "\[Omega]"}], 
      RowBox[{"2", "\[HBar]"}]]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"q", "[", "i", "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       FractionBox[
        RowBox[{"p", "[", "i", "]"}], 
        RowBox[{"m", " ", "\[Omega]"}]]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a\[Dagger]", "[", "i_", "]"}], ":=", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"m", " ", "\[Omega]"}], 
      RowBox[{"2", "\[HBar]"}]]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"q", "[", "i", "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       FractionBox[
        RowBox[{"p", "[", "i", "]"}], 
        RowBox[{"m", " ", "\[Omega]"}]]}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.565898353711137*^9, {3.5658984201549373`*^9, 3.565898420829976*^9}, 
   3.648381327828898*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"a\[Dagger]", "[", "i", "]"}], "**", 
   RowBox[{"a", "[", "i", "]"}]}]}]], "Input",
 CellChangeTimes->{3.648381327829672*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyQ", "[", 
  RowBox[{"n", "[", "i", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.565898359832487*^9, 3.5658983680929594`*^9}, {
   3.56589843664188*^9, 3.5658984371839113`*^9}, 3.648381327830188*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
   RowBox[{
    FractionBox["1", "\[HBar]"], "**", 
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"q", "[", "i", "]"}]}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   RowBox[{
    FractionBox["1", "\[HBar]"], "**", 
    RowBox[{"q", "[", "i", "]"}], "**", 
    RowBox[{"p", "[", "i", "]"}]}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"m", " ", "\[Omega]", " ", "\[HBar]"}]], "**", 
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"p", "[", "i", "]"}]}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"], "**", 
    RowBox[{"q", "[", "i", "]"}], "**", 
    RowBox[{"q", "[", "i", "]"}]}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565898368775998*^9, 3.5658984376139355`*^9, 
  3.648381327832014*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["StandardOrderQ", "Subsubsection",
 CellChangeTimes->{{3.565898782391656*^9, 3.5658987909871473`*^9}, 
   3.6483813278334846`*^9}],

Cell["\<\
\tAnother function which can be utilized for simplification is \
StandardOrderQ. StandardOrderQ is similar to SimplifyQ but will reorder \
operators according to a standard order. The operators will be sorted \
according to operator type as well as arguments of the operators such as site \
index. When operators are reordered the commutation relations of the \
operators are accounted for. This is sometimes helpful, but can also make an \
expression more complicated, as reordering operators can create new terms \
that arise out of commutators.\
\>", "Text",
 CellChangeTimes->{{3.553339226695146*^9, 3.553339268349037*^9}, {
   3.553339359876905*^9, 3.5533395071065197`*^9}, {3.5533396150873623`*^9, 
   3.553339630212*^9}, {3.565876392429369*^9, 3.5658764569822826`*^9}, {
   3.5658985129942474`*^9, 3.5658985146413417`*^9}, 3.6483813278346653`*^9},
 TextJustification->1.],

Cell["Example :", "Text",
 CellChangeTimes->{{3.5658985467601786`*^9, 3.565898548031251*^9}, 
   3.565898642475653*^9, 3.648381327835091*^9},
 FontWeight->"Bold"],

Cell["\<\
Using the same example as used for SimplifyQ, we can see the benefit of \
reordering expressions so that the operators are in a standard order.\
\>", "Text",
 CellChangeTimes->{{3.565898541245863*^9, 3.565898567295353*^9}, {
   3.5658986185342836`*^9, 3.565898631702037*^9}, {3.5658987956604147`*^9, 
   3.56589880711207*^9}, 3.648381327835597*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardOrderQ", "[", 
  RowBox[{"n", "[", "i", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.565898515854411*^9, 3.56589852195776*^9}, 
   3.648381327836133*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"m", " ", "\[Omega]", " ", "\[HBar]"}]], "**", 
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"p", "[", "i", "]"}]}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{
    FractionBox[
     RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"], "**", 
    RowBox[{"q", "[", "i", "]"}], "**", 
    RowBox[{"q", "[", "i", "]"}]}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658985225287924`*^9, 3.648381327836926*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CommuteParts", "Subsubsection",
 CellChangeTimes->{{3.4880475150822783`*^9, 3.488047521718532*^9}, {
   3.4880479727124147`*^9, 3.488047973983673*^9}, {3.530399537447071*^9, 
   3.530399539413192*^9}, 3.5658786463127565`*^9, 3.565899324550666*^9, 
   3.648381327838162*^9},
 TextJustification->1.],

Cell["\<\
CommuteParts is used to \"manually\" reorganize the order if operators in an \
expression.\
\>", "Text",
 CellChangeTimes->{{3.5658785432326126`*^9, 3.5658785740676556`*^9}, 
   3.565899324550666*^9, 3.6483813278386927`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CommuteParts"}]], "Input",
 CellChangeTimes->{{3.5658785102775664`*^9, 3.565878510282566*^9}, 
   3.5658993245516653`*^9, 3.648381327839129*^9}],

Cell[BoxData[
 StyleBox["\<\"CommuteParts[A,B,C] will reverse the order of the noncommuting \
objects specified by the lists B and C. B and C are lists of consecutive \
noncommutative objects found in the expression A specified by numerical \
ordering of the noncommutative objects found in A. Therefore, to permute the \
second and third NCOs found in A with the fourth NCO found in A, B would be \
{2,3}, and C would be {4}.\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565878510872567*^9, 3.565899324554666*^9, 
  3.6483813278489227`*^9},
 CellTags->"Info3565849710-2407871"]
}, Open  ]],

Cell["Examples :", "Item",
 CellChangeTimes->{{3.488047948377273*^9, 3.4880479522339783`*^9}, 
   3.565899324555666*^9, 3.648381327849452*^9},
 TextJustification->1.,
 FontWeight->"Bold"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"1", ",", " ", "x"}], "]"}], " ", "**", " ", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"2", ",", " ", "x"}], "]"}], " ", "**", " ", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"1", ",", " ", "z"}], "]"}], " ", "**", " ", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"2", ",", " ", "z"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.565878522942584*^9, 3.5658785253025875`*^9}, 
   3.565899324556666*^9, 3.648381327850704*^9}],

Cell["\<\
In this example we will move \[Sigma][1,z] to the left of the first two terms:\
\>", "Text",
 CellChangeTimes->{{3.530396509190461*^9, 3.530396529531026*^9}, {
   3.565878665762784*^9, 3.565878672627794*^9}, 3.565899324558666*^9, 
   3.648381327851156*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommuteParts", "[", 
  RowBox[{"A", ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658786821128073`*^9, 3.5658786821128073`*^9}, 
   3.565899324558666*^9, 3.648381327854313*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"1", ",", "y"}], "]"}], "**", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"2", ",", "x"}], "]"}], "**", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"2", ",", "z"}], "]"}]}]}], "+", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658786831728086`*^9, 3.5658993245616665`*^9, 
  3.6483813278549013`*^9}]
}, Open  ]],

Cell["\<\
Here we move \[Sigma][2,z] to the first slot, so we need to slide it past the \
first three elements:\
\>", "Text",
 CellChangeTimes->{{3.5303965640578413`*^9, 3.530396578874571*^9}, {
   3.530396868242222*^9, 3.530396878095729*^9}, {3.565878710082846*^9, 
   3.565878722637864*^9}, 3.5658993245636663`*^9, 3.648381327855506*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommuteParts", "[", 
  RowBox[{"A", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658787318278766`*^9, 3.565878733127878*^9}, 
   3.5658993245646667`*^9, 3.648381327856532*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"1", ",", "x"}], "]"}], "**", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"1", ",", "z"}], "]"}], "**", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"2", ",", "y"}], "]"}]}]}], "+", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565878733692879*^9, 3.5658993245666666`*^9, 
  3.64838132785709*^9}]
}, Open  ]],

Cell["\<\
If the commutator of the two terms that the user requests to permute is zero, \
the output will simply be the input with the two requested terms permuted. \
However, the result is automatically resorted, so no change is observed.\
\>", "Text",
 CellChangeTimes->{{3.484082988734375*^9, 3.484083030546875*^9}, {
   3.484083215453125*^9, 3.484083224875*^9}, {3.488751364280484*^9, 
   3.488751392775613*^9}, {3.4910734949008083`*^9, 3.491073497998837*^9}, 
   3.530395102158955*^9, 3.5658993245686665`*^9, 3.6483813278576117`*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommuteParts", "[", 
  RowBox[{"A", ",", " ", 
   RowBox[{"{", "3", "}"}], ",", " ", 
   RowBox[{"{", "4", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658787593779154`*^9, 3.5658787593829155`*^9}, 
   3.565899324569667*^9, 3.6483813278580437`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"1", ",", "x"}], "]"}], "**", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"2", ",", "x"}], "]"}], "**", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"2", ",", "z"}], "]"}], "**", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"1", ",", "z"}], "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565878759912916*^9, 3.5658993245716667`*^9, 
  3.6483813278584843`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["PushOperatorLeft and PushOperatorRight",
 FontColor->GrayLevel[0]]], "Subsubsection",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.51656278875*^9, 
   3.516562790671875*^9}, {3.517773696359375*^9, 3.517773699890625*^9}, {
   3.517774102625*^9, 3.517774103203125*^9}, {3.5658996292020907`*^9, 
   3.5658996374845643`*^9}, {3.5659008769964604`*^9, 3.565900878680557*^9}, {
   3.5659009181658154`*^9, 3.5659009190968685`*^9}, 3.648381327860589*^9}],

Cell["\<\
Sometimes operators need to be reordered \"manually\", but specifying \
individual operators to move is time consuming or difficult for large \
expressions.
PushOperatorLeft and PushOperatorRight allow the user to move one operator \
all the way to the right or left in the ordering \
\>", "Text",
 CellChangeTimes->{{3.565899639627687*^9, 3.5658997366142344`*^9}, {
   3.5659004032843657`*^9, 3.5659004212093906`*^9}, 3.648381327861124*^9}],

Cell["Example:", "Text",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9, 3.5658996220876837`*^9, 3.648381327861438*^9},
 FontWeight->"Bold"],

Cell[TextData[StyleBox["In the DiracQ Palette activate Canonical Position and \
Momentum Operators (p and q).",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, 3.51656444834375*^9, {3.517773916296875*^9, 
   3.517773933375*^9}, 3.648381327862116*^9},
 FontSize->14],

Cell["\<\
In the example below, we want to move the operator p[i, z] all the way to the \
left in every term.\
\>", "Text",
 CellChangeTimes->{{3.5659007187184076`*^9, 3.565900760777813*^9}, 
   3.648381327862484*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PushOperatorLeft", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}]}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
   3.516564386109375*^9, 3.516564389921875*^9}, {3.516564451421875*^9, 
   3.516564456109375*^9}, {3.51777400996875*^9, 3.5177740889375*^9}, {
   3.51777412771875*^9, 3.517774145859375*^9}, 3.648381327865275*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", 
      SuperscriptBox["\[HBar]", "2"]}], ")"}], "**", 
    RowBox[{"q", "[", 
     RowBox[{"i", ",", "z"}], "]"}]}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
     ")"}], "**", 
    RowBox[{"p", "[", 
     RowBox[{"i", ",", "z"}], "]"}], "**", 
    RowBox[{"q", "[", 
     RowBox[{"i", ",", "y"}], "]"}], "**", 
    RowBox[{"q", "[", 
     RowBox[{"i", ",", "y"}], "]"}]}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
     ")"}], "**", 
    RowBox[{"p", "[", 
     RowBox[{"i", ",", "z"}], "]"}], "**", 
    RowBox[{"q", "[", 
     RowBox[{"i", ",", "z"}], "]"}], "**", 
    RowBox[{"q", "[", 
     RowBox[{"i", ",", "z"}], "]"}]}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, 
   3.516564456796875*^9, 3.5165659195625*^9, 3.516643054765625*^9, {
   3.51777406365625*^9, 3.517774090203125*^9}, 3.5177741480625*^9, 
   3.52746978300799*^9, 3.565900711173976*^9, 3.5659007628749332`*^9, 
   3.6483813278674192`*^9}]
}, Open  ]],

Cell["\<\
The operator p[i,z] is now pushed all the way to the left. The operation of \
PushOperatorRight is identical.\
\>", "Text",
 CellChangeTimes->{{3.5274699284217453`*^9, 3.527469972531734*^9}, {
   3.527470007969322*^9, 3.527470010827136*^9}, {3.565900748097088*^9, 
   3.5659007561325474`*^9}, {3.565900889734189*^9, 3.5659009011738434`*^9}, 
   3.648381327867876*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["VII: Sums",
 FontFamily->"Times",
 FontSize->16]], "Section",
 CellChangeTimes->{{3.483977041828125*^9, 3.483977042328125*^9}, {
   3.530387536955484*^9, 3.530387539563219*^9}, {3.530411955864708*^9, 
   3.530411958766539*^9}, 3.530448176308919*^9, 3.552127642281373*^9, {
   3.55233386072859*^9, 3.552333860818825*^9}, 3.552334763149053*^9, {
   3.5658770369133015`*^9, 3.5658770390505047`*^9}, 3.5658775978062887`*^9, {
   3.5658798761704836`*^9, 3.565879877325485*^9}, {3.5659018943596506`*^9, 
   3.5659018970768056`*^9}, 3.64838132786827*^9},
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->16],

Cell[CellGroupData[{

Cell["Basic Use", "Subsubsection",
 CellChangeTimes->{{3.5658764964971523`*^9, 3.5658765022847624`*^9}, 
   3.648381327868732*^9},
 FontSize->14],

Cell[TextData[{
 "    The following is an explanation of how the Sum function is used in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". If you are familiar with using this function, feel free to skip to the \
section titled \[OpenCurlyDoubleQuote]Use of Sums in the Package\
\[CloseCurlyDoubleQuote].\n    Sums can be written in a few ways. One is to \
explicitly write the Sum function, the other to use sigma sum notation. The \
explanation of the Sum function given here is by no means complete; for a \
thorough explanation of this function see the Mathematica Documentation \
Center. The first argument of Sum is the expression to be summed over. Each \
successive argument given is taken to be an index of summation. The examples \
below show the correct way to use Sum and some common errors."
}], "Text",
 CellChangeTimes->{{3.483977050578125*^9, 3.483977138640625*^9}, {
   3.48397716946875*^9, 3.483977389453125*^9}, {3.48397742215625*^9, 
   3.48397750203125*^9}, 3.489179523933127*^9, {3.489244237338719*^9, 
   3.489244245336402*^9}, {3.5521689041216507`*^9, 3.552168973103059*^9}, 
   3.5658765194447927`*^9, 3.64838132787464*^9},
 TextJustification->1.],

Cell["Ex. (1): Basic Input", "Item",
 CellChangeTimes->{{3.48397753128125*^9, 3.48397754059375*^9}, {
   3.4839777693125*^9, 3.4839777785*^9}, 3.64838132787508*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell["\<\
The indefinite sum over some expression can be written as follows.\
\>", "Text",
 CellChangeTimes->{{3.48397760653125*^9, 3.483977645515625*^9}, 
   3.648381327875442*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "i", "]"}], " ", "+", " ", 
    RowBox[{"b", "[", "i", "]"}]}], ",", " ", "i"}], "]"}]], "Input",
 CellChangeTimes->{{3.5658765396312275`*^9, 3.5658765396312275`*^9}, 
   3.648381327875945*^9}],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "i"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", "[", "i", "]"}], "+", 
    RowBox[{"b", "[", "i", "]"}]}], ")"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565876540395629*^9, 3.648381327876357*^9}]
}, Open  ]],

Cell["\<\
Note that if the expression given does not depend on the index of summation \
Mathematica will automatically evaluate the sum.\
\>", "Text",
 CellChangeTimes->{{3.483977603765625*^9, 3.483977603875*^9}, {
   3.483977697671875*^9, 3.4839777323125*^9}, 3.648381327876768*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"a", " ", "+", " ", "b"}], ",", " ", "i"}], "]"}]], "Input",
 CellChangeTimes->{{3.5658765484764433`*^9, 3.5658765484764433`*^9}, 
   3.648381327877202*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "+", "b"}], ")"}], " ", "i"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565876550005246*^9, 3.6483813278775587`*^9}]
}, Open  ]],

Cell["\<\
For definite sums, the minimum and maximum value of the sum are specified \
with the summation index in a list.\
\>", "Text",
 CellChangeTimes->{{3.4839782876875*^9, 3.48397832821875*^9}, 
   3.648381327878031*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "i", "]"}], " ", "+", " ", 
    RowBox[{"b", "[", "i", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.565876561346466*^9, 3.565876561346466*^9}, 
   3.648381327879182*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "\[Infinity]"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", "[", "i", "]"}], "+", 
    RowBox[{"b", "[", "i", "]"}]}], ")"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658765625320683`*^9, 3.648381327880857*^9}]
}, Open  ]],

Cell["\<\
Several indices of summation can be specified in the function\
\>", "Text",
 CellChangeTimes->{{3.48397837484375*^9, 3.4839783881875*^9}, 
   3.6483813278812513`*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "i", ",", "j"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", " ", "j"}], "]"}], " ", "+", " ", 
    RowBox[{"b", "[", 
     RowBox[{"i", ",", " ", "j"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"j", ",", " ", "1", ",", " ", "\[Infinity]"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5658765918133197`*^9, 3.565876631546589*^9}, 
   3.648381327882094*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "\[Infinity]"], 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "\[Infinity]"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "+", 
     RowBox[{"b", "[", 
      RowBox[{"i", ",", "j"}], "]"}]}], ")"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5658766004089346`*^9, 3.5658766340269938`*^9}, 
   3.6483813278826647`*^9}]
}, Open  ]],

Cell["Ex. (2) : Sigma Notation", "Item",
 CellChangeTimes->{{3.4839777585625*^9, 3.483977788984375*^9}, 
   3.648381327883082*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell["\<\
To use sigma notation first call a sigma sum function by typing the following \
: \[EscapeKey]sumt\[EscapeKey].
The following should appear\
\>", "Text",
 CellChangeTimes->{{3.48397779034375*^9, 3.48397784921875*^9}, {
   3.483977880171875*^9, 3.4839779094375*^9}, 3.648381327885271*^9},
 TextJustification->1.],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"\[Placeholder]", "=", "\[Placeholder]"}], "\[Placeholder]"], 
  "\[Placeholder]"}]], "Text",
 CellChangeTimes->{{3.4839776689375*^9, 3.48397768403125*^9}, {
   3.4839779114375*^9, 3.483977920734375*^9}, 3.552737362729126*^9, 
   3.648381327992901*^9},
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->14],

Cell[TextData[{
 "The summation sigma can also be called from the DiracQ palette typesetting \
section or any of the other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " palettes. Now the blank spaces can be filled as desired. If a space is not \
to be used simply highlight it and delete it. Below is the equivalent of the \
input from Ex. (1) written in sigma notation."
}], "Text",
 CellChangeTimes->{{3.48397792384375*^9, 3.483977971640625*^9}, {
   3.483978004359375*^9, 3.48397803734375*^9}, 3.489179534781073*^9, {
   3.4929737182455997`*^9, 3.492973780332364*^9}, 3.648381327993758*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "i"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", "[", "i", "]"}], "+", 
    RowBox[{"b", "[", "i", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{3.648381327994323*^9}],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "i"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"a", "[", "i", "]"}], "+", 
    RowBox[{"b", "[", "i", "]"}]}], ")"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565876678034671*^9, 3.648381327994749*^9}]
}, Open  ]],

Cell["We can see the equivalence between the two forms as follows.", "Text",
 CellChangeTimes->{{3.483978039796875*^9, 3.483978064609375*^9}, 
   3.489169697749865*^9, 3.4891795363103943`*^9, 3.648381327995125*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "i", "]"}], "+", 
     RowBox[{"b", "[", "i", "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{3.648381327996276*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Plus", "[", 
      RowBox[{
       RowBox[{"a", "[", "i", "]"}], ",", 
       RowBox[{"b", "[", "i", "]"}]}], "]"}], ",", "i"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658766966923037`*^9, 3.648381327998218*^9}]
}, Open  ]],

Cell["\<\
It is not possible to sum over several indices using one sigma function, as \
is conventionally done by hand. A separate sigma must be called for each \
index of summation.\
\>", "Text",
 CellChangeTimes->{{3.48397814165625*^9, 3.483978198234375*^9}, 
   3.489179539388948*^9, {3.565876752571602*^9, 3.565876765613225*^9}, 
   3.648381327998763*^9},
 TextJustification->1.],

Cell[TextData[StyleBox["Incorrect:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.552168860240376*^9, 3.5521688716031837`*^9}, 
   3.5658767190159426`*^9, 3.648381327999077*^9},
 TextJustification->1.],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", 
   RowBox[{"i", ",", "j"}]], 
  RowBox[{"a", "[", 
   RowBox[{"i", ",", "j"}], "]"}]}]], "Input",
 CellChangeTimes->{3.64838132800075*^9},
 EmphasizeSyntaxErrors->True],

Cell[TextData[StyleBox["Correct:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.5521688736429043`*^9, 3.5521688830354633`*^9}, {
   3.5658767222295485`*^9, 3.5658767453019896`*^9}, 3.648381328001164*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "i"], 
  RowBox[{
   UnderscriptBox["\[Sum]", "j"], 
   RowBox[{"a", "[", 
    RowBox[{"i", ",", "j"}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.648381328001648*^9}],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "i"], 
  RowBox[{
   UnderscriptBox["\[Sum]", "j"], 
   RowBox[{"a", "[", 
    RowBox[{"i", ",", "j"}], "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658767285319595`*^9, 3.648381328002146*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use of Sums in the Package: Definite and Indefinite Sums", \
"Subsubsection",
 CellChangeTimes->{{3.4903702287566633`*^9, 3.49037023630484*^9}, {
   3.490642188154482*^9, 3.490642199167509*^9}, 3.6483813280026817`*^9},
 TextJustification->1.,
 FontSize->14],

Cell["\<\
     Both definite and indefinite sums are recognized by the package. When \
indefinite sums are used every relevant value is taken to lie within the \
bounds of the sum. This means that if an index with an undefined value is \
encountered along with a summed index in a delta function, the delta function \
will always evaluate to one as it is assumed that the undefined index, \
whatever it' s value, will lie within the bounds of the sum. This is \
demonstrated below. (Remember to select the fermi operators as active on the \
palette).\
\>", "Text",
 CellChangeTimes->{{3.4903703055350447`*^9, 3.490370530709391*^9}, {
   3.4903705811632557`*^9, 3.490370585810491*^9}, {3.490453009745283*^9, 
   3.4904530103546267`*^9}, {3.530387145743956*^9, 3.5303871867164097`*^9}, 
   3.64838132800354*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{"f", "[", "i", "]"}]}], ",", 
   RowBox[{"f\[Dagger]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.648381328004066*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.565876796594879*^9, 3.5658768053464947`*^9}, 
   3.648381328004385*^9}]
}, Open  ]],

Cell["\<\
Although the value of j and the bounds of the sum are both not specified, it \
is assumed the value of j lies somewhere within the bounds of the sum and the \
answer evaluates to unity in the above example. Definite sums come in two \
types : with bounds that are defined and with undefined bounds. For example, \
the bounds of the sum below are specified and have definite values.\
\>", "Text",
 CellChangeTimes->{{3.490370587916131*^9, 3.490370666965126*^9}, {
   3.490453041182192*^9, 3.4904530419202967`*^9}, {3.490642117232088*^9, 
   3.490642117788974*^9}, {3.530387218330868*^9, 3.53038723401184*^9}, 
   3.648381328005035*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "12"], 
  RowBox[{"f", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{3.6483813280068207`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "1", "]"}], "+", 
  RowBox[{"f", "[", "2", "]"}], "+", 
  RowBox[{"f", "[", "3", "]"}], "+", 
  RowBox[{"f", "[", "4", "]"}], "+", 
  RowBox[{"f", "[", "5", "]"}], "+", 
  RowBox[{"f", "[", "6", "]"}], "+", 
  RowBox[{"f", "[", "7", "]"}], "+", 
  RowBox[{"f", "[", "8", "]"}], "+", 
  RowBox[{"f", "[", "9", "]"}], "+", 
  RowBox[{"f", "[", "10", "]"}], "+", 
  RowBox[{"f", "[", "11", "]"}], "+", 
  RowBox[{"f", "[", "12", "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658768220073237`*^9, 3.6483813280102158`*^9}]
}, Open  ]],

Cell["The sum below, however, is definite with undefined bounds.", "Text",
 CellChangeTimes->{{3.490370866662362*^9, 3.490370882373314*^9}, {
   3.4904530676121273`*^9, 3.490453113048506*^9}, 3.648381328010651*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "a"}], "b"], 
  RowBox[{"f", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{3.648381328011622*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "a"}], "b"], 
  RowBox[{"f", "[", "i", "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658768399629555`*^9, 3.648381328013816*^9}]
}, Open  ]],

Cell[TextData[StyleBox["These two types of definite sums are treated \
differently by the package and by Mathematica as a whole. Sums with defined \
bounds are evaluated immediately. Because the sum is evaluated immediately \
there is no difficulty evaluating expression with defined sums, as shown \
below.",
 FontSize->12,
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.490370909903973*^9, 3.490370932918461*^9}, {
   3.4903709852279263`*^9, 3.4903710210883636`*^9}, {3.4904531323845387`*^9, 
   3.490453134089074*^9}, {3.565876872208212*^9, 3.5658768863262367`*^9}, 
   3.648381328014668*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "12"], 
    RowBox[{"f", "[", "i", "]"}]}], ",", 
   RowBox[{"f\[Dagger]", "[", "5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.648381328015697*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565876900257061*^9, 3.64838132801602*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "12"], 
    RowBox[{"f", "[", "i", "]"}]}], ",", 
   RowBox[{"f\[Dagger]", "[", "13", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.648381328016588*^9}],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658769124562826`*^9, 3.648381328016903*^9}]
}, Open  ]],

Cell["\<\
Sums with undefined bounds remain unevaluated. When the package recognizes \
that a sum has been included with bounds that are unspecified, it does not \
evaluate \[Delta]'s. This is because it is unknown in general whether a value \
lies between the bounds of the sum. The example below demonstrates this.\
\>", "Text",
 CellChangeTimes->{{3.4903710324916887`*^9, 3.490371045386383*^9}, {
   3.490371415125882*^9, 3.490371425337741*^9}, {3.490371532577587*^9, 
   3.4903716423634357`*^9}, {3.490371686894828*^9, 3.490371695050798*^9}, 
   3.648381328018478*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "T"], 
    RowBox[{"f", "[", "i", "]"}]}], ",", 
   RowBox[{"f\[Dagger]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.648381328020081*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "T"], 
  RowBox[{"\[Delta]", "[", 
   RowBox[{"i", ",", "j"}], "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658769347175217`*^9, 3.6483813280214643`*^9}]
}, Open  ]],

Cell["\<\
It is unknown whether 1 < j < T, so the sum remains unevaluated. The example \
below demonstrates an unfortunate consequence of this feature  inherited from \
the rules of  Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.490371734269662*^9, 3.490371847852743*^9}, {
   3.4904532142515163`*^9, 3.490453215135997*^9}, {3.530387339470501*^9, 
   3.530387354083851*^9}, 3.648381328022339*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "T"], 
    RowBox[{"f", "[", "i", "]"}]}], ",", 
   RowBox[{"f\[Dagger]", "[", 
    RowBox[{"T", "-", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.64838132802291*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "T"], 
  RowBox[{"\[Delta]", "[", 
   RowBox[{"i", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "T"}]}], "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565876959786766*^9, 3.6483813280233192`*^9}]
}, Open  ]],

Cell["\<\
It is obvious that this expression should evaluate to one. However, because \
Mathematica does not recognize this, the input remains unevaluated.\
\>", "Text",
 CellChangeTimes->{{3.490371860943089*^9, 3.49037194764863*^9}, {
   3.490453241263968*^9, 3.4904532608077602`*^9}, {3.53038746844214*^9, 
   3.530387509986514*^9}, {3.565876971627187*^9, 3.565876984372409*^9}, 
   3.64838132802378*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"T", " ", "-", " ", "1"}], ")"}], " ", "<", " ", "T"}]], "Input",
 CellChangeTimes->{{3.565876995214428*^9, 3.565876995214428*^9}, 
   3.648381328024218*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", "T"}], "<", "T"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658769957448287`*^9, 3.648381328024774*^9}]
}, Open  ]],

Cell["\<\
However, if T is given a value this expression will evaluate to True.\
\>", "Text",
 CellChangeTimes->{{3.4903719694181757`*^9, 3.490371989232111*^9}, 
   3.6483813280251637`*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", " ", "=", " ", "7"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"T", " ", "-", " ", "1"}], ")"}], " ", "<", " ", "T"}]}], "Input",
 CellChangeTimes->{{3.5658770158844643`*^9, 3.5658770158844643`*^9}, 
   3.648381328026174*^9}],

Cell[BoxData["True"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565877016321265*^9, 3.648381328026545*^9}]
}, Open  ]],

Cell["\<\
At this point then it is necessary to leave \[Delta]' s unevaluated or cancel \
them by hand when using undefined bounds in a definite sum.\
\>", "Text",
 CellChangeTimes->{{3.4903720173972893`*^9, 3.4903720872129793`*^9}, {
   3.490453273680626*^9, 3.4904532994963713`*^9}, 3.6483813280271606`*^9},
 TextJustification->1.]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["VIII: Vector or Tensor Input", "Section",
 CellChangeTimes->{{3.491075311595749*^9, 3.4910753132045717`*^9}, {
   3.552178940294116*^9, 3.552178949982806*^9}, {3.55233386321098*^9, 
   3.5523338654497757`*^9}, 3.5523347930769787`*^9, {3.553251094768435*^9, 
   3.5532511000093718`*^9}, {3.5532528444371433`*^9, 3.553252847091344*^9}, {
   3.565877520556181*^9, 3.565877524816187*^9}, 3.565877595521286*^9, {
   3.5658798788954873`*^9, 3.5658798804954896`*^9}, {3.5659018995679483`*^9, 
   3.565901904211214*^9}, 3.648381328027556*^9},
 TextJustification->1.,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell[TextData[{
 "\tThe functions of the DiracQ package are capable of evaluating input in \
the form of tensors of any order. This ability is useful for performing \
calculations involving vector operators, such as the position and momentum \
vector operators ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "\[RightVector]"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]]],
 ". These operators are included in the package. An example of their use is \
shown below."
}], "Text",
 CellChangeTimes->{{3.553219791966722*^9, 3.553219863218473*^9}, {
   3.553251108242257*^9, 3.553251109097777*^9}, {3.553251186563278*^9, 
   3.5532512215538263`*^9}, {3.553251252787594*^9, 3.5532513261161823`*^9}, {
   3.5532515855957403`*^9, 3.55325165705763*^9}, 3.565877049471323*^9, 
   3.648381328031369*^9},
 TextJustification->1.],

Cell["\<\
Calling the position and momentum vectors as input will produce their \
definitions.\
\>", "Text",
 CellChangeTimes->{{3.55325168226306*^9, 3.5532516943638887`*^9}, {
   3.55325175901889*^9, 3.55325176610878*^9}, {3.55325184406431*^9, 
   3.553251867901559*^9}, 3.6483813280317707`*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["q", "\[RightVector]"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{3.648381328032572*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"q", "[", 
    RowBox[{"i", ",", "y"}], "]"}], ",", 
   RowBox[{"q", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658770638077483`*^9, 3.648381328036119*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{3.648381328036564*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "y"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565877070952561*^9, 3.6483813280369873`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["The functions of the package are written to be able \
to accept these operators as input.",
 FontSize->12]], "Text",
 CellChangeTimes->{{3.491075424700392*^9, 3.491075446226918*^9}, {
   3.552178941156954*^9, 3.552178966847427*^9}, {3.55325189072116*^9, 
   3.5532518913738527`*^9}, 3.648381328037608*^9},
 TextJustification->1.,
 FontSize->14],

Cell["Activate \"q and p\"", "Item",
 CellChangeTimes->{{3.492976011984395*^9, 3.492976021158371*^9}, {
   3.552178941167989*^9, 3.552178966848259*^9}, 3.648381328038006*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{
    OverscriptBox["q", "\[RightVector]"], "[", "i", "]"}], ",", 
   RowBox[{
    OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.648381328038488*^9}],

Cell[BoxData["\<\"Requesting the commutator of an array A, with another array \
B gives an array C consisting of the Mathematica output C = Outer[Commutator, \
A, B]. For example if A is an array of length 'a' and B is a scalar the \
result is an array of length 'a'.\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565877101388214*^9, 3.56587735565595*^9, 
  3.6483813280437937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "\[HBar]"}], ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"\[ImaginaryI]", " ", "\[HBar]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"\[ImaginaryI]", " ", "\[HBar]"}]}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565877101450615*^9, 3.56587735571095*^9, 
  3.648381328044289*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\t", 
  StyleBox[
   RowBox[{
   "The", " ", "printed", " ", "note", " ", "informs", " ", "us", " ", "how", 
    " ", "the", " ", "result", " ", "is", " ", 
    RowBox[{"obtained", ".", " ", "The"}], " ", "package", " ", "is", " ", 
    "able", " ", "to", " ", "perform", " ", "such", " ", "computations", " ", 
    "with", " ", "tensors", " ", "of", " ", "any", " ", 
    RowBox[{"order", ".", " ", "Users"}], " ", "are", " ", "free", " ", "to", 
    " ", "create", " ", "any", " ", "tensor", " ", "using", " ", "any", " ", 
    "combination", " ", "of", " ", "operators", " ", "and", " ", "are", " ", 
    "not", " ", "resricted", " ", "to", " ", "using", " ", "a", " ", 
    "predefined", " ", "vector", " ", "such", " ", "as", " ", 
    RowBox[{
     FormBox[
      OverscriptBox["p", "\[RightVector]"],
      TraditionalForm], ".", " ", "An"}], " ", "example", " ", "using", " ", 
    "3", "rd", " ", "rank", " ", "tensors", " ", "of", " ", "Pauli", " ", 
    "Matrices", " ", "is", " ", "given", " ", 
    RowBox[{"below", "."}]}],
   FontFamily->"Times"]}]], "Text",
 CellChangeTimes->{{3.565877153429906*^9, 3.5658771569711123`*^9}, 
   3.648381328048675*^9},
 FontFamily->"Times New Roman"],

Cell["\<\
Activate Pauli Spin Matrices \"\[Sigma]\"\
\>", "Item",
 CellChangeTimes->{{3.5658774191560388`*^9, 3.565877438401066*^9}, 
   3.648381328049189*^9},
 FontSize->14,
 FontWeight->"Bold"],

Cell[TextData[StyleBox["First I define two 3 rd rank tensors using Pauli \
Matrices. These tensors are arbitrary.",
 FontSize->12]], "Text",
 CellChangeTimes->{{3.55325248460894*^9, 3.553252535102806*^9}, 
   3.6483813280496063`*^9},
 TextJustification->1.,
 FontSize->14],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tensor1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"i", ",", "x"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"j", ",", "y"}], "]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"j", ",", "y"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"i", ",", "z"}], "]"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tensor2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"i", ",", "z"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"j", ",", "x"}], "]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"j", ",", "x"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"i", ",", "y"}], "]"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.5532521290089006`*^9, 3.5532521897437887`*^9}, {
   3.553252223065339*^9, 3.553252303417263*^9}, 3.648381328050704*^9},
 TextJustification->1.],

Cell["\<\
Using the Mathematica functions TensorRank and MatrixForm provide additional \
information about our tensors.\
\>", "Text",
 CellChangeTimes->{{3.5532525368553677`*^9, 3.5532525753508797`*^9}, 
   3.6483813280511103`*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TensorRank", "[", "Tensor1", "]"}]], "Input",
 CellChangeTimes->{{3.553252191798793*^9, 3.553252198837295*^9}, 
   3.6483813280520153`*^9},
 TextJustification->1.],

Cell[BoxData["3"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.553252199301634*^9, {3.553252239229733*^9, 3.553252255516835*^9}, 
   3.5658773790109825`*^9, 3.648381328052352*^9},
 TextJustification->1.]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "Tensor1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Tensor2", "]"}]}], "Input",
 CellChangeTimes->{{3.55325220390161*^9, 3.553252212812004*^9}, {
   3.553252308535305*^9, 3.553252316805236*^9}, 3.648381328052785*^9},
 TextJustification->1.],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"i", ",", "x"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"j", ",", "y"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"j", ",", "y"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"i", ",", "z"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.553252213410569*^9, 3.5532522576736526`*^9}, {
   3.553252305676776*^9, 3.553252317346641*^9}, 3.5658773818059864`*^9, 
   3.6483813280537767`*^9},
 TextJustification->1.],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"i", ",", "z"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"j", ",", "x"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"j", ",", "x"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"i", ",", "y"}], "]"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.553252213410569*^9, 3.5532522576736526`*^9}, {
   3.553252305676776*^9, 3.553252317346641*^9}, 3.5658773818109865`*^9, 
   3.648381328054517*^9},
 TextJustification->1.]
}, Open  ]],

Cell["\<\
The DiracQ functions Commutator and ProductQ are capable of performing \
operations involving the noncommutative objects within these tensors.\
\>", "Text",
 CellChangeTimes->{{3.5532526016554947`*^9, 3.553252662437627*^9}, 
   3.648381328055416*^9},
 TextJustification->1.,
 FontSize->14],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tensorcommutator", "=", 
  RowBox[{"Commutator", "[", 
   RowBox[{"Tensor1", ",", "Tensor2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.55325232086395*^9, 3.553252344453535*^9}, {
   3.553252599375922*^9, 3.553252617349484*^9}, {3.553252693102108*^9, 
   3.553252698877554*^9}, 3.648381328055841*^9},
 TextJustification->1.],

Cell[BoxData["\<\"Requesting the commutator of an array A, with another array \
B gives an array C consisting of the Mathematica output C = Outer[Commutator, \
A, B]. For example if A is an array of length 'a' and B is a scalar the \
result is an array of length 'a'.\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.553252333024535*^9, 3.553252344948147*^9}, {
   3.553252670297447*^9, 3.553252700176573*^9}, 3.5658774011610136`*^9, 
   3.565877458491094*^9, 3.648381328056863*^9},
 TextJustification->1.],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"i", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", "0", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"i", ",", "z"}], "]"}]}], "}"}]}], "}"}]}], "}"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            RowBox[{
             RowBox[{"\[Delta]", "[", 
              RowBox[{"i", ",", "j"}], "]"}], "**", 
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"j", ",", "x"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"j", ",", "z"}], "]"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"j", ",", "z"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            RowBox[{
             RowBox[{"\[Delta]", "[", 
              RowBox[{"i", ",", "j"}], "]"}], "**", 
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"j", ",", "x"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"j", ",", "z"}], "]"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"j", ",", "z"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            RowBox[{
             RowBox[{"\[Delta]", "[", 
              RowBox[{"i", ",", "j"}], "]"}], "**", 
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"i", ",", "y"}], "]"}]}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", 
            RowBox[{
             RowBox[{"\[Delta]", "[", 
              RowBox[{"i", ",", "j"}], "]"}], "**", 
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"i", ",", "y"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"i", ",", "x"}], "]"}]}], "}"}]}], "}"}]}], "}"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5532523331248817`*^9, 3.5532523450450363`*^9}, {
   3.553252670381137*^9, 3.553252700275358*^9}, 3.565877401226014*^9, 
   3.565877458581094*^9, 3.648381328058408*^9},
 TextJustification->1.]
}, Open  ]],

Cell["The result is made more clear using MatrixForm.", "Text",
 CellChangeTimes->{{3.553252673061832*^9, 3.553252687429633*^9}, 
   3.553252731453083*^9, 3.648381328058783*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "tensorcommutator", "]"}]], "Input",
 CellChangeTimes->{{3.55325270646474*^9, 3.553252718477352*^9}, 
   3.6483813280591507`*^9},
 TextJustification->1.],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "y"}], "]"}]}]},
             {"0"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"0"},
             {
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "z"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{
                RowBox[{"\[Delta]", "[", 
                 RowBox[{"i", ",", "j"}], "]"}], "**", 
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"j", ",", "x"}], "]"}]}]}]},
             {
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]},
             {"0"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{
                RowBox[{"\[Delta]", "[", 
                 RowBox[{"i", ",", "j"}], "]"}], "**", 
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"j", ",", "x"}], "]"}]}]}]},
             {
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]},
             {"0"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"0"},
             {
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{
                RowBox[{"\[Delta]", "[", 
                 RowBox[{"i", ",", "j"}], "]"}], "**", 
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"i", ",", "y"}], "]"}]}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{"2", " ", "\[ImaginaryI]", " ", 
               RowBox[{
                RowBox[{"\[Delta]", "[", 
                 RowBox[{"i", ",", "j"}], "]"}], "**", 
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"i", ",", "y"}], "]"}]}]}]},
             {
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "x"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5532527193583107`*^9, 3.5658774620360985`*^9, 
  3.6483813280608377`*^9},
 TextJustification->1.]
}, Open  ]],

Cell["Using TensorRank we see we now have a tensor of rank 6", "Text",
 CellChangeTimes->{{3.5532527353736057`*^9, 3.553252763294209*^9}, 
   3.648381328061615*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TensorRank", "[", "tensorcommutator", "]"}]], "Input",
 CellChangeTimes->{{3.553252765334453*^9, 3.553252773981099*^9}, 
   3.648381328062003*^9},
 TextJustification->1.],

Cell[BoxData["6"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.553252774592415*^9, 3.5658774852761316`*^9, 
  3.648381328062336*^9},
 TextJustification->1.]
}, Open  ]],

Cell["The product of the tensors can be computed as well.", "Text",
 CellChangeTimes->{{3.553252777689513*^9, 3.553252799013489*^9}, 
   3.648381328062694*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Tensor1", "\[CircleTimes]", "Tensor2"}], "]"}]], "Input",
 CellChangeTimes->{{3.553252361100422*^9, 3.553252380077442*^9}, {
   3.5658774923711414`*^9, 3.565877496536147*^9}, 3.6483813280630817`*^9},
 TextJustification->1.],

Cell[BoxData["\<\"Requesting the product of an array A, with another array B \
gives an array C consisting of the Mathematica output C = Outer[ProductQ, A, \
B]. For example if A is an array of length 'a' and B is a scalar the result \
is an array of length 'a'.\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.553252371180727*^9, 3.5532523807588177`*^9}, 
   3.55325283054056*^9, {3.565877489171137*^9, 3.565877497906149*^9}, 
   3.648381328064466*^9},
 TextJustification->1.],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "y"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "x"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "x"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "x"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "x"}], "]"}]}]},
             {
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "z"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "y"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "z"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "y"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "y"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "y"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "z"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "z"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "y"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "y"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1"},
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "z"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "x"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "z"}], "]"}], "**", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"j", ",", "x"}], "]"}]}]},
             {
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"i", ",", "x"}], "]"}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.553252371188567*^9, 3.5532523807729473`*^9}, 
   3.553252830555119*^9, {3.5658774892311373`*^9, 3.565877497961149*^9}, 
   3.648381328066256*^9},
 TextJustification->1.]
}, Open  ]],

Cell[CellGroupData[{

Cell["NCCross", "Subsubsection",
 CellChangeTimes->{{3.5659015297557964`*^9, 3.5659015382432814`*^9}, 
   3.648381328066736*^9}],

Cell["\<\
The function NCCross is capable of performing cross products.\
\>", "Text",
 CellChangeTimes->{{3.5659010540055847`*^9, 3.5659011004872437`*^9}, 
   3.648381328067115*^9}],

Cell["Example:", "Text",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9, 3.565901187724233*^9, 3.648381328067422*^9},
 FontWeight->"Bold"],

Cell[TextData[{
 "As an example consider the orbital angular momentum operator ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["L", "\[RightVector]"], TraditionalForm]]],
 "  and a further cross product with the position vector ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]]],
 ". Note that ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "\[RightVector]"], TraditionalForm]],
  CellChangeTimes->{{3.527694226917555*^9, 3.5276942269194202`*^9}, {
   3.5276943032503033`*^9, 3.527694315027096*^9}}],
 " need to be specified with an argument, arbitrarily chosen here to be i."
}], "Text",
 CellChangeTimes->{{3.527692028746903*^9, 3.5276920676947117`*^9}, {
   3.52769211524186*^9, 3.5276922669563503`*^9}, {3.527692512219768*^9, 
   3.527692525079916*^9}, {3.527694132053706*^9, 3.5276942197033777`*^9}, 
   3.5276943952634563`*^9, {3.527703309722287*^9, 3.527703369052785*^9}, {
   3.5532577957646427`*^9, 3.553257909691427*^9}, 3.6483813280699587`*^9}],

Cell["Activate \"q and p\"", "Item",
 CellChangeTimes->{{3.492976011984395*^9, 3.492976021158371*^9}, {
   3.552178941167989*^9, 3.552178966848259*^9}, 3.6483813280703297`*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["L", "\[RightVector]"], "=", 
  RowBox[{"NCcross", "[", 
   RowBox[{
    RowBox[{
     OverscriptBox["q", "\[RightVector]"], "[", "i", "]"}], ",", 
    RowBox[{
     OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.527694335049178*^9, 3.527694356562634*^9}, {
   3.553255759491473*^9, 3.5532557596596813`*^9}, {3.553257645760289*^9, 
   3.553257657334044*^9}, 3.648381328070859*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "x"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5276943574507847`*^9, 3.553255760111664*^9, 
  3.553257626924748*^9, 3.553257658324256*^9, 3.553257912276239*^9, 
  3.5659012059812775`*^9, 3.6483813280716457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v1", "=", 
  RowBox[{"NCcross", "[", 
   RowBox[{
    RowBox[{
     OverscriptBox["q", "\[RightVector]"], "[", "i", "]"}], ",", 
    OverscriptBox["L", "\[RightVector]"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5276922740313683`*^9, 3.527692346722972*^9}, {
   3.5276924514848013`*^9, 3.527692509083839*^9}, {3.527694375847547*^9, 
   3.527694384350206*^9}, {3.55325576833193*^9, 3.5532557694273148`*^9}, {
   3.553257666799622*^9, 3.553257668527532*^9}, 3.648381328072132*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"i", ",", "y"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"i", ",", "x"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"i", ",", "x"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"i", ",", "z"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "x"}], "]"}], "**", 
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"q", "[", 
          RowBox[{"i", ",", "y"}], "]"}], "**", 
         RowBox[{"p", "[", 
          RowBox[{"i", ",", "x"}], "]"}]}]}], ")"}]}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"i", ",", "z"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"i", ",", "y"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"i", ",", "x"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"i", ",", "z"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"i", ",", "z"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"i", ",", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.527692479014678*^9, 3.5276925014560413`*^9}, 
   3.527694385221098*^9, {3.553255762404763*^9, 3.553255769952032*^9}, {
   3.553257663837254*^9, 3.553257669842657*^9}, 3.5532579140973043`*^9, 
   3.565901207874386*^9, 3.648381328073831*^9}]
}, Open  ]],

Cell[TextData[{
 "Here we see that the non commutative nature is redundant in defining ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["L", "\[RightVector]"], " ", "as", " ", "such"}], ",", " ", 
    RowBox[{"since", " ", "the", " ", "canonical", " ", "pairs", " ", 
     RowBox[{"q", "[", "x", "]"}], " ", "and", " ", 
     RowBox[{"p", "[", "x", "]"}], " ", "are", " ", "kept", " ", "away"}]}], 
   TraditionalForm]]],
 " from each other already. However, in the next cross product, it is \
relevant since the canonical pairs are no longer separated. This function is \
used in the Runge Lenz vector definition as an example. \nFurther note: if \
one wants a neater answer with negative signs pulled out, we can map the \
DiracQ function SimplifyQ to each component of the output."
}], "Text",
 CellChangeTimes->{{3.527693315882999*^9, 3.527693627804246*^9}, {
   3.553257919517158*^9, 3.553257973379382*^9}, 3.648381328077817*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyQ", "/@", "v1"}]], "Input",
 CellChangeTimes->{{3.553257727077162*^9, 3.55325776943712*^9}, 
   3.648381328078721*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "x"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "x"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "y"}], "]"}]}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "x"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "x"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "x"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.553257748345942*^9, 3.5532577699783173`*^9}, 
   3.553257975439399*^9, 3.565901259553342*^9, 3.64838132808038*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
IX: Adding/Deleting Operators and Defining New Commutation Relations\
\>", "Section",
 CellChangeTimes->{{3.488228783346264*^9, 3.488228796274461*^9}, {
   3.5303995870568943`*^9, 3.530399588732789*^9}, {3.55233479505304*^9, 
   3.552334795852968*^9}, 3.552736038122024*^9, {3.552751811847836*^9, 
   3.552751815341234*^9}, {3.553253042730444*^9, 3.55325304893332*^9}, {
   3.5658775840812697`*^9, 3.565877592756282*^9}, {3.565879532920001*^9, 
   3.5658795344850025`*^9}, {3.5658798830954933`*^9, 3.565879884225495*^9}, {
   3.565901906058319*^9, 3.5659019089104824`*^9}, 3.6483813280808163`*^9},
 TextJustification->1.,
 FontFamily->"Times New Roman",
 FontSize->16],

Cell["\<\
The DiracQ Package allows the user to augment the package by defining new \
operators that will be recognized by the DiracQ functions. The process for \
doing so is simple and is explained here using the  the Virasoro Lie algebra \
of 2 dimensional conformal theory with a central extension.\
\>", "Text",
 CellChangeTimes->{{3.552733673138855*^9, 3.5527338249125957`*^9}, {
   3.5670259936925364`*^9, 3.567026062318461*^9}, 3.648381328081401*^9},
 TextJustification->1.],

Cell["\<\
\[OpenCurlyDoubleQuote]Operators\[CloseCurlyDoubleQuote] is the list of \
operators that are currently active, as explained in the usage paragraph \
below.\
\>", "Text",
 CellChangeTimes->{{3.552733830904274*^9, 3.552733859435149*^9}, 
   3.552734011400847*^9, {3.565877637941345*^9, 3.565877639816348*^9}, 
   3.648381328081959*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Operators"}]], "Input",
 CellChangeTimes->{{3.5658776475713587`*^9, 3.5658776475713587`*^9}, 
   3.6483813280823193`*^9}],

Cell[BoxData[
 StyleBox["\<\"Operators is the list of symbols that are currently being \
recognized as operators. The population of the list should correspond with \
the operators selected using the DiracQ palette as well as any user defined \
operators.\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5670247347181273`*^9, 3.648381328085473*^9},
 CellTags->"Info3566995934-1721651"]
}, Open  ]],

Cell["\<\
Since we have no operators activated, the list should be empty, as shown \
below.\
\>", "Text",
 CellChangeTimes->{{3.552734296278714*^9, 3.552734327855175*^9}, 
   3.648381328085889*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData["Operators"], "Input",
 CellChangeTimes->{{3.5658776667363853`*^9, 3.5658776667363853`*^9}, 
   3.64838132808622*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.5658776671113863`*^9, {3.567011097586195*^9, 3.567011107448618*^9}, 
   3.567024742499683*^9, 3.6483813280865517`*^9}]
}, Open  ]],

Cell["\<\
The function AddOperators is used to add user defined operators. \
DeleteOperators will remove user defined operators.\
\>", "Text",
 CellChangeTimes->{{3.5527342838537703`*^9, 3.552734294312056*^9}, {
   3.5527343299853287`*^9, 3.552734353711154*^9}, {3.55273454875972*^9, 
   3.552734573566598*^9}, 3.648381328086959*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AddOperator"}]], "Input",
 CellChangeTimes->{{3.5658776829464083`*^9, 3.5658776829464083`*^9}, 
   3.648381328087303*^9}],

Cell[BoxData[
 StyleBox["\<\"AddOperator allows users to expand the number of symbols that \
can be specified as noncommutative objects. The argument of AddOperator is \
the symbol that represents the new operator. Algebraic relations for new \
operators such as basic commutators, anticommutators, and products must be \
defined by the user. To define a basic commutator for two operators's \
\[Alpha] and \[Beta], input CommutatorDefinition[\[Alpha],\[Beta]]:=_ , where \
the blank is the definition. AntiCommutatorDefinition[\[Alpha],\[Beta]] is \
the equivelant function for anticommutators and OperatorProduct[\[Alpha],\
\[Beta]] is the equivelant function for definition of operator products. Any \
number of such definitions can be input. If a function calls a definition \
that has not been input by the user the output will read 'Null'.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5670247426507473`*^9, 3.648381328092607*^9},
 CellTags->"Info3566995942-1721651"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DeleteOperator"}]], "Input",
 CellChangeTimes->{{3.5658776916414204`*^9, 3.5658776916464205`*^9}, 
   3.648381328093026*^9}],

Cell[BoxData[
 StyleBox["\<\"DeleteOperator will remove a user defined operator from the \
list of possible operators. The argument of delete operators is the symbol by \
which the operator represented.\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.567024750243863*^9, 3.648381328093707*^9},
 CellTags->"Info3566995950-1721651"]
}, Open  ]],

Cell["\<\
This is easy, except for defining the algebraic relations of a new operator. \
Let' s try an example.
We will define a new operator that is represented by the symbol  \
\[OpenCurlyDoubleQuote]L\[CloseCurlyDoubleQuote]. This operator is not to be \
confused with the angular momentum operator, but  denotes  a generator of the \
Virasoro algebra arising in confromal field theory as detailed below.\
\>", "Text",
 CellChangeTimes->{{3.4892465210484056`*^9, 3.4892465764378*^9}, {
   3.552732845470752*^9, 3.5527328539401007`*^9}, {3.552734586984438*^9, 
   3.552734598526218*^9}, {3.565877708416444*^9, 3.565877736981484*^9}, {
   3.567024771793971*^9, 3.567024843882305*^9}, {3.567025945693316*^9, 
   3.5670259573908463`*^9}, {3.567101896096776*^9, 3.5671019582087593`*^9}, {
   3.567176886839789*^9, 3.567176895701429*^9}, 3.648381328094576*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddOperator", "[", "L", "]"}]], "Input",
 CellChangeTimes->{{3.565877705111439*^9, 3.565877705116439*^9}, {
   3.5670247660954447`*^9, 3.567024766846045*^9}, 3.648381328094969*^9}],

Cell[BoxData["\<\"Please enter all neccessary basic commutation and \
anticommutation relations. For help type ?AddOperator\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.56587770560144*^9, 3.567011126591545*^9, 
  3.567024779664085*^9, 3.64838132809601*^9}]
}, Open  ]],

Cell["\<\
L is now on our list of operators. We can check it explicitly using the \
command \[OpenCurlyDoubleQuote]Operators\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.489246592494927*^9, 3.48924661478939*^9}, {
   3.5303993172451687`*^9, 3.530399320810957*^9}, {3.530447978791985*^9, 
   3.5304480134416943`*^9}, {3.530448052876255*^9, 3.530448105051548*^9}, {
   3.565877762371519*^9, 3.565877763471521*^9}, {3.567024852606544*^9, 
   3.5670248530450697`*^9}, 3.648381328096483*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData["Operators"], "Input",
 CellChangeTimes->{{3.5658777536515074`*^9, 3.5658777536565075`*^9}, 
   3.6483813280968103`*^9}],

Cell[BoxData[
 RowBox[{"{", "L", "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658777539865074`*^9, 3.5670111266904507`*^9, 
  3.567024859234624*^9, 3.648381328097146*^9}]
}, Open  ]],

Cell[TextData[{
 "L will be treated as an operator by the package. ",
 StyleBox["The package does not know any of the properties of L, however. \
Below we evaluate a commutator of two L operators. The package uses the basic \
definition of a commutator.",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.489246623721126*^9, 3.489246635951535*^9}, {
   3.48924709463739*^9, 3.4892471312023706`*^9}, {3.552734660520701*^9, 
   3.5527346867590027`*^9}, {3.5527351825579557`*^9, 3.552735246637965*^9}, {
   3.565877768641528*^9, 3.565877768766528*^9}, {3.567024863983245*^9, 
   3.5670248644331093`*^9}, {3.567025967617588*^9, 3.567025973641423*^9}, 
   3.648381328097775*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", "i", "]"}], ",", " ", 
   RowBox[{"L", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565877795111565*^9, 3.565877795111565*^9}, {
   3.567024868183123*^9, 3.567024871458001*^9}, 3.648381328098261*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", "i", "]"}], "**", 
   RowBox[{"L", "[", "j", "]"}]}], "-", 
  RowBox[{
   RowBox[{"L", "[", "j", "]"}], "**", 
   RowBox[{"L", "[", "i", "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565877795501566*^9, 3.56701112672543*^9, 
  3.567024872023623*^9, 3.648381328098675*^9}]
}, Open  ]],

Cell[TextData[StyleBox["It is useful to define algebraic relations of our new \
operator, such as simplified evaluations of the commutator of two \[Theta] \
operators. We do so according to the method described in the AddOperators \
usage paragraph (?AddOperator). The commutator definition I use here is from \
the Virasoro algebra of conformal algebra.",
 FontSize->12]], "Text",
 CellChangeTimes->{{3.489247213325954*^9, 3.489247276582122*^9}, {
   3.55273294748991*^9, 3.552732947492858*^9}, 3.5527329822525053`*^9, {
   3.552735254710285*^9, 3.552735340270338*^9}, {3.552735388286119*^9, 
   3.552735400813877*^9}, {3.5670111460352077`*^9, 3.567011182249805*^9}, {
   3.567011582140913*^9, 3.567011622013706*^9}, {3.567012022406213*^9, 
   3.5670120604677553`*^9}, {3.567024900057379*^9, 3.567024906357114*^9}, 
   3.6483813281007757`*^9},
 TextJustification->1.,
 FontSize->14],

Cell[BoxData[
 RowBox[{
  RowBox[{"CommutatorDefinition", "[", 
   RowBox[{
    RowBox[{"L", "[", "i_", "]"}], ",", " ", 
    RowBox[{"L", "[", "j_", "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"i", "-", "j"}], ")"}], " ", 
    RowBox[{"L", "[", 
     RowBox[{"i", "+", "j"}], "]"}]}], "  ", "+", " ", 
   RowBox[{
    RowBox[{"c", "/", "12"}], " ", 
    RowBox[{"\[Delta]", "[", 
     RowBox[{
      RowBox[{"i", "+", "j"}], ",", "0"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "^", "3"}], "-", "i"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5658778181715975`*^9, 3.5658778181715975`*^9}, {
   3.567007760248658*^9, 3.567007760585598*^9}, {3.567011132436016*^9, 
   3.567011134035976*^9}, {3.567011874881205*^9, 3.5670119353686523`*^9}, {
   3.56702487891007*^9, 3.567024888672785*^9}, 3.648381328103566*^9}],

Cell["\<\
Here the central charge  \[OpenCurlyDoubleQuote]c\[CloseCurlyDoubleQuote] is \
a c-number, commuting with all operators. We now see that when we perform the \
commutator of two L operators the  above definition is utilized correctly:\
\>", "Text",
 CellChangeTimes->{{3.5527354155197887`*^9, 3.552735452815514*^9}, {
   3.567024912570312*^9, 3.5670249129827433`*^9}, {3.567024963020508*^9, 
   3.567024974770186*^9}, {3.567025021058956*^9, 3.567025055659287*^9}, 
   3.5670260828323917`*^9, 3.648381328104227*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", "2", "]"}], ",", " ", 
   RowBox[{"L", "[", 
    RowBox[{"-", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658778338116193`*^9, 3.5658778338116193`*^9}, {
   3.5670119576077957`*^9, 3.567012006643255*^9}, {3.5670249173457212`*^9, 
   3.567024920495503*^9}, 3.6483813281046667`*^9}],

Cell[BoxData[
 RowBox[{"3", " ", 
  RowBox[{"L", "[", "1", "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.567012007500054*^9, 3.567024921047104*^9, 
  3.6483813281050367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", "2", "]"}], ",", " ", 
   RowBox[{"L", "[", 
    RowBox[{"-", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658778338116193`*^9, 3.5658778338116193`*^9}, {
   3.5670119576077957`*^9, 3.567011982294421*^9}, {3.5670249398968267`*^9, 
   3.567024943158833*^9}, 3.648381328105522*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["c", "2"], "+", 
  RowBox[{"4", " ", 
   RowBox[{"L", "[", "0", "]"}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.5658778343066196`*^9, 3.5670116355522623`*^9, {3.567011943500988*^9, 
   3.567011982867693*^9}, 3.567024943592313*^9, 3.6483813281059227`*^9}]
}, Open  ]],

Cell["\<\
We can easily show that L[0], L[1] and L[-1] form a subgroup not involing the \
central charge \[OpenCurlyDoubleQuote]c\[CloseCurlyDoubleQuote]. \
\>", "Text",
 CellChangeTimes->{{3.552735491017663*^9, 3.552735520496553*^9}, {
   3.567024981620718*^9, 3.567025013583254*^9}, {3.567025065547374*^9, 
   3.567025082708995*^9}, 3.5670251545607452`*^9, 3.648381328106759*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", "1", "]"}], ",", " ", 
   RowBox[{"L", "[", 
    RowBox[{"-", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.567025105161271*^9, 3.567025105435025*^9}, 
   3.6483813281072063`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"L", "[", "0", "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.567025107888974*^9, 3.64838132810756*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", "1", "]"}], ",", " ", 
   RowBox[{"L", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.567025105161271*^9, 3.567025120109487*^9}, 
   3.648381328108004*^9}],

Cell[BoxData[
 RowBox[{"L", "[", "1", "]"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.567025120939385*^9, 3.648381328108341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", 
    RowBox[{"-", "1"}], "]"}], ",", " ", 
   RowBox[{"L", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.567025105161271*^9, 3.5670251341609983`*^9}, 
   3.648381328108794*^9}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"L", "[", 
   RowBox[{"-", "1"}], "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.567025134657003*^9, 3.648381328109151*^9}]
}, Open  ]],

Cell["\<\
The commutator definition can be utilized in more complicated operations as \
well.\
\>", "Text",
 CellChangeTimes->{
  3.567025161387182*^9, {3.5670258587027073`*^9, 3.567025862102507*^9}, {
   3.567026138793145*^9, 3.5670261447937107`*^9}, 3.648381328109516*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardOrderQ", "[", 
  RowBox[{"Commutator", "[", " ", 
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      RowBox[{"L", "[", "i", "]"}], "**", 
      RowBox[{"L", "[", 
       RowBox[{"-", "i"}], "]"}]}]}], ",", 
    RowBox[{"L", "[", "j", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.567012086644548*^9, 3.567012104881839*^9}, 
   3.567012143469924*^9, {3.567025169999655*^9, 3.567025193574142*^9}, 
   3.648381328110091*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"c", " ", "j"}], ")"}], "**", 
    RowBox[{"L", "[", "j", "]"}]}]}], "-", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"c", " ", 
      SuperscriptBox["j", "3"]}], ")"}], "**", 
    RowBox[{"L", "[", "j", "]"}]}]}], "-", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{"i", "**", 
    RowBox[{"L", "[", "i", "]"}], "**", 
    RowBox[{"L", "[", 
     RowBox[{
      RowBox[{"-", "i"}], "+", "j"}], "]"}]}]}], "+", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{"i", "**", 
    RowBox[{"L", "[", 
     RowBox[{"i", "+", "j"}], "]"}], "**", 
    RowBox[{"L", "[", 
     RowBox[{"-", "i"}], "]"}]}]}], "-", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{"j", "**", 
    RowBox[{"L", "[", "i", "]"}], "**", 
    RowBox[{"L", "[", 
     RowBox[{
      RowBox[{"-", "i"}], "+", "j"}], "]"}]}]}], "-", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{"j", "**", 
    RowBox[{"L", "[", 
     RowBox[{"i", "+", "j"}], "]"}], "**", 
    RowBox[{"L", "[", 
     RowBox[{"-", "i"}], "]"}]}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.5658778483816395`*^9, 3.567011645291482*^9, {3.5670120792008877`*^9, 
   3.567012105371217*^9}, 3.5670121445798397`*^9, {3.567025187393108*^9, 
   3.5670251943371763`*^9}, 3.648381328111514*^9}]
}, Open  ]],

Cell[BoxData["                     "], "Input",
 CellChangeTimes->{{3.567025259754901*^9, 3.567025267423667*^9}, 
   3.648381328111855*^9}],

Cell["\<\
By default the commutator of L with an operator whose \
``head\[CloseCurlyQuote]\[CloseCurlyQuote] is not L is taken to be zero.\
\>", "Text",
 CellChangeTimes->{{3.489247578959743*^9, 3.489247636725586*^9}, {
   3.489247707492362*^9, 3.489247731105585*^9}, 3.489248728849328*^9, {
   3.552732995995048*^9, 3.552733016647441*^9}, 3.55273546550392*^9, {
   3.567025870190378*^9, 3.567025876465798*^9}, {3.5671769340168877`*^9, 
   3.567176936801648*^9}, 3.648381328113427*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", "i", "]"}], ",", " ", 
   RowBox[{"f\[Dagger]", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5658778652266636`*^9, 3.5658778652266636`*^9}, {
   3.567025879779254*^9, 3.567025880267115*^9}, 3.648381328113944*^9}],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658778659066644`*^9, 3.5670258808918953`*^9, 
  3.6483813281142693`*^9}]
}, Open  ]],

Cell["\<\
If we want to change this we must enter in a different CommutatorDefinition. \
Similar rules apply to AntiCommutator and  as well.\
\>", "Text",
 CellChangeTimes->{{3.4892477474818583`*^9, 3.4892478217441797`*^9}, 
   3.493488266898872*^9, 3.6483813281146803`*^9},
 TextJustification->1.],

Cell["\<\
The processes of defining anticommutation relations and product relations are \
identical except that AntiCommutatorDefinition and OperatorProduct are used \
respectively.\
\>", "Text",
 CellChangeTimes->{{3.552735680224804*^9, 3.552735709436421*^9}, {
   3.5527358860997066`*^9, 3.552735964785771*^9}, 3.648381328115149*^9},
 TextJustification->1.],

Cell["\<\
If we no longer need L around as an operator, we can delete it through \
DeleteOperator\
\>", "Text",
 CellChangeTimes->{{3.489248115425014*^9, 3.489248139494893*^9}, {
   3.552733057710587*^9, 3.5527330769498987`*^9}, {3.567025892765789*^9, 
   3.5670258956040297`*^9}, 3.648381328115519*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteOperator", "[", "L", "]"}]], "Input",
 CellChangeTimes->{{3.565877907071722*^9, 3.565877907076722*^9}, {
   3.567025885416711*^9, 3.5670258858786907`*^9}, 3.648381328115884*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565877907526723*^9, 3.5670258872341747`*^9, 
  3.648381328116219*^9}]
}, Open  ]],

Cell["\<\
We now see the list of operators without L. The output below shows that L is \
no longer treated as a noncommutative operator.\
\>", "Text",
 CellChangeTimes->{{3.489248164122961*^9, 3.489248212156406*^9}, {
   3.552736019365726*^9, 3.552736028122323*^9}, {3.567025901390752*^9, 
   3.567025907492009*^9}, 3.648381328116624*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"L", "[", "a", "]"}], ",", " ", 
   RowBox[{"L", "[", "b", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565877924141746*^9, 3.5658779241467457`*^9}, {
   3.567025910779605*^9, 3.567025914329677*^9}, 3.648381328117064*^9}],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658779245917463`*^9, 3.567025914802677*^9, 
  3.648381328117385*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["X: Special Symbols",
 FontSize->16]], "Section",
 CellChangeTimes->{{3.483978451171875*^9, 3.4839784548125*^9}, {
   3.5303868169514303`*^9, 3.530386819334988*^9}, {3.530411961882675*^9, 
   3.530411965730489*^9}, 3.530448179875888*^9, {3.552127644808847*^9, 
   3.552127658153112*^9}, {3.552751656894002*^9, 3.552751659355219*^9}, {
   3.565879110961409*^9, 3.56587911171141*^9}, {3.565879887095499*^9, 
   3.5658798884055004`*^9}, {3.5659019109335985`*^9, 3.5659019166679263`*^9}, 
   3.648381328117807*^9},
 TextJustification->1.,
 FontFamily->"Times"],

Cell[TextData[{
 StyleBox["    Special symbols and the shorthand for writing them can be \
found in the DiracQ palette as well as any of the ",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["Mathematica",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" palettes. In general special symbols are called by sandwiching \
some series of icons between two \[EscapeKey] keystrikes. A list of special \
symbols used in this paper and their shorthand is given below.",
  FontSize->12,
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.483978471*^9, 3.48397864134375*^9}, {
   3.488228230935585*^9, 3.488228231024776*^9}, 3.489179040209321*^9, 
   3.489179544294756*^9, {3.490642444492116*^9, 3.490642465576928*^9}, {
   3.4929738132343903`*^9, 3.492973862086792*^9}, 3.64838132811901*^9},
 TextJustification->1.,
 LineSpacing->{1.5, 3},
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Text", "[", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Object", ",", " ", "Symbol", ",", " ", 
        RowBox[{"Keyboard", " ", "Entry"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Sigma", ",", " ", "\[Sigma]", ",", " ", "\[EscapeKey]s\[EscapeKey]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Hbar", ",", " ", "\[HBar]", ",", " ", "\[EscapeKey]hb\[EscapeKey]"}], 
       "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Dagger", ",", " ", "\[Dagger]", ",", " ", 
        "\[EscapeKey]dg\[EscapeKey]"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Delta", ",", " ", "\[Delta]", ",", " ", "\[EscapeKey]d\[EscapeKey]"}],
        "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "CircleProduct", ",", " ", "\"\<\[CircleTimes]\>\"", ",", " ", 
        "\"\<\[EscapeKey]c*\[EscapeKey]\>\""}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Subscript", ",", " ", 
        "\"\<\\!\\(\\*SubscriptBox[\\(\[Placeholder]\\), \
\\(\[Placeholder]\\)]\\)\>\"", ",", " ", "\"\<\[ControlKey]-\>\""}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Superscipt", ",", " ", 
        "\"\<\\!\\(\\*SuperscriptBox[\\(\[Placeholder]\\), \
\\(\[Placeholder]\\)]\\)\>\"", ",", " ", "\[ControlKey]6"}], "}"}], ",", " ", 
      
      RowBox[{"{", 
       RowBox[{
       "\"\<Vector Head\>\"", ",", " ", 
        "\"\<\\!\\(\\*OverscriptBox[\\(\[Placeholder]\\), \
\\(\[RightVector]\\)]\\)\>\"", ",", " ", 
        RowBox[{"\[ControlKey]7", "  ", "\[EscapeKey]vec\[EscapeKey]"}]}], 
       "}"}]}], "}"}], ",", " ", 
    RowBox[{"Frame", " ", "->", " ", "All"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5658794985149527`*^9, 3.565879498519953*^9}, 
   3.648381328125914*^9}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   TagBox[GridBox[{
      {"Object", "Symbol", 
       RowBox[{"Entry", " ", "Keyboard"}]},
      {"Sigma", "\[Sigma]", "\[EscapeKey]s\[EscapeKey]"},
      {"Hbar", "\[HBar]", "\[EscapeKey]hb\[EscapeKey]"},
      {"Dagger", "\[Dagger]", "\[EscapeKey]dg\[EscapeKey]"},
      {"Delta", "\[Delta]", "\[EscapeKey]d\[EscapeKey]"},
      {"CircleProduct", "\<\"\[CircleTimes]\"\>", "\<\"\[EscapeKey]c*\
\[EscapeKey]\"\>"},
      {"Subscript", "\<\"\\!\\(\\*SubscriptBox[\\(\[Placeholder]\\), \\(\
\[Placeholder]\\)]\\)\"\>", "\<\"\[ControlKey]-\"\>"},
      {"Superscipt", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Placeholder]\\), \\(\
\[Placeholder]\\)]\\)\"\>", "\[ControlKey]6"},
      {"\<\"Vector Head\"\>", \
"\<\"\\!\\(\\*OverscriptBox[\\(\[Placeholder]\\), \
\\(\[RightVector]\\)]\\)\"\>", 
       RowBox[{"\[ControlKey]7", " ", "\[EscapeKey]vec\[EscapeKey]"}]}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]], "Text", "TR"],
  Text[
   Grid[{{$CellContext`Object, 
      Symbol, $CellContext`Entry $CellContext`Keyboard}, {$CellContext`Sigma, 
      DiracQ`\[Sigma], $CellContext`\[EscapeKey]s\[EscapeKey]}, \
{$CellContext`Hbar, 
      DiracQ`\[HBar], $CellContext`\[EscapeKey]hb\[EscapeKey]}, \
{$CellContext`Dagger, 
      DiracQ`\[Dagger], $CellContext`\[EscapeKey]dg\[EscapeKey]}, \
{$CellContext`Delta, 
      DiracQ`\[Delta], $CellContext`\[EscapeKey]d\[EscapeKey]}, \
{$CellContext`CircleProduct, "\[CircleTimes]", 
      "\[EscapeKey]c*\[EscapeKey]"}, {
     Subscript, 
      "\!\(\*SubscriptBox[\(\[Placeholder]\), \(\[Placeholder]\)]\)", 
      "\[ControlKey]-"}, {$CellContext`Superscipt, 
      "\!\(\*SuperscriptBox[\(\[Placeholder]\), \(\[Placeholder]\)]\)", \
$CellContext`\[ControlKey]6}, {
     "Vector Head", 
      "\!\(\*OverscriptBox[\(\[Placeholder]\), \(\[RightVector]\)]\)", \
$CellContext`\[ControlKey]7 $CellContext`\[EscapeKey]vec\[EscapeKey]}}, Frame -> 
    All]]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879499034953*^9, 3.64838132813319*^9},
 TextAlignment->Center]
}, {2}]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
XI: The Kronecker \[Delta] and the Levi - Civita Symbol \
\[OpenCurlyDoubleQuote]\[Epsilon]\[CloseCurlyDoubleQuote]\
\>", "Section",
 CellChangeTimes->{{3.4840854140625*^9, 3.48408549340625*^9}, {
   3.530386764052936*^9, 3.530386766875772*^9}, {3.530411969578596*^9, 
   3.530411971085518*^9}, 3.530448184071982*^9, 3.552127660321097*^9, {
   3.553337742099855*^9, 3.5533377451059637`*^9}, {3.565879113686413*^9, 
   3.565879113841413*^9}, {3.5658794602468977`*^9, 3.5658794609118986`*^9}, 
   3.565879967970612*^9, {3.5659019216182094`*^9, 3.5659019252144156`*^9}, 
   3.64838132813377*^9},
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->16],

Cell["\<\
    The Kronecker \[Delta] and the Levi - Civita Symbol \[Epsilon] are useful \
shorthand notations. The attributes of these notational shorthands are given \
in (33) and (34)\
\>", "Text",
 CellChangeTimes->{{3.484329059546875*^9, 3.484329091890625*^9}, {
   3.48432918609375*^9, 3.48432922984375*^9}, {3.484329391453125*^9, 
   3.484329402046875*^9}, {3.4852696058523436`*^9, 3.485269613853931*^9}, 
   3.489179041592696*^9, {3.489179549510429*^9, 3.489179568615692*^9}, {
   3.4891799046437693`*^9, 3.4891799076350822`*^9}, 3.6483813281347523`*^9},
 TextJustification->1.,
 LineSpacing->{1.5, 3}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Delta]", 
   RowBox[{"i", ",", "j"}]], "=", 
  RowBox[{
   RowBox[{"1", "   ", "if", " ", "i"}], "=", "j"}]}], "\[IndentingNewLine]", 

 RowBox[{"                 ", 
  RowBox[{"=", 
   RowBox[{
   "0", "   ", 
    "otherwise"}]}]}], "\[IndentingNewLine]"}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.484329405703125*^9, 3.484329439609375*^9}, {
   3.48432948496875*^9, 3.484329487234375*^9}, 3.553255292828395*^9, {
   3.56587940473182*^9, 3.5658794061218224`*^9}, 3.648381328137116*^9},
 TextAlignment->Center,
 TextJustification->1.,
 LineSpacing->{1.5, 3},
 FontFamily->"Times",
 FontSize->14],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Epsilon]", 
    RowBox[{"i", ",", "j", ",", "k"}]], "  ", "=", 
   RowBox[{
    RowBox[{"1", "    ", "if", "  ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "k"}], "}"}]}], "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], ",", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
  RowBox[{"or", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"         ", 
  RowBox[{"=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "  ", "if", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k"}], "}"}]}], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2", ",", "1"}], "}"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"=", 
    RowBox[{"0", "      ", "if", " ", "i"}]}], "=", "j"}], ",", 
  RowBox[{"j", "=", "k"}], ",", 
  RowBox[{
   RowBox[{"or", " ", "k"}], "=", "i"}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.48432949278125*^9, 3.484329666859375*^9}, 
   3.6483813281426077`*^9},
 TextAlignment->Center,
 TextJustification->1.,
 LineSpacing->{1.5, 3},
 FontFamily->"Times",
 FontSize->14],

Cell[TextData[{
 "Mathematica includes the functions KroneckerDelta and LeviCivitaSymbol \
corresponding to these objects. Although these functions are useful, the \
package includes it's own version of these two functions. The Kronecker \
\[Delta] used in the package is simply represented by the symbol \[Delta]. \
This function is almost identical to that of the existing ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function. Its use is demonstrated in the examples below."
}], "Text",
 CellChangeTimes->{{3.484329744015625*^9, 3.48432980371875*^9}, {
   3.484329942453125*^9, 3.484329948*^9}, {3.484330075484375*^9, 
   3.484330228796875*^9}, {3.48433229321875*^9, 3.484332295*^9}, 
   3.4891795837512083`*^9, 3.567176978102249*^9, 3.648381328143799*^9},
 TextJustification->1.,
 LineSpacing->{1.5, 3}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"1", ",", " ", "1"}], "]"}]], "Input",
 CellChangeTimes->{3.648381328144208*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879372541775*^9, 3.648381328144568*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"1", ",", " ", "2"}], "]"}]], "Input",
 CellChangeTimes->{3.6483813281449833`*^9}],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879378181783*^9, 3.648381328145316*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", " ", "j"}], "]"}]], "Input",
 CellChangeTimes->{3.648381328145732*^9}],

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j"}], "]"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879385556793*^9, 3.6483813281460743`*^9}]
}, Open  ]],

Cell["\<\
Note that if two symbols are used that have not yet been assigned numerical \
values the \[Delta] function is not evaluated. The package does not \
\[OpenCurlyDoubleQuote]know\[CloseCurlyDoubleQuote] if i is equal to j, so it \
leaves the \[Delta] unevaluated. If it is required that each symbol is viewed \
as being not identical to another symbol the option Evaluation should be set \
to Identical, as shown below.\
\>", "Text",
 CellChangeTimes->{{3.4843302509375*^9, 3.484330311109375*^9}, {
   3.484332303625*^9, 3.48433236965625*^9}, 3.489179585588896*^9, {
   3.553255337337573*^9, 3.553255375585725*^9}, 3.648381328146956*^9},
 TextJustification->1.,
 LineSpacing->{1.5, 3}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Evaluation"}]], "Input",
 CellChangeTimes->{{3.5658794147968345`*^9, 3.565879414801834*^9}, 
   3.648381328147294*^9}],

Cell[BoxData[
 StyleBox["\<\"Evaluation is an option for the Kronecker-\[Delta] function. \
If Evaluation is set to Identical the \[Delta] will evaluate to zero unless \
both arguments are indentical.\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658794154568353`*^9, 3.648381328149404*^9},
 CellTags->"Info3565850615-2407871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j", ",", 
   RowBox[{"Evaluation", "\[Rule]", "Identical"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.553255522208871*^9, 3.553255538378662*^9}, 
   3.6483813281505404`*^9},
 TextJustification->1.],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5532555395315857`*^9, 3.565879420831843*^9, 
  3.648381328150876*^9},
 TextJustification->1.]
}, Open  ]],

Cell["\<\
This option is useful when using the Kronecker delta for coordinate \
directions, for example, as we know that x is not equal to y.
     The package includes the function \[Epsilon] for the Levi-Civita symbol. \
It is defined only for coordinate directions x, y, and z. For use with \
symbols other than these use LeviCivitaTensor. Examples of the use of the \
\[Epsilon] function are given below.\
\>", "Text",
 CellChangeTimes->{{3.48433240103125*^9, 3.484332425765625*^9}, {
   3.48433258090625*^9, 3.484332748671875*^9}, {3.4891795876223593`*^9, 
   3.489179596398637*^9}, {3.489244301198606*^9, 3.48924430573691*^9}, {
   3.553255402113483*^9, 3.553255422224985*^9}, 3.6483813281517677`*^9},
 TextJustification->1.,
 LineSpacing->{1.5, 3}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "[", 
  RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "]"}]], "Input",
 CellChangeTimes->{3.648381328152412*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879429916856*^9, 3.6483813281527433`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "[", 
  RowBox[{"z", ",", " ", "y", ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.6483813281531477`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658794385868673`*^9, 3.648381328153469*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "[", 
  RowBox[{"x", ",", " ", "y", ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.648381328153872*^9}],

Cell[BoxData["0"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658794469468794`*^9, 3.6483813281541853`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["XII:  Use of Times, NonCommutativeMultiply, and ProductQ", "Section",
 CellChangeTimes->{{3.47536106128125*^9, 3.47536106159375*^9}, {
   3.4753635318125*^9, 3.475363536140625*^9}, {3.483979485671875*^9, 
   3.483979518953125*^9}, {3.483979775734375*^9, 3.483979779234375*^9}, {
   3.48398015190625*^9, 3.483980152703125*^9}, 3.4882293851872673`*^9, {
   3.4882294155094833`*^9, 3.4882294616182413`*^9}, 3.493488266981592*^9, {
   3.493488766686174*^9, 3.493488769318982*^9}, {3.5303866453992863`*^9, 
   3.5303866485927896`*^9}, {3.5304119745845613`*^9, 3.53041197599142*^9}, 
   3.5304481898207607`*^9, 3.552127664023073*^9, {3.5658791161514163`*^9, 
   3.5658791163064165`*^9}, {3.56587935469675*^9, 3.5658793559917517`*^9}, 
   3.565879970410616*^9, {3.5659019268665094`*^9, 3.565901928659612*^9}, 
   3.6483813281546183`*^9},
 TextJustification->1.,
 FontFamily->"Times",
 FontSize->16],

Cell[TextData[{
 "     During the use of this package it is necessary to use the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions Times (input as \[OpenCurlyDoubleQuote]*\[CloseCurlyDoubleQuote] \
or a space between terms) and NonCommutativeMultiply \
(\[OpenCurlyDoubleQuote]**\[CloseCurlyDoubleQuote]). The operation of these \
functions is not affected by the DiracQ package. Furthermore, the DiracQ \
package contains the function ProductQ, used to multiply two terms. This \
means that there are three functions used for multiplication. Determining \
which of the available three multiplication functions is applicable in a \
certain situation is nontrivial. All of which are useful, and occasionally \
they can be interchanged but in general the correct function must be used. ",
 StyleBox["Mathematica automatically sorts all input of the Times function",
  FontWeight->"Bold"],
 ". For this reason we cannot use Times between operators, as the order of \
the operators may be changed before any other function can step in to \
preserve the order. ",
 StyleBox["Therefore NonCommutativeMultiply (**) must always be used between \
operators. ",
  FontWeight->"Bold"],
 "ProductQ (\[CircleTimes]) is used when simplification and application of \
algebraic relations is desired. ",
 StyleBox["NonCommutativeMultiply is a ",
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" function and will not apply proprerties known to the DiracQ \
package.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.483979521578125*^9, 3.483979721390625*^9}, {
   3.489173222583954*^9, 3.489173363282682*^9}, 3.48917959930862*^9, 
   3.489244309844143*^9, {3.552736214324656*^9, 3.552736407838656*^9}, {
   3.5527364407397957`*^9, 3.552736716117388*^9}, {3.552736788343072*^9, 
   3.552736794693548*^9}, 3.567177011616131*^9, 3.648381328248382*^9},
 TextJustification->1.,
 LineSpacing->{1.5, 3}],

Cell[TextData[StyleBox[" The rules for using these functions can be \
summarized as follows :",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.552736223779505*^9, 3.552736232236329*^9}, {
   3.552736726157051*^9, 3.5527367419089947`*^9}, 3.648381328249333*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell["\<\
Use Times between two terms if the input is identical under permutation of \
said terms (i.e. if operator ordering is unimportant or if working with \
commutative objects).\
\>", "Item",
 CellChangeTimes->{{3.489173366728018*^9, 3.489173452352098*^9}, {
   3.489173500064393*^9, 3.48917350940303*^9}, 3.489244313568046*^9, {
   3.530384878377715*^9, 3.530384892393219*^9}, {3.552736114570533*^9, 
   3.5527361553303633`*^9}, 3.64838132824988*^9},
 TextJustification->1.],

Cell["\<\
Use NonCommutativeMultiply between two terms if the input depends on the \
order of the terms and if the terms contain items that are connected by only \
Times or NonCommutativeMultiply. \
\>", "Item",
 CellChangeTimes->{{3.4891734531873837`*^9, 3.489173588788229*^9}, {
   3.530384927663776*^9, 3.530384978321697*^9}, 3.552736160610445*^9, 
   3.648381328250402*^9},
 TextJustification->1.],

Cell["\<\
Use ProductQ (also invokable through \[CircleTimes] ) between two terms if \
the terms involve a variety of functions (Sum, Plus, etc.) or to sort and \
apply definitions to the result. This is more powerful than \
NonCommutativeMultiply, and makes use of the known properties of the various \
operators.\
\>", "Item",
 CellChangeTimes->{{3.4891735894258842`*^9, 3.489173659305295*^9}, {
   3.4892443293115807`*^9, 3.489244351960219*^9}, 3.49348826709748*^9, {
   3.530384985240018*^9, 3.5303851007107077`*^9}, {3.552736802925511*^9, 
   3.552736803908972*^9}, 3.648381328251173*^9},
 TextJustification->1.]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Ex. (1) :",
  FontWeight->"Bold"],
 StyleBox[" In this example, taken from the tJ model, I try to use Times \
between operators and then apply NonCommutativeMultiply. Notice that the \
order of the operators is reversed. Activate Hubbard (X) operators.",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.4839797839375*^9, 3.483979801390625*^9}, {
   3.517410457265312*^9, 3.517410494207817*^9}, {3.530386068293441*^9, 
   3.530386068811078*^9}, {3.5527368539833803`*^9, 3.552736911861178*^9}, {
   3.552737057157378*^9, 3.552737068773535*^9}, 3.648381328252619*^9},
 TextJustification->1.],

Cell["Incorrect Input:", "Text",
 CellChangeTimes->{{3.475363516890625*^9, 3.47536351965625*^9}, {
   3.483980808625*^9, 3.4839808126875*^9}, 3.648381328253024*^9},
 TextJustification->1.,
 LineSpacing->{1.5, 3},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hamiltonian", "=", 
  RowBox[{
   RowBox[{
    UnderscriptBox["\[Sum]", "j"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "k"], 
     RowBox[{
      UnderscriptBox["\[Sum]", "\[Sigma]j"], 
      RowBox[{
       UnderscriptBox["\[Sum]", "\[Sigma]k"], 
       RowBox[{
        RowBox[{"t", "[", 
         RowBox[{"j", ",", " ", "k"}], "]"}], " ", 
        RowBox[{"X", "[", 
         RowBox[{"k", ",", " ", "\[Sigma]k", ",", " ", "0"}], "]"}], " ", 
        RowBox[{"X", "[", 
         RowBox[{"j", ",", " ", "0", ",", " ", "\[Sigma]j"}], "]"}]}]}]}]}]}],
    " ", "/.", 
   RowBox[{"Times", "\[Rule]", "NonCommutativeMultiply"}]}]}]], "Input",
 CellChangeTimes->{3.6483813282547007`*^9}],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "j"], 
  RowBox[{
   UnderscriptBox["\[Sum]", "k"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "\[Sigma]j"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "\[Sigma]k"], 
     RowBox[{
      RowBox[{"t", "[", 
       RowBox[{"j", ",", "k"}], "]"}], "**", 
      RowBox[{"X", "[", 
       RowBox[{"j", ",", "0", ",", "\[Sigma]j"}], "]"}], "**", 
      RowBox[{"X", "[", 
       RowBox[{"k", ",", "\[Sigma]k", ",", "0"}], "]"}]}]}]}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879185876514*^9, 3.6483813282562227`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Notice that the order of the X operators has been \
reversed in the output.",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.483979757484375*^9, 3.483979767984375*^9}, {
   3.483979817765625*^9, 3.483979827390625*^9}, {3.5303847795681047`*^9, 
   3.530384780680361*^9}, {3.5527369352933903`*^9, 3.552736938124896*^9}, 
   3.648381328256646*^9},
 TextJustification->1.,
 FontWeight->"Bold"],

Cell["Correct Input:", "Text",
 CellChangeTimes->{{3.4839799654375*^9, 3.483979973296875*^9}, {
   3.484336346109375*^9, 3.48433634715625*^9}, 3.648381328256996*^9},
 TextJustification->1.,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hamiltonian", "=", 
  RowBox[{
   UnderscriptBox["\[Sum]", "j"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "\[Sigma]j"], 
     RowBox[{
      UnderscriptBox["\[Sum]", "\[Sigma]k"], 
      RowBox[{
       RowBox[{"t", "[", 
        RowBox[{"j", ",", " ", "k"}], "]"}], " ", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"k", ",", " ", "\[Sigma]k", ",", " ", "0"}], "]"}], "**", 
        " ", 
        RowBox[{"X", "[", 
         RowBox[{"j", ",", " ", "0", ",", " ", "\[Sigma]j"}], "]"}], 
        " "}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{3.64838132825805*^9}],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "j"], 
  RowBox[{
   UnderscriptBox["\[Sum]", "k"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "\[Sigma]j"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "\[Sigma]k"], 
     RowBox[{
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"k", ",", "\[Sigma]k", ",", "0"}], "]"}], "**", 
       RowBox[{"X", "[", 
        RowBox[{"j", ",", "0", ",", "\[Sigma]j"}], "]"}]}], " ", 
      RowBox[{"t", "[", 
       RowBox[{"j", ",", "k"}], "]"}]}]}]}]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879202816538*^9, 3.648381328258587*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Mathematica has sorted the resultant expression, and \
the operators have not been permuted.",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.483979989640625*^9, 3.483980017671875*^9}, 
   3.489179603996093*^9, {3.517410438251705*^9, 3.517410440027923*^9}, 
   3.648381328258996*^9},
 TextJustification->1.,
 FontWeight->"Bold"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ex. (2): ",
 StyleBox["Here we see that NonCommutativeMultiply will not apply properties \
that are known to the DiracQ package. Activate Pauli Spin Matrices \
(\[Sigma]).",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.489173775630958*^9, 3.489173801703471*^9}, {
   3.552736996380641*^9, 3.552737093220812*^9}, 3.64838132826019*^9},
 TextJustification->1.],

Cell[TextData[StyleBox["Product using NonCommutativeMultiply:",
 FontSize->12]], "Text",
 CellChangeTimes->{{3.489173852158744*^9, 3.4891738631128263`*^9}, {
   3.5174106856758947`*^9, 3.517410698340672*^9}, {3.5527371003169928`*^9, 
   3.552737120524672*^9}, 3.6483813282608624`*^9},
 TextJustification->1.,
 FontSize->14,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", " ", "x"}], "]"}], " ", "**", " ", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.565879236256584*^9, 3.5658792362615843`*^9}, 
   3.648381328261345*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", "x"}], "]"}], "**", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", "x"}], "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879236651585*^9, 3.648381328261737*^9}]
}, Open  ]],

Cell["\<\
Product using ProductQ (ProductQ can also be entered with the \[CircleTimes] \
symbol, both input styles are shown below).\
\>", "Text",
 CellChangeTimes->{{3.48917390222268*^9, 3.489173906328515*^9}, {
   3.517410703347376*^9, 3.517410734307596*^9}, {3.517410910058947*^9, 
   3.517410952368228*^9}, {3.530386227604953*^9, 3.530386239452846*^9}, {
   3.552736982606596*^9, 3.55273698494934*^9}, {3.55273712870929*^9, 
   3.552737167765148*^9}, 3.648381328263575*^9},
 TextJustification->1.,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}], ",", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", " ", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.565879248206601*^9, 3.565879248206601*^9}, 
   3.648381328264106*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879248651602*^9, 3.648381328264432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", " ", "x"}], "]"}], "\[CircleTimes]", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5658792617966204`*^9, 3.5658792618016205`*^9}, 
   3.648381328264892*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.565879262201621*^9, 3.6483813282652187`*^9}]
}, Open  ]],

Cell["\<\
Users should be warned that here the result of squaring the Pauli matrix is \
taken as unity, in the informal language of DiracQ.  More rigorously the \
result is an identity matrix, but sticking to Dirac\[CloseCurlyQuote]s \
informality of expression has many advantages, as most quantum physicists \
recognize.\
\>", "Text",
 CellChangeTimes->{{3.517410756212865*^9, 3.517410886634367*^9}, {
   3.530386276284766*^9, 3.530386425662665*^9}, {3.5527372001116257`*^9, 
   3.5527372065652447`*^9}, 3.648381328265975*^9},
 TextJustification->1.]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Ex. 3: ",
 StyleBox["Here we see that it is not necessary to use \[CircleTimes] between \
every term in a long expression. The entire expression will be simplified if \
\[CircleTimes] is used once. Multiple uses of \[CircleTimes] will \
significantly slow down longer computations.",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.489173928002996*^9, 3.4891739321277933`*^9}, {
   3.552737228870339*^9, 3.552737255877614*^9}, {3.565879317776698*^9, 
   3.5658793208917027`*^9}, {3.567177063307992*^9, 3.567177078529624*^9}, 
   3.648381328267251*^9},
 TextJustification->1.],

Cell[TextData[StyleBox["Correct but redundant use of \[CircleTimes]:",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.489174021409485*^9, 3.489174025791271*^9}, {
   3.5303865287349663`*^9, 3.530386577740202*^9}, 3.6483813282676773`*^9},
 TextJustification->1.,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"1", ",", " ", "x"}], "]"}], "\[CircleTimes]", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"2", ",", " ", "z"}], "]"}]}], ")"}], "\[CircleTimes]", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"1", ",", " ", "x"}], "]"}]}], ")"}], "\[CircleTimes]", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"2", ",", " ", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{3.648381328268292*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658792906016607`*^9, 3.648381328268613*^9}]
}, Open  ]],

Cell[TextData[StyleBox["More efficient Input :",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.489174208749977*^9, 3.489174213525055*^9}, {
   3.5303865845017433`*^9, 3.530386597709118*^9}, 3.648381328268971*^9},
 TextJustification->1.,
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", " ", "x"}], "]"}], " ", "**", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", " ", "z"}], "]"}], " ", "**", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", " ", "x"}], "]"}]}], "\[CircleTimes]", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"2", ",", " ", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{3.648381328269559*^9}],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5658793101816883`*^9, 3.648381328269878*^9}]
}, Open  ]],

Cell["Another Method using SimplifyQ :", "Text",
 CellChangeTimes->{{3.55273731690736*^9, 3.5527373628635674`*^9}, {
   3.552751793594616*^9, 3.5527517949492273`*^9}, 3.648381328270225*^9},
 TextJustification->1.],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyQ", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", " ", "x"}], "]"}], " ", "**", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", " ", "z"}], "]"}], " ", "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", " ", "x"}], "]"}], "**", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", " ", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5527373410165977`*^9, 3.5527373929511766`*^9}, {
   3.552737489911425*^9, 3.552737492758811*^9}, {3.552737523655768*^9, 
   3.552737525335127*^9}, {3.5527388654244843`*^9, 3.552738883981226*^9}, {
   3.5527493223483553`*^9, 3.55274933580917*^9}, {3.552751804174529*^9, 
   3.552751808142314*^9}, 3.64838132827083*^9},
 TextJustification->1.],

Cell[BoxData["1"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5528203404061213`*^9, 3.552820397211711*^9, 
  3.5528206034067717`*^9, 3.5528207442202682`*^9, 3.552820820568116*^9, 
  3.5528208929140673`*^9, 3.5528213096911907`*^9, 3.5658793259067097`*^9, 
  3.648381328271174*^9},
 TextJustification->1.]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1236, 676},
WindowMargins->{{9, Automatic}, {-11, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
Magnification->1.5,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3566187387-9547786"->{
  Cell[9409, 230, 305, 5, 84, "Print",
   CellTags->"Info3566187387-9547786"]},
 "Info3552067720-9535980"->{
  Cell[26025, 640, 399, 6, 364, "Print",
   CellTags->"Info3552067720-9535980"]},
 "Info3565845837-2407871"->{
  Cell[41604, 1015, 445, 8, 283, "Print",
   CellTags->"Info3565845837-2407871"]},
 "Info3565845842-2407871"->{
  Cell[45434, 1120, 792, 13, 465, "Print",
   CellTags->"Info3565845842-2407871"]},
 "Info3565846587-2407871"->{
  Cell[61304, 1543, 578, 10, 366, "Print",
   CellTags->"Info3565846587-2407871"]},
 "Info3565846596-2407871"->{
  Cell[62067, 1563, 581, 10, 366, "Print",
   CellTags->"Info3565846596-2407871"]},
 "Info3565846624-2407871"->{
  Cell[63137, 1593, 581, 10, 364, "Print",
   CellTags->"Info3565846624-2407871"]},
 "Info3565846637-2407871"->{
  Cell[63903, 1613, 581, 10, 364, "Print",
   CellTags->"Info3565846637-2407871"]},
 "Info3565846649-2407871"->{
  Cell[64899, 1642, 415, 8, 204, "Print",
   CellTags->"Info3565846649-2407871"]},
 "Info3565847009-2407871"->{
  Cell[68909, 1777, 792, 13, 465, "Print",
   CellTags->"Info3565847009-2407871"]},
 "Info3565847016-2407871"->{
  Cell[70507, 1819, 801, 13, 465, "Print",
   CellTags->"Info3565847016-2407871"]},
 "Info3565847036-2407871"->{
  Cell[72228, 1862, 457, 8, 283, "Print",
   CellTags->"Info3565847036-2407871"]},
 "Info3565847250-2407871"->{
  Cell[75724, 1971, 275, 6, 202, "Print",
   CellTags->"Info3565847250-2407871"]},
 "Info3565847256-2407871"->{
  Cell[76177, 1987, 273, 6, 202, "Print",
   CellTags->"Info3565847256-2407871"]},
 "Info3565847277-2407871"->{
  Cell[77113, 2013, 447, 8, 283, "Print",
   CellTags->"Info3565847277-2407871"]},
 "Info3565847437-2407871"->{
  Cell[79518, 2093, 576, 10, 364, "Print",
   CellTags->"Info3565847437-2407871"]},
 "Info3565847505-2407871"->{
  Cell[80270, 2113, 570, 10, 364, "Print",
   CellTags->"Info3565847505-2407871"]},
 "Info3565849710-2407871"->{
  Cell[88839, 2360, 642, 11, 441, "Print",
   CellTags->"Info3565849710-2407871"]},
 "Info3566995934-1721651"->{
  Cell[177668, 4888, 445, 8, 283, "Print",
   CellTags->"Info3566995934-1721651"]},
 "Info3566995942-1721651"->{
  Cell[179295, 4938, 1039, 16, 607, "Print",
   CellTags->"Info3566995942-1721651"]},
 "Info3566995950-1721651"->{
  Cell[180527, 4964, 391, 7, 283, "Print",
   CellTags->"Info3566995950-1721651"]},
 "Info3565850615-2407871"->{
  Cell[207629, 5726, 391, 7, 283, "Print",
   CellTags->"Info3565850615-2407871"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3566187387-9547786", 227339, 6284},
 {"Info3552067720-9535980", 227448, 6287},
 {"Info3565845837-2407871", 227559, 6290},
 {"Info3565845842-2407871", 227671, 6293},
 {"Info3565846587-2407871", 227784, 6296},
 {"Info3565846596-2407871", 227897, 6299},
 {"Info3565846624-2407871", 228010, 6302},
 {"Info3565846637-2407871", 228123, 6305},
 {"Info3565846649-2407871", 228236, 6308},
 {"Info3565847009-2407871", 228348, 6311},
 {"Info3565847016-2407871", 228461, 6314},
 {"Info3565847036-2407871", 228574, 6317},
 {"Info3565847250-2407871", 228686, 6320},
 {"Info3565847256-2407871", 228798, 6323},
 {"Info3565847277-2407871", 228910, 6326},
 {"Info3565847437-2407871", 229022, 6329},
 {"Info3565847505-2407871", 229135, 6332},
 {"Info3565849710-2407871", 229248, 6335},
 {"Info3566995934-1721651", 229361, 6338},
 {"Info3566995942-1721651", 229474, 6341},
 {"Info3566995950-1721651", 229589, 6344},
 {"Info3565850615-2407871", 229702, 6347}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 521, 10, 87, "Title"],
Cell[946, 27, 937, 14, 107, "Text"],
Cell[CellGroupData[{
Cell[1908, 45, 141, 3, 94, "Section"],
Cell[CellGroupData[{
Cell[2074, 52, 164, 3, 54, "Subsection"],
Cell[2241, 57, 939, 15, 115, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3217, 77, 308, 5, 54, "Subsection"],
Cell[3528, 84, 1028, 18, 90, "Text"],
Cell[4559, 104, 201, 5, 65, "Input"],
Cell[4763, 111, 684, 12, 84, "Text"],
Cell[5450, 125, 109, 1, 40, "Input"],
Cell[5562, 128, 403, 7, 62, "Text"],
Cell[5968, 137, 117, 2, 40, "Input"],
Cell[6088, 141, 432, 8, 66, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6557, 154, 181, 3, 54, "Subsection"],
Cell[6741, 159, 1099, 18, 164, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7877, 182, 259, 6, 54, "Subsection"],
Cell[8139, 190, 316, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[8480, 200, 140, 2, 32, "Item"],
Cell[8623, 204, 124, 2, 32, "Item"],
Cell[8750, 208, 127, 2, 32, "Item"]
}, Open  ]],
Cell[8892, 213, 436, 10, 66, "Text"],
Cell[CellGroupData[{
Cell[9353, 227, 53, 1, 40, "Input"],
Cell[9409, 230, 305, 5, 84, "Print",
 CellTags->"Info3566187387-9547786"]
}, Open  ]],
Cell[9729, 238, 1106, 17, 164, "Text"],
Cell[10838, 257, 288, 7, 32, "Item"],
Cell[CellGroupData[{
Cell[11151, 268, 157, 4, 40, "Input"],
Cell[11311, 274, 145, 2, 40, "Output"]
}, Open  ]],
Cell[11471, 279, 635, 10, 66, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[12155, 295, 503, 8, 47, "Section"],
Cell[12661, 305, 1438, 24, 486, "Text"],
Cell[CellGroupData[{
Cell[14124, 333, 11898, 305, 2139, "Print"],
Cell[26025, 640, 399, 6, 364, "Print",
 CellTags->"Info3552067720-9535980"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[26473, 652, 520, 9, 47, "Section"],
Cell[26996, 663, 1152, 17, 586, "Text"],
Cell[28151, 682, 414, 9, 189, "Item"],
Cell[CellGroupData[{
Cell[28590, 695, 414, 10, 135, "Input"],
Cell[29007, 707, 459, 12, 135, "Output"]
}, Open  ]],
Cell[29481, 722, 280, 6, 130, "Text"],
Cell[29764, 730, 700, 18, 127, "InlineFormula"],
Cell[30467, 750, 2452, 51, 1305, "Text"],
Cell[32922, 803, 697, 11, 360, "Text"],
Cell[CellGroupData[{
Cell[33644, 818, 317, 8, 135, "Input"],
Cell[33964, 828, 144, 3, 135, "Output"]
}, Open  ]],
Cell[34123, 834, 394, 7, 136, "Text"],
Cell[CellGroupData[{
Cell[34542, 845, 237, 6, 135, "Input"],
Cell[34782, 853, 142, 3, 135, "Output"]
}, Open  ]],
Cell[34939, 859, 412, 8, 208, "Text"],
Cell[35354, 869, 321, 8, 109, "Item"],
Cell[35678, 879, 608, 19, 312, "Input"],
Cell[CellGroupData[{
Cell[36311, 902, 133, 3, 135, "Input"],
Cell[36447, 907, 890, 27, 225, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[37386, 940, 502, 9, 49, "Section"],
Cell[37891, 951, 916, 15, 486, "Text"],
Cell[38810, 968, 2619, 38, 1432, "Text"],
Cell[CellGroupData[{
Cell[41454, 1010, 147, 3, 135, "Input"],
Cell[41604, 1015, 445, 8, 283, "Print",
 CellTags->"Info3565845837-2407871"]
}, Open  ]],
Cell[42064, 1026, 414, 9, 189, "Item"],
Cell[CellGroupData[{
Cell[42503, 1039, 319, 8, 135, "Input"],
Cell[42825, 1049, 334, 9, 135, "Output"]
}, Open  ]],
Cell[43174, 1061, 375, 8, 189, "Item"],
Cell[CellGroupData[{
Cell[43574, 1073, 315, 8, 135, "Input"],
Cell[43892, 1083, 146, 3, 135, "Output"]
}, Open  ]],
Cell[44053, 1089, 1206, 22, 657, "Text"],
Cell[CellGroupData[{
Cell[45284, 1115, 147, 3, 135, "Input"],
Cell[45434, 1120, 792, 13, 465, "Print",
 CellTags->"Info3565845842-2407871"]
}, Open  ]],
Cell[46241, 1136, 838, 14, 400, "Text"],
Cell[CellGroupData[{
Cell[47104, 1154, 156, 3, 135, "Input"],
Cell[47263, 1159, 144, 3, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47444, 1167, 185, 4, 135, "Input"],
Cell[47632, 1173, 194, 5, 135, "Output"]
}, Open  ]],
Cell[47841, 1181, 712, 12, 312, "Text"],
Cell[48556, 1195, 107, 2, 135, "Input"],
Cell[48666, 1199, 316, 8, 109, "Item"],
Cell[CellGroupData[{
Cell[49007, 1211, 315, 8, 135, "Input"],
Cell[49325, 1221, 360, 10, 135, "Output"]
}, Open  ]],
Cell[49700, 1234, 519, 10, 312, "Text"],
Cell[50222, 1246, 194, 5, 109, "Item"],
Cell[CellGroupData[{
Cell[50441, 1255, 338, 7, 216, "Input"],
Cell[50782, 1264, 242, 7, 135, "Output"]
}, Open  ]],
Cell[51039, 1274, 1353, 21, 573, "Text"],
Cell[52395, 1297, 262, 8, 109, "Item"],
Cell[CellGroupData[{
Cell[52682, 1309, 241, 6, 135, "Input"],
Cell[52926, 1317, 182, 4, 135, "Output"]
}, Open  ]],
Cell[53123, 1324, 246, 5, 109, "Item"],
Cell[CellGroupData[{
Cell[53394, 1333, 243, 6, 135, "Input"],
Cell[53640, 1341, 261, 7, 135, "Output"]
}, Open  ]],
Cell[53916, 1351, 452, 9, 312, "Text"],
Cell[54371, 1362, 272, 9, 229, "Text"],
Cell[54646, 1373, 1066, 17, 657, "Text"],
Cell[CellGroupData[{
Cell[55737, 1394, 194, 5, 109, "Item"],
Cell[55934, 1401, 249, 5, 109, "Item"],
Cell[56186, 1408, 301, 6, 109, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56524, 1419, 222, 5, 135, "Input"],
Cell[56749, 1426, 361, 11, 135, "Output"]
}, Open  ]],
Cell[57125, 1440, 307, 6, 109, "Item"],
Cell[CellGroupData[{
Cell[57457, 1450, 220, 5, 135, "Input"],
Cell[57680, 1457, 367, 11, 135, "Output"]
}, Open  ]],
Cell[58062, 1471, 1377, 23, 829, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[59476, 1499, 536, 9, 47, "Section"],
Cell[60015, 1510, 826, 15, 400, "Text"],
Cell[CellGroupData[{
Cell[60866, 1529, 272, 5, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[61163, 1538, 138, 3, 135, "Input"],
Cell[61304, 1543, 578, 10, 366, "Print",
 CellTags->"Info3565846587-2407871"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61919, 1558, 145, 3, 135, "Input"],
Cell[62067, 1563, 581, 10, 366, "Print",
 CellTags->"Info3565846596-2407871"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62697, 1579, 277, 5, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[62999, 1588, 135, 3, 135, "Input"],
Cell[63137, 1593, 581, 10, 364, "Print",
 CellTags->"Info3565846624-2407871"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63755, 1608, 145, 3, 135, "Input"],
Cell[63903, 1613, 581, 10, 364, "Print",
 CellTags->"Info3565846637-2407871"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64533, 1629, 196, 4, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[64754, 1637, 142, 3, 135, "Input"],
Cell[64899, 1642, 415, 8, 204, "Print",
 CellTags->"Info3565846649-2407871"]
}, Open  ]],
Cell[65329, 1653, 326, 7, 141, "Text"],
Cell[CellGroupData[{
Cell[65680, 1664, 118, 3, 141, "Input"],
Cell[65801, 1669, 232, 6, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66070, 1680, 157, 4, 135, "Input"],
Cell[66230, 1686, 230, 6, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66497, 1697, 164, 5, 135, "Input"],
Cell[66664, 1704, 281, 8, 135, "Output"]
}, Open  ]],
Cell[66960, 1715, 161, 2, 130, "Text"],
Cell[67124, 1719, 348, 8, 109, "Item"],
Cell[CellGroupData[{
Cell[67497, 1731, 312, 9, 135, "Input"],
Cell[67812, 1742, 250, 7, 135, "Output"]
}, Open  ]],
Cell[68077, 1752, 337, 6, 130, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68451, 1763, 294, 5, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[68770, 1772, 136, 3, 135, "Input"],
Cell[68909, 1777, 792, 13, 465, "Print",
 CellTags->"Info3565847009-2407871"]
}, Open  ]],
Cell[69716, 1793, 412, 8, 130, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70165, 1806, 171, 4, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[70361, 1814, 143, 3, 135, "Input"],
Cell[70507, 1819, 801, 13, 465, "Print",
 CellTags->"Info3565847016-2407871"]
}, Open  ]],
Cell[71323, 1835, 432, 8, 130, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71792, 1848, 272, 5, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[72089, 1857, 136, 3, 135, "Input"],
Cell[72228, 1862, 457, 8, 283, "Print",
 CellTags->"Info3565847036-2407871"]
}, Open  ]],
Cell[72700, 1873, 171, 3, 130, "Text"],
Cell[72874, 1878, 792, 21, 171, "Text"],
Cell[73669, 1901, 187, 4, 130, "Text"],
Cell[73859, 1907, 347, 7, 109, "Item"],
Cell[CellGroupData[{
Cell[74231, 1918, 312, 8, 135, "Input"],
Cell[74546, 1928, 789, 24, 135, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75384, 1958, 174, 4, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[75583, 1966, 138, 3, 135, "Input"],
Cell[75724, 1971, 275, 6, 202, "Print",
 CellTags->"Info3565847250-2407871"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76036, 1982, 138, 3, 135, "Input"],
Cell[76177, 1987, 273, 6, 202, "Print",
 CellTags->"Info3565847256-2407871"]
}, Open  ]],
Cell[76465, 1996, 475, 8, 208, "Text"],
Cell[CellGroupData[{
Cell[76965, 2008, 145, 3, 135, "Input"],
Cell[77113, 2013, 447, 8, 283, "Print",
 CellTags->"Info3565847277-2407871"]
}, Open  ]],
Cell[77575, 2024, 207, 5, 130, "Text"],
Cell[77785, 2031, 426, 10, 109, "Item"],
Cell[CellGroupData[{
Cell[78236, 2045, 227, 5, 135, "Input"],
Cell[78466, 2052, 264, 8, 162, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78767, 2065, 191, 4, 135, "Input"],
Cell[78961, 2071, 141, 3, 135, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79151, 2080, 203, 4, 130, "Subsubsection"],
Cell[CellGroupData[{
Cell[79379, 2088, 136, 3, 135, "Input"],
Cell[79518, 2093, 576, 10, 364, "Print",
 CellTags->"Info3565847437-2407871"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80131, 2108, 136, 3, 135, "Input"],
Cell[80270, 2113, 570, 10, 364, "Print",
 CellTags->"Info3565847505-2407871"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[80901, 2130, 400, 8, 49, "Section"],
Cell[81304, 2140, 791, 13, 208, "Text"],
Cell[CellGroupData[{
Cell[82120, 2157, 130, 2, 121, "Subsubsection"],
Cell[82253, 2161, 458, 8, 283, "Text"],
Cell[82714, 2171, 140, 3, 130, "Text"],
Cell[82857, 2176, 233, 4, 130, "Text"],
Cell[83093, 2182, 1004, 34, 487, "Input"],
Cell[84100, 2218, 212, 6, 141, "Input"],
Cell[CellGroupData[{
Cell[84337, 2228, 231, 4, 135, "Input"],
Cell[84571, 2234, 1031, 32, 216, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85651, 2272, 135, 2, 121, "Subsubsection"],
Cell[85789, 2276, 888, 14, 360, "Text"],
Cell[86680, 2292, 162, 3, 130, "Text"],
Cell[86845, 2297, 358, 6, 130, "Text"],
Cell[CellGroupData[{
Cell[87228, 2307, 186, 4, 135, "Input"],
Cell[87417, 2313, 632, 20, 216, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88098, 2339, 303, 5, 121, "Subsubsection"],
Cell[88404, 2346, 234, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[88663, 2355, 173, 3, 135, "Input"],
Cell[88839, 2360, 642, 11, 441, "Print",
 CellTags->"Info3565849710-2407871"]
}, Open  ]],
Cell[89496, 2374, 187, 4, 100, "Item"],
Cell[89686, 2380, 542, 13, 135, "Input"],
Cell[90231, 2395, 290, 6, 130, "Text"],
Cell[CellGroupData[{
Cell[90546, 2405, 304, 7, 135, "Input"],
Cell[90853, 2414, 774, 23, 135, "Output"]
}, Open  ]],
Cell[91642, 2440, 363, 7, 130, "Text"],
Cell[CellGroupData[{
Cell[92030, 2451, 289, 7, 135, "Input"],
Cell[92322, 2460, 769, 23, 135, "Output"]
}, Open  ]],
Cell[93106, 2486, 562, 9, 208, "Text"],
Cell[CellGroupData[{
Cell[93693, 2499, 276, 6, 135, "Input"],
Cell[93972, 2507, 452, 13, 135, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94473, 2526, 752, 10, 121, "Subsubsection"],
Cell[95228, 2538, 451, 8, 283, "Text"],
Cell[95682, 2548, 181, 3, 130, "Text"],
Cell[95866, 2553, 553, 9, 109, "Item"],
Cell[96422, 2564, 217, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[96664, 2573, 1249, 34, 262, "Input"],
Cell[97916, 2609, 1381, 40, 163, "Output"]
}, Open  ]],
Cell[99312, 2652, 377, 7, 130, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[99738, 2665, 632, 12, 47, "Section"],
Cell[CellGroupData[{
Cell[100395, 2681, 145, 3, 130, "Subsubsection"],
Cell[100543, 2686, 1177, 19, 513, "Text"],
Cell[101723, 2707, 224, 5, 109, "Item"],
Cell[101950, 2714, 205, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[102180, 2723, 274, 7, 135, "Input"],
Cell[102457, 2732, 295, 9, 225, "Output"]
}, Open  ]],
Cell[102767, 2744, 307, 6, 130, "Text"],
Cell[CellGroupData[{
Cell[103099, 2754, 214, 5, 135, "Input"],
Cell[103316, 2761, 213, 6, 135, "Output"]
}, Open  ]],
Cell[103544, 2770, 248, 6, 130, "Text"],
Cell[CellGroupData[{
Cell[103817, 2780, 352, 10, 135, "Input"],
Cell[104172, 2792, 340, 10, 262, "Output"]
}, Open  ]],
Cell[104527, 2805, 200, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[104752, 2814, 636, 18, 216, "Input"],
Cell[105391, 2834, 522, 16, 271, "Output"]
}, Open  ]],
Cell[105928, 2853, 190, 5, 109, "Item"],
Cell[106121, 2860, 321, 7, 208, "Text"],
Cell[106445, 2869, 380, 10, 285, "Text"],
Cell[106828, 2881, 626, 12, 283, "Text"],
Cell[CellGroupData[{
Cell[107479, 2897, 222, 7, 225, "Input"],
Cell[107704, 2906, 295, 9, 225, "Output"]
}, Open  ]],
Cell[108014, 2918, 238, 3, 130, "Text"],
Cell[CellGroupData[{
Cell[108277, 2925, 262, 8, 231, "Input"],
Cell[108542, 2935, 448, 15, 135, "Output"]
}, Open  ]],
Cell[109005, 2953, 383, 8, 208, "Text"],
Cell[109391, 2963, 209, 4, 130, "Text"],
Cell[109603, 2969, 220, 7, 235, "Input"],
Cell[109826, 2978, 235, 4, 130, "Text"],
Cell[CellGroupData[{
Cell[110086, 2986, 217, 7, 235, "Input"],
Cell[110306, 2995, 292, 9, 235, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110647, 3010, 263, 5, 130, "Subsubsection"],
Cell[110913, 3017, 833, 14, 360, "Text"],
Cell[CellGroupData[{
Cell[111771, 3035, 250, 7, 231, "Input"],
Cell[112024, 3044, 172, 4, 135, "Output"]
}, Open  ]],
Cell[112211, 3051, 668, 11, 283, "Text"],
Cell[CellGroupData[{
Cell[112904, 3066, 179, 5, 271, "Input"],
Cell[113086, 3073, 607, 16, 135, "Output"]
}, Open  ]],
Cell[113708, 3092, 238, 3, 130, "Text"],
Cell[CellGroupData[{
Cell[113971, 3099, 176, 5, 276, "Input"],
Cell[114150, 3106, 251, 7, 276, "Output"]
}, Open  ]],
Cell[114416, 3116, 662, 13, 208, "Text"],
Cell[CellGroupData[{
Cell[115103, 3133, 286, 8, 271, "Input"],
Cell[115392, 3143, 141, 3, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115570, 3151, 287, 8, 271, "Input"],
Cell[115860, 3161, 144, 3, 135, "Output"]
}, Open  ]],
Cell[116019, 3167, 611, 11, 312, "Text"],
Cell[CellGroupData[{
Cell[116655, 3182, 285, 8, 270, "Input"],
Cell[116943, 3192, 284, 8, 270, "Output"]
}, Open  ]],
Cell[117242, 3203, 423, 8, 208, "Text"],
Cell[CellGroupData[{
Cell[117690, 3215, 309, 9, 270, "Input"],
Cell[118002, 3226, 328, 10, 270, "Output"]
}, Open  ]],
Cell[118345, 3239, 430, 8, 130, "Text"],
Cell[CellGroupData[{
Cell[118800, 3251, 208, 5, 135, "Input"],
Cell[119011, 3258, 208, 6, 135, "Output"]
}, Open  ]],
Cell[119234, 3267, 213, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[119472, 3276, 275, 7, 216, "Input"],
Cell[119750, 3285, 145, 3, 135, "Output"]
}, Open  ]],
Cell[119910, 3291, 333, 6, 130, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[120292, 3303, 611, 10, 49, "Section"],
Cell[120906, 3315, 890, 20, 283, "Text"],
Cell[121799, 3337, 320, 7, 130, "Text"],
Cell[CellGroupData[{
Cell[122144, 3348, 132, 3, 148, "Input"],
Cell[122279, 3353, 361, 11, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122677, 3369, 132, 3, 148, "Input"],
Cell[122812, 3374, 361, 11, 135, "Output"]
}, Open  ]],
Cell[123188, 3388, 368, 7, 130, "Text"],
Cell[123559, 3397, 234, 5, 109, "Item"],
Cell[CellGroupData[{
Cell[123818, 3406, 262, 7, 163, "Input"],
Cell[124083, 3415, 423, 7, 258, "Print"],
Cell[124509, 3424, 534, 16, 135, "Output"]
}, Open  ]],
Cell[125058, 3443, 1223, 24, 310, "Text"],
Cell[126284, 3469, 195, 6, 109, "Item"],
Cell[126482, 3477, 272, 6, 130, "Text"],
Cell[126757, 3485, 1423, 45, 216, "Input"],
Cell[128183, 3532, 255, 6, 130, "Text"],
Cell[CellGroupData[{
Cell[128463, 3542, 187, 4, 135, "Input"],
Cell[128653, 3548, 243, 6, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128933, 3559, 302, 5, 216, "Input"],
Cell[129238, 3566, 3473, 91, 222, "Output"],
Cell[132714, 3659, 3471, 91, 222, "Output"]
}, Open  ]],
Cell[136200, 3753, 299, 7, 229, "Text"],
Cell[CellGroupData[{
Cell[136524, 3764, 348, 7, 135, "Input"],
Cell[136875, 3773, 545, 9, 258, "Print"],
Cell[137423, 3784, 3839, 109, 370, "Output"]
}, Open  ]],
Cell[141277, 3896, 201, 3, 130, "Text"],
Cell[CellGroupData[{
Cell[141503, 3903, 195, 4, 135, "Input"],
Cell[141701, 3909, 10050, 249, 384, "Output"]
}, Open  ]],
Cell[151766, 4161, 188, 3, 130, "Text"],
Cell[CellGroupData[{
Cell[151979, 4168, 194, 4, 135, "Input"],
Cell[152176, 4174, 193, 5, 135, "Output"]
}, Open  ]],
Cell[152384, 4182, 183, 3, 130, "Text"],
Cell[CellGroupData[{
Cell[152592, 4189, 277, 5, 135, "Input"],
Cell[152872, 4196, 517, 9, 258, "Print"],
Cell[153392, 4207, 10629, 266, 384, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164058, 4478, 128, 2, 121, "Subsubsection"],
Cell[164189, 4482, 181, 4, 130, "Text"],
Cell[164373, 4488, 179, 3, 130, "Text"],
Cell[164555, 4493, 1092, 25, 225, "Text"],
Cell[165650, 4520, 236, 5, 109, "Item"],
Cell[CellGroupData[{
Cell[165911, 4529, 475, 12, 171, "Input"],
Cell[166389, 4543, 1268, 41, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167694, 4589, 504, 10, 189, "Input"],
Cell[168201, 4601, 3557, 114, 447, "Output"]
}, Open  ]],
Cell[171773, 4718, 958, 18, 451, "Text"],
Cell[CellGroupData[{
Cell[172756, 4740, 150, 3, 135, "Input"],
Cell[172909, 4745, 2988, 95, 370, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[175958, 4847, 678, 12, 49, "Section"],
Cell[176639, 4861, 481, 8, 208, "Text"],
Cell[177123, 4871, 367, 8, 130, "Text"],
Cell[CellGroupData[{
Cell[177515, 4883, 150, 3, 135, "Input"],
Cell[177668, 4888, 445, 8, 283, "Print",
 CellTags->"Info3566995934-1721651"]
}, Open  ]],
Cell[178128, 4899, 221, 6, 130, "Text"],
Cell[CellGroupData[{
Cell[178374, 4909, 130, 2, 135, "Input"],
Cell[178507, 4913, 238, 6, 135, "Output"]
}, Open  ]],
Cell[178760, 4922, 357, 7, 130, "Text"],
Cell[CellGroupData[{
Cell[179142, 4933, 150, 3, 135, "Input"],
Cell[179295, 4938, 1039, 16, 607, "Print",
 CellTags->"Info3566995942-1721651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180371, 4959, 153, 3, 135, "Input"],
Cell[180527, 4964, 391, 7, 283, "Print",
 CellTags->"Info3566995950-1721651"]
}, Open  ]],
Cell[180933, 4974, 881, 14, 283, "Text"],
Cell[CellGroupData[{
Cell[181839, 4992, 204, 3, 135, "Input"],
Cell[182046, 4997, 298, 5, 181, "Print"]
}, Open  ]],
Cell[182359, 5005, 526, 9, 130, "Text"],
Cell[CellGroupData[{
Cell[182910, 5018, 133, 2, 135, "Input"],
Cell[183046, 5022, 215, 5, 135, "Output"]
}, Open  ]],
Cell[183276, 5030, 705, 13, 208, "Text"],
Cell[CellGroupData[{
Cell[184006, 5047, 287, 6, 135, "Input"],
Cell[184296, 5055, 374, 11, 135, "Output"]
}, Open  ]],
Cell[184685, 5069, 883, 14, 283, "Text"],
Cell[185571, 5085, 880, 23, 141, "Input"],
Cell[186454, 5110, 547, 9, 208, "Text"],
Cell[CellGroupData[{
Cell[187026, 5123, 367, 8, 135, "Input"],
Cell[187396, 5133, 219, 6, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187652, 5144, 365, 8, 135, "Input"],
Cell[188020, 5154, 340, 9, 202, "Output"]
}, Open  ]],
Cell[188375, 5166, 405, 7, 130, "Text"],
Cell[CellGroupData[{
Cell[188805, 5177, 263, 7, 135, "Input"],
Cell[189071, 5186, 191, 5, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189299, 5196, 241, 6, 135, "Input"],
Cell[189543, 5204, 169, 4, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189749, 5213, 263, 7, 135, "Input"],
Cell[190015, 5222, 206, 6, 135, "Output"]
}, Open  ]],
Cell[190236, 5231, 274, 6, 130, "Text"],
Cell[CellGroupData[{
Cell[190535, 5241, 493, 13, 231, "Input"],
Cell[191031, 5256, 1455, 48, 433, "Output"]
}, Open  ]],
Cell[192501, 5307, 139, 2, 135, "Input"],
Cell[192643, 5311, 509, 9, 130, "Text"],
Cell[CellGroupData[{
Cell[193177, 5324, 300, 6, 135, "Input"],
Cell[193480, 5332, 173, 4, 135, "Output"]
}, Open  ]],
Cell[193668, 5339, 298, 6, 130, "Text"],
Cell[193969, 5347, 359, 7, 208, "Text"],
Cell[194331, 5356, 327, 7, 130, "Text"],
Cell[CellGroupData[{
Cell[194683, 5367, 207, 3, 135, "Input"],
Cell[194893, 5372, 186, 5, 135, "Output"]
}, Open  ]],
Cell[195094, 5380, 362, 7, 130, "Text"],
Cell[CellGroupData[{
Cell[195481, 5391, 289, 6, 135, "Input"],
Cell[195773, 5399, 169, 4, 135, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[195991, 5409, 579, 10, 47, "Section"],
Cell[196573, 5421, 902, 22, 343, "Text"],
Cell[CellGroupData[{
Cell[197500, 5447, 1874, 50, 447, "Input"],
Cell[199377, 5499, 2226, 48, 904, "Output"]
}, {2}]]
}, Closed]],
Cell[CellGroupData[{
Cell[201649, 5553, 663, 13, 47, "Section"],
Cell[202315, 5568, 609, 11, 238, "Text"],
Cell[202927, 5581, 646, 19, 370, "DisplayFormulaNumbered"],
Cell[203576, 5602, 1363, 43, 370, "DisplayFormulaNumbered"],
Cell[204942, 5647, 817, 15, 343, "Text"],
Cell[CellGroupData[{
Cell[205784, 5666, 131, 3, 135, "Input"],
Cell[205918, 5671, 142, 3, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206097, 5679, 133, 3, 135, "Input"],
Cell[206233, 5684, 142, 3, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206412, 5692, 131, 3, 135, "Input"],
Cell[206546, 5697, 201, 5, 135, "Output"]
}, Open  ]],
Cell[206762, 5705, 692, 12, 343, "Text"],
Cell[CellGroupData[{
Cell[207479, 5721, 147, 3, 135, "Input"],
Cell[207629, 5726, 391, 7, 283, "Print",
 CellTags->"Info3565850615-2407871"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208057, 5738, 259, 6, 135, "Input"],
Cell[208319, 5746, 193, 5, 135, "Output"]
}, Open  ]],
Cell[208527, 5754, 754, 13, 343, "Text"],
Cell[CellGroupData[{
Cell[209306, 5771, 148, 3, 135, "Input"],
Cell[209457, 5776, 144, 3, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209638, 5784, 150, 3, 135, "Input"],
Cell[209791, 5789, 161, 4, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209989, 5798, 148, 3, 135, "Input"],
Cell[210140, 5803, 146, 3, 135, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[210335, 5812, 897, 14, 47, "Section"],
Cell[211235, 5828, 1959, 38, 981, "Text"],
Cell[213197, 5868, 290, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[213512, 5877, 480, 9, 168, "Item"],
Cell[213995, 5888, 401, 8, 168, "Item"],
Cell[214399, 5898, 617, 11, 168, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215053, 5914, 633, 12, 189, "Subsubsection"],
Cell[215689, 5928, 233, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[215947, 5937, 710, 20, 235, "Input"],
Cell[216660, 5959, 610, 18, 235, "Output"]
}, Open  ]],
Cell[217285, 5980, 420, 8, 130, "Text"],
Cell[217708, 5990, 210, 4, 130, "Text"],
Cell[CellGroupData[{
Cell[217943, 5998, 655, 20, 235, "Input"],
Cell[218601, 6020, 628, 19, 235, "Output"]
}, Open  ]],
Cell[219244, 6042, 359, 7, 130, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219640, 6054, 396, 9, 121, "Subsubsection"],
Cell[220039, 6065, 344, 7, 130, "Text"],
Cell[CellGroupData[{
Cell[220408, 6076, 282, 7, 135, "Input"],
Cell[220693, 6085, 283, 8, 135, "Output"]
}, Open  ]],
Cell[220991, 6096, 522, 10, 130, "Text"],
Cell[CellGroupData[{
Cell[221538, 6110, 313, 8, 135, "Input"],
Cell[221854, 6120, 142, 3, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222033, 6128, 286, 7, 135, "Input"],
Cell[222322, 6137, 144, 3, 135, "Output"]
}, Open  ]],
Cell[222481, 6143, 552, 10, 208, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223070, 6158, 611, 12, 189, "Subsubsection"],
Cell[223684, 6172, 289, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[223998, 6181, 504, 14, 135, "Input"],
Cell[224505, 6197, 144, 3, 135, "Output"]
}, Open  ]],
Cell[224664, 6203, 265, 5, 130, "Text"],
Cell[CellGroupData[{
Cell[224954, 6212, 421, 11, 135, "Input"],
Cell[225378, 6225, 144, 3, 135, "Output"]
}, Open  ]],
Cell[225537, 6231, 213, 3, 130, "Text"],
Cell[CellGroupData[{
Cell[225775, 6238, 751, 16, 135, "Input"],
Cell[226529, 6256, 341, 7, 135, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

