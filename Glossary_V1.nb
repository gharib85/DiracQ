(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    457750,      11343]
NotebookOptionsPosition[    423022,      10193]
NotebookOutlinePosition[    424409,      10237]
CellTagsIndexPosition[    424145,      10228]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Core Glossary 
DiracQ.m\
\>", "Title",
 CellChangeTimes->{{3.5173960569993362`*^9, 3.517396107793539*^9}, {
  3.5173962858652697`*^9, 3.5173962911599627`*^9}},
 TextAlignment->Center],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<DiracQV1.m\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5153514106875*^9, 3.51535145225*^9}, {
  3.51586406559375*^9, 3.515864066375*^9}, {3.517330477078125*^9, 
  3.51733048225*^9}, {3.5178457181875*^9, 3.517845718734375*^9}, {
  3.5271719619321632`*^9, 3.527171970405901*^9}, {3.527469412001631*^9, 
  3.527469428316584*^9}, {3.530411546260531*^9, 3.5304115477478952`*^9}, {
  3.5671005163878393`*^9, 3.5671005169250603`*^9}, {3.648223842911475*^9, 
  3.6482238431958313`*^9}}],

Cell["\<\
An alphabetical  list of commands in DiracQ followed by their meaning and \
usage.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.517396411177429*^9, 3.5173964436620693`*^9}, {
  3.517396502087408*^9, 3.517396511904839*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DiracQ`*"}]], "Input",
 CellChangeTimes->{{3.515351496578125*^9, 3.515351502953125*^9}}],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["DiracQ`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["DiracQ`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["AddOperator",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"AddOperator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["DiracQPalette",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"DiracQPalette", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["OrganizedExpression",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"OrganizedExpression", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["TakeCPart",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"TakeCPart", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["AllSymbols",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"AllSymbols", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["DropQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"DropQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["OrganizedProduct",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"OrganizedProduct", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["TakeQPart",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"TakeQPart", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["anticommutator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"anticommutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Evaluation",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Evaluation", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["OrganizeQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"OrganizeQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["TakeSummand",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"TakeSummand", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["AntiCommutator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"AntiCommutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["f",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"f", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["p",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"p", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Vacuum",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Vacuum", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["AntiCommutatorDefinition",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"AntiCommutatorDefinition", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["FullOrganize",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"FullOrganize", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["PositionQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"PositionQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["x",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"x", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["ApplyDefinition",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"ApplyDefinition", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["function",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"function", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["ProductQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"ProductQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["X",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"X", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["b",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"b", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["f\[Dagger]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"f\[Dagger]", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["PushOperatorLeft",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"PushOperatorLeft", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["y",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"y", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["b\[Dagger]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"b\[Dagger]", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Humanize",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Humanize", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["PushOperatorRight",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"PushOperatorRight", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["z",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"z", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["commutator",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"commutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Identical",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Identical", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["p$",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"p$", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Delta]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"\[Delta]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["Commutator",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Commutator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["J",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"J", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["q",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"q", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Epsilon]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"\[Epsilon]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["CommutatorDefinition",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"CommutatorDefinition", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["n",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"n", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["QCoefficient",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"QCoefficient", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Sigma]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"\[Sigma]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["CommutatorRule",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"CommutatorRule", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["NCcross",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"NCcross", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["SecondaryOperators",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"SecondaryOperators", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[Dagger]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"\[Dagger]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["CommuteParts",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"CommuteParts", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["OperatorProduct",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"OperatorProduct", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["SimplifyQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"SimplifyQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["\[HBar]",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"\[HBar]", "DiracQ`"}},
          ButtonNote->"DiracQ`"]},
        {
         ButtonBox["Decomposition",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Decomposition", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Operators",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Operators", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["StandardOrderQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"StandardOrderQ", "DiracQ`"}},
          ButtonNote->"DiracQ`"], ""},
        {
         ButtonBox["DeleteOperator",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"DeleteOperator", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["Organize",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info3648198654-2372840", {"Organize", "DiracQ`"}},
          ButtonNote->"DiracQ`"], 
         ButtonBox["StandardReordering",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info3648198654-2372840", {"StandardReordering", "DiracQ`"}},
          ButtonNote->"DiracQ`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.648223854207531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["AddOperator", "Section",
 CellChangeTimes->{{3.51534757096875*^9, 3.515347574171875*^9}},
 FontSize->18],

Cell["\<\
AddOperator allows users to expand the number of symbols that can be \
specified as noncommutative objects. The argument of AddOperator is the \
symbol that represents the new operator. Algebraic relations for new \
operators such as basic commutators, anticommutators, and products must be \
defined by the user. To define a basic commutator for two non commuting \
operators  \[Alpha] and \[Beta], input CommutatorDefinition[\[Alpha], \
\[Beta]] := _ , where the blank is the definition of the commutator of \
\[Alpha] and \[Beta]. AntiCommutatorDefinition[\[Alpha], \[Beta]] is the \
equivalent function for anticommutators and OperatorProduct[\[Alpha], \
\[Beta]] is the equivalent definition for operator products. Any number of \
such definitions can be input. Inputs using undefined variables are accepted. \
If a definition is called that has not been input by the user, the output \
will read ' Null'. The mutual consistency of different algebraic relations of \
a given symbol must be guaranteed by the user. DiracQ will use the stated \
properties as and when it finds an expression where it can be applied.   Thus \
given inconsistent rules, the results of DiracQ will  also be inconsistent.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.5153475136875*^9, 3.51534752334375*^9}, {
  3.517074443129899*^9, 3.517074605343479*^9}, {3.517330497578125*^9, 
  3.51733049771875*^9}, {3.517330529390625*^9, 3.517330532859375*^9}, {
  3.5174022583455687`*^9, 3.517402381443684*^9}, {3.517402412843886*^9, 
  3.5174024232494307`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515348437875*^9, 3.5153484644375*^9}, {
   3.515348541203125*^9, 3.515348542140625*^9}, {3.51534860625*^9, 
   3.5153486715625*^9}, {3.515348913640625*^9, 3.51534894071875*^9}, 
   3.515349110234375*^9, 3.51586282575*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"AddOperator", "[", "\[Theta]", "]"}]}]], "Input",
 CellChangeTimes->{3.51534898675*^9}],

Cell[BoxData["\<\"Please enter all neccessary basic commutation and \
anticommutation relations. For help type ?AddOperator\"\>"], "Print",
 CellChangeTimes->{
  3.51534898825*^9, 3.51535115475*^9, {3.5158644938125*^9, 
   3.5158645073125*^9}, 3.516995598453125*^9, {3.648223854265171*^9, 
   3.648223893064538*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"i", ",", "j"}], "]"}]], "Input",
 CellChangeTimes->{{3.6482239208404713`*^9, 3.6482239237838573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CommutatorDefinition", "[", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "i_", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "j_", "]"}]}], "]"}], ":=", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"\[Theta]", "[", 
     RowBox[{"i", "+", "j"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.51534894678125*^9, 3.515348995015625*^9}, {
  3.51534904640625*^9, 3.51534909640625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Theta]", "[", "i", "]"}], ",", 
   RowBox[{"\[Theta]", "[", "j", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  RowBox[{"\[Theta]", "[", 
   RowBox[{"i", "+", "j"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.515349026703125*^9, {3.51534908546875*^9, 3.515349098296875*^9}, 
   3.515351157828125*^9, 3.5169956005625*^9, {3.648223854314705*^9, 
   3.648223865220158*^9}, {3.648223906762927*^9, 3.648223930040265*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AllSymbols", "Section",
 CellChangeTimes->{{3.515349317453125*^9, 3.515349320828125*^9}},
 FontSize->18],

Cell["\<\
All Symbols is an option setting which specifies that every non-numerical \
symbol will be viewed by every DiracQ function as a noncommutative object. By \
default DiracQ treats symbols as objects that commute unless otherwise \
specified. Activating All Symbols ensures that the manipulations performed by \
DiracQ proceed under the assumption that numbers commute but other symbols do \
not. All Symbols is selected as an option from the DiracQ Palette under the \
section \"Active Operators\".\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.515349289421875*^9, 3.515349290578125*^9}, {
  3.517402394879942*^9, 3.517402405260689*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.51534997503125*^9, 3.5153499799375*^9}, 
   3.51535080575*^9, 3.515516608953125*^9}],

Cell[TextData[StyleBox["In the DiracQ Palette activate All Symbols",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.515350007*^9, 3.51535011625*^9}, {3.51535020465625*^9, 
  3.515350208796875*^9}, {3.51551676840625*^9, 3.515516777765625*^9}},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"A", "**", "B"}], ",", 
   RowBox[{"C", "**", "D"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.515516812265625*^9, 3.515516823390625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.51551682409375*^9, {3.648223854350541*^9, 3.648223865247567*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["anticommutator", "Section"],

Cell["\<\
anticommutator is the function used to specify an unknown or otherwise \
unevaluated anticommutator of only two elements. (Most users can ignore this \
command.)\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.515349932078125*^9, 3.515349953734375*^9}, {
  3.517402464719203*^9, 3.517402465606283*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.51534997503125*^9, 3.5153499799375*^9}, 
   3.51535080575*^9, 3.515516608953125*^9}],

Cell[TextData[StyleBox["In the DiracQ Palette set Apply Definition to false \
and  activate Fermionic Annhilation and Creation Operators (f and \
f\[Dagger]):",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.515350007*^9, 3.51535011625*^9}, {3.51535020465625*^9, 
  3.515350208796875*^9}},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f\[Dagger]", "[", "b", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5153502129375*^9, 3.515350225421875*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"f", "[", "a", "]"}], " ", 
  RowBox[{"f\[Dagger]", "[", "b", "]"}]}]], "Output",
 CellChangeTimes->{{3.515350226484375*^9, 3.5153502305*^9}, {
  3.648223854385651*^9, 3.648223865267743*^9}}]
}, Open  ]],

Cell["\<\
The anticommutator remains unevaluated because Apply Definition has been set \
to false.\
\>", "Text",
 CellChangeTimes->{{3.515350707484375*^9, 3.515350739734375*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["AntiCommutator", "Section",
 FontSize->18],

Cell["\<\
AntiCommutator is used to calculate the anticommutators of expressions. \
AntiCommutator[A, B] is defined as AB + BA. AntiCommutator accepts two \
arguments seperated by a comma. The arguments of AntiCommutator can be long \
and complex. \
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.515349362953125*^9, 3.515349365546875*^9}, 
   3.515349400671875*^9, {3.51534965678125*^9, 3.515349711140625*^9}, 
   3.517402218905398*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.515349724125*^9, 3.515349726921875*^9}}],

Cell[TextData[StyleBox["In the DiracQ Palette activate Fermionic Annhilation \
and Creation Operators (f and f\[Dagger]):",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.5153497363125*^9, 3.51534977684375*^9}, {
  3.51535003734375*^9, 3.515350054765625*^9}, {3.5153500984375*^9, 
  3.515350125609375*^9}},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f\[Dagger]", "[", "b", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51534971440625*^9, 3.515349734171875*^9}, {
  3.515349788671875*^9, 3.51534979890625*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"f", "[", "a", "]"}], " ", 
  RowBox[{"f\[Dagger]", "[", "b", "]"}]}]], "Output",
 CellChangeTimes->{
  3.515349799390625*^9, {3.6482238544322*^9, 3.648223865296155*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example 2\n\n",
 StyleBox["In this example we take the anticommutator of a triple sum of \
destruction operators with a single creation operator. Notice that the fixed \
inded \[OpenCurlyDoubleQuote]k\[CloseCurlyDoubleQuote] is equated to the \
three running indices \[OpenCurlyDoubleQuote]i,j,l\[CloseCurlyDoubleQuote] \
one after the other.",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellChangeTimes->{{3.515349804*^9, 3.515349807125*^9}, {3.517074938685973*^9,
   3.51707504524325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      UnderscriptBox["\[Sum]", "j"], 
      RowBox[{
       UnderscriptBox["\[Sum]", "l"], 
       RowBox[{
        RowBox[{"f", "[", "i", "]"}], "**", 
        RowBox[{"f", "[", "j", "]"}], "**", 
        RowBox[{"f", "[", "l", "]"}]}]}]}]}]}], ",", 
   RowBox[{"f\[Dagger]", "[", "k", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517074669501573*^9, 3.517074725113852*^9}, {
  3.517074757077486*^9, 3.517074764106804*^9}, {3.517074822923349*^9, 
  3.5170748697778397`*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{
    UnderscriptBox["\[Sum]", "j"], 
    RowBox[{
     UnderscriptBox["\[Sum]", "l"], 
     RowBox[{
      RowBox[{"f", "[", "i", "]"}], " ", 
      RowBox[{"f", "[", "j", "]"}], " ", 
      RowBox[{"f", "[", "l", "]"}], " ", 
      RowBox[{"f\[Dagger]", "[", "k", "]"}]}]}]}]}]}]], "Output",
 CellChangeTimes->{
  3.5170747649800797`*^9, {3.5170748093841953`*^9, 3.517074825907421*^9}, 
   3.5170748727732897`*^9, {3.6482238546150103`*^9, 3.648223865320733*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["AntiCommutatorDefinition", "Section"],

Cell["\<\
AntiCommutatorDefinition is the function through which the anticommutators of \
symbols are defined. This function is used when adding operators through the \
AddOperator Function.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535083715625*^9, 3.5153508388125*^9}, {
  3.51535091925*^9, 3.51535094940625*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515350964390625*^9, 3.5153509665625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddOperator", "[", "\[Theta]", "]"}]], "Input",
 CellChangeTimes->{{3.51535098240625*^9, 3.515351003734375*^9}}],

Cell[BoxData["\<\"Please enter all neccessary basic commutation and \
anticommutation relations. For help type ?AddOperator\"\>"], "Print",
 CellChangeTimes->{
  3.51535100534375*^9, 3.515351053984375*^9, {3.51535123134375*^9, 
   3.5153512424375*^9}, {3.6482238546522827`*^9, 3.6482238653636703`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AntiCommutatorDefinition", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "i_", "]"}], ",", 
    RowBox[{"\[Theta]", "[", "j_", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Delta]", "[", 
    RowBox[{"i", ",", "j"}], "]"}], 
   RowBox[{"\[Theta]", "[", "j", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.515351070375*^9, 3.515351113109375*^9}, {
  3.515351194265625*^9, 3.51535123421875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"\[Theta]", "[", "i", "]"}], ",", 
   RowBox[{"\[Theta]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51535112209375*^9, 3.515351132953125*^9}, {
  3.5153511964375*^9, 3.5153512173125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"i", ",", "j"}], "]"}], "**", 
  RowBox[{"\[Theta]", "[", "j", "]"}]}]], "Output",
 CellChangeTimes->{{3.5153511333125*^9, 3.51535113971875*^9}, {
  3.515351197671875*^9, 3.5153512431875*^9}, {3.64822385471397*^9, 
  3.6482238654079742`*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["ApplyDefinition", "Section",
 CellChangeTimes->{{3.5153515955625*^9, 3.515351598890625*^9}}],

Cell["\<\
ApplyDefinition is an option in the DiracQ Palette that specifies whether or \
not known properties of operators should be applied or not. When Apply \
Definition is set to True properties such as commutator, anticommutators, and \
products of operators will be evaluated. When Apply Definition is set to \
false commutators, anticommutators, and products will remain unevaluated.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.515351615734375*^9, 3.51535174296875*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.51535176759375*^9, 3.515351769375*^9}}],

Cell["\<\
In the DiracQ Palette set Apply Definition to True and activate Bosonic \
Annhilation and Creation Operators (b and b\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.5153518055*^9, 3.515351897203125*^9}, {
  3.515352102578125*^9, 3.515352102953125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"b", "[", "i", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.515351867734375*^9, 3.515351885984375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.51535188059375*^9, 3.515351903328125*^9}, 
   3.6482238654471903`*^9}]
}, Open  ]],

Cell["Now set Apply Definition to False.", "Text",
 CellChangeTimes->{{3.515351907671875*^9, 3.515351921109375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"b", "[", "i", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.515351867734375*^9, 3.515351885984375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5153519344375*^9, 3.6482238654794416`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["b", "Section",
 CellChangeTimes->{3.515351949546875*^9}],

Cell[TextData[{
 "b is the Bosonic annihilation operator. This operator requires one index \
denoting site, and a second optional index can be used to denote spin or \
species. Also included is the Bosonic number operator, represented by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "b"], TraditionalForm]]],
 ". The argument scheme for the number operator is identical to that of the \
annihilation operator. For more information on site index see below."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
  3.51551621971875*^9, 3.515516245125*^9}, {3.517402574138571*^9, 
  3.5174026252893143`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551661784375*^9}],

Cell["\<\
In the DiracQ Palette activate Bosonic Annhilation and Creation Operators (b \
and b\[Dagger]).
The b operator obeys the canonical commutation relation for Bosons.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, 
   3.527702860844211*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"b", "[", "1", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.515516275046875*^9, 3.648223865501079*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bra", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}}],

Cell["Bra[x] represents the bra vector <x| using Dirac\[CloseCurlyQuote]s \
notation", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.517403419650484*^9, 
   3.5174034436654*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]) and Bra and Ket Vectors.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.5164751000500374`*^9, 
  3.5164751064251184`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Bra", "[", "A", "]"}], "=", 
  RowBox[{
   RowBox[{"Bra", "[", "Vacuum", "]"}], "**", 
   RowBox[{"f", "[", "1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
  3.5155169773125*^9, 3.515517036421875*^9}}],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"Vacuum"},
   "Bra"], "**", 
  RowBox[{"f", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.515517005828125*^9, 3.5155170369375*^9}, 
   3.516475095643731*^9, 3.648223865530521*^9}]
}, Open  ]],

Cell["\<\
In the calculation below we use the important function ProductQ that is \
described more fully  below. This function uses all the non commutative \
properties supplied by the user and implements them to give an easily \
readable and correct final result. In this calculation, the \
\[OpenCurlyDoubleQuote]f\[CloseCurlyDoubleQuote] fermion at site 1 that is \
present in Bra[A] is destroyed by f\[Dagger][1] acting to its left.\
\>", "Text",
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.517075616154914*^9, 
   3.517075764192198*^9}, {3.5170758638019457`*^9, 3.517075927893106*^9}, {
   3.5173371158125*^9, 3.51733713146875*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"Bra", "[", "A", "]"}], ",", 
   RowBox[{"f\[Dagger]", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.515517029765625*^9, 3.5155170931875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.515517033609375*^9, 3.515517093640625*^9}, 
   3.5164750962843637`*^9, 3.6482238655885897`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["b\[Dagger]", "Section",
 CellChangeTimes->{{3.515516436953125*^9, 3.515516439828125*^9}}],

Cell[TextData[{
 "b\[Dagger] is the Bosonic creation operator. This operator requires one \
index denoting site, and a second optional index can be used to denote spin \
or species. Also included is the bosonic number operator, represented by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "b"], TraditionalForm]]],
 ". The argument scheme for the number operator is identical to that of the \
annihilation operator. For more information on site index see Site Index \
below.  The dagger symbol is created by entering \[EscapeKey]dg\[EscapeKey] \
or clicking the appropriate button on the DiracQ palette."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
  3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
  3.51551652434375*^9}, {3.517403509255514*^9, 3.5174035475152807`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.5155166190625*^9}],

Cell["\<\
In the DiracQ Palette activate Bosonic Annhilation and Creation Operators (b \
and b\[Dagger]).
The b operator obeys the canonical commutation relation for bosons.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, 
   3.527702887059607*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"b", "[", "1", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.515516275046875*^9, 3.6482238656371107`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["commutator", "Section",
 CellChangeTimes->{3.51551711996875*^9}],

Cell["\<\
commutator is the function used to specify an unknown or otherwise \
unevaluated commutator of only two elements. (Most users can ignore this \
command.)\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.515349932078125*^9, 3.515349953734375*^9}, {
  3.51551712315625*^9, 3.51551712846875*^9}, {3.517396576937707*^9, 
  3.5173966152425127`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.51534997503125*^9, 3.5153499799375*^9}, 
   3.51535080575*^9, 3.515516608953125*^9}],

Cell[TextData[StyleBox["In the DiracQ Palette set Apply Definition to false \
and  activate Bosonic Annhilation and Creation Operators (f and f\[Dagger]):",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.515350007*^9, 3.51535011625*^9}, {3.51535020465625*^9, 
  3.515350208796875*^9}, {3.51733733696875*^9, 3.51733733946875*^9}},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"b", "[", "i", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5153502129375*^9, 3.515350225421875*^9}, {
  3.5155171350625*^9, 3.51551713565625*^9}, {3.51733724865625*^9, 
  3.517337264859375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.515350226484375*^9, 3.5153502305*^9}, {
   3.515517144359375*^9, 3.515517153125*^9}, {3.51733725453125*^9, 
   3.51733726528125*^9}, 3.6482238656797256`*^9}]
}, Open  ]],

Cell["\<\
The commutator remains unevaluated because Apply Definition has been set to \
false. If we do not set Aply Definition is set to true, the default setting, \
the result we obtain would use the known commutator of Bosonic operators.\
\>", "Text",
 CellChangeTimes->{{3.515350707484375*^9, 3.515350739734375*^9}, {
   3.515517159078125*^9, 3.515517159765625*^9}, {3.517076044592738*^9, 
   3.517076121799653*^9}, 3.51707615908561*^9, {3.517076583946281*^9, 
   3.517076588477654*^9}, {3.51733719865625*^9, 3.5173371993125*^9}, {
   3.517337283*^9, 3.517337334328125*^9}},
 FontColor->GrayLevel[0]],

Cell["In the DiracQ Palette set Apply Definition to true:", "Text",
 CellChangeTimes->{{3.51733722565625*^9, 3.517337232671875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"b", "[", "i", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517337234578125*^9, 3.51733727303125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5173372435*^9, 3.517337278109375*^9}, 
   3.648223865713563*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Commutator", "Section",
 CellChangeTimes->{3.5155171914375*^9},
 FontSize->18],

Cell["\<\
Commutator is used to calculate the commutators of expressions. Commutator[A, \
B] is defined as AB - BA. Commutator accepts two arguments seperated by a \
comma. The arguments of Commutator can be long and complex.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.515349362953125*^9, 3.515349365546875*^9}, 
   3.515349400671875*^9, {3.51534965678125*^9, 3.515349711140625*^9}, {
   3.515517192828125*^9, 3.515517210109375*^9}, {3.517076183608098*^9, 
   3.517076184091404*^9}, {3.553255174652334*^9, 3.5532551751134453`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.515349402546875*^9, 3.515349405875*^9}, 
   3.515349722765625*^9, {3.515516610875*^9, 3.51551661271875*^9}}],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.515349724125*^9, 3.515349726921875*^9}}],

Cell[TextData[StyleBox["In the DiracQ Palette activate Bosonic Annhilation \
and Creation Operators (b and b\[Dagger]):",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.5153497363125*^9, 3.51534977684375*^9}, {
  3.51535003734375*^9, 3.515350054765625*^9}, {3.5153500984375*^9, 
  3.515350125609375*^9}, {3.51551722440625*^9, 3.5155172308125*^9}},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"b", "[", "a", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "b", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51534971440625*^9, 3.515349734171875*^9}, {
  3.515349788671875*^9, 3.51534979890625*^9}, {3.515517215609375*^9, 
  3.515517219484375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.515349799390625*^9, {3.515517235578125*^9, 3.515517239359375*^9}, 
   3.648223865766459*^9}]
}, Open  ]],

Cell["\<\
In the example below, the c number function u[i,j] does not take part in the \
commutator, but its argument gets its value from the Kronecker Delta function \
of the external index \[OpenCurlyDoubleQuote]k\[CloseCurlyDoubleQuote] with \
one of the two internal indices \[OpenCurlyDoubleQuote]i,j\
\[CloseCurlyDoubleQuote]. \
\>", "Text",
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.515349362953125*^9, 3.515349365546875*^9}, 
   3.515349400671875*^9, {3.51534965678125*^9, 3.515349711140625*^9}, {
   3.515517192828125*^9, 3.515517210109375*^9}, {3.517076183608098*^9, 
   3.517076184091404*^9}, {3.5170764271412973`*^9, 3.517076545175064*^9}, {
   3.51733754240625*^9, 3.517337546171875*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], " ", 
     RowBox[{
      UnderscriptBox["\[Sum]", "j"], 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"i", ",", "j"}], "]"}], " ", 
       RowBox[{
        RowBox[{"b", "[", "i", "]"}], "**", 
        RowBox[{"b", "[", "j", "]"}]}]}]}]}]}], ",", 
   RowBox[{"b\[Dagger]", "[", "k", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5170762373980017`*^9, 3.517076261517002*^9}, {
  3.5170763791067743`*^9, 3.51707639567754*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5170762373980017`*^9, 3.517076261517002*^9}, {
   3.5170763791067743`*^9, 3.51707639567754*^9}, 3.648223865946684*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["CommutatorDefinition", "Section",
 CellChangeTimes->{3.515517272828125*^9}],

Cell["\<\
CommutatorDefinition is the function through which the commutators of symbols \
are defined. This function is used when adding operators through the \
AddOperator Function.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535083715625*^9, 3.5153508388125*^9}, {
  3.51535091925*^9, 3.51535094940625*^9}, {3.51551727434375*^9, 
  3.515517278609375*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515350964390625*^9, 3.5153509665625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddOperator", "[", "\[Theta]", "]"}]], "Input",
 CellChangeTimes->{{3.51535098240625*^9, 3.515351003734375*^9}}],

Cell[BoxData["\<\"Please enter all neccessary basic commutation and \
anticommutation relations. For help type ?AddOperator\"\>"], "Print",
 CellChangeTimes->{
  3.51535100534375*^9, 3.515351053984375*^9, {3.51535123134375*^9, 
   3.5153512424375*^9}, 3.515517282734375*^9, 3.6482238660438957`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CommutatorDefinition", "[", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "i_", "]"}], ",", 
    RowBox[{"\[Theta]", "[", "j_", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Delta]", "[", 
    RowBox[{"i", ",", "j"}], "]"}], 
   RowBox[{"\[Theta]", "[", "j", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.515351070375*^9, 3.515351113109375*^9}, {
   3.515351194265625*^9, 3.51535123421875*^9}, 3.5155172851875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Theta]", "[", "i", "]"}], ",", 
   RowBox[{"\[Theta]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51535112209375*^9, 3.515351132953125*^9}, {
   3.5153511964375*^9, 3.5153512173125*^9}, 3.515517287125*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]", "[", 
   RowBox[{"i", ",", "j"}], "]"}], "**", 
  RowBox[{"\[Theta]", "[", "j", "]"}]}]], "Output",
 CellChangeTimes->{{3.5153511333125*^9, 3.51535113971875*^9}, {
   3.515351197671875*^9, 3.5153512431875*^9}, 3.515517287625*^9, 
   3.648223866114025*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["CommuteParts",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{
  3.515517272828125*^9, {3.517773137203125*^9, 3.5177731393125*^9}}],

Cell["\<\
CommuteParts[expr,{list1},{list2}] will reverse the order of the noncommuting \
objects specified by the lists list1 and list2. list1 and list2 specify lists \
of operators found in expr. Operators are specified by numerical ordering of \
the operators found in expr. To permute the second thru fourth operators \
found in expr with the fifth operator found in expr, list1 would be {2,4}, \
and list2 would be {5}.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535083715625*^9, 3.5153508388125*^9}, {
  3.51535091925*^9, 3.51535094940625*^9}, {3.51551727434375*^9, 
  3.515517278609375*^9}, {3.517773157015625*^9, 3.517773348578125*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515350964390625*^9, 3.5153509665625*^9}}],

Cell[TextData[{
 StyleBox["In the DiracQ Palette activate Canonical Position and Momentum \
Operators.",
  FontWeight->"Plain"],
 "\n",
 StyleBox["The following input will permute the second thru fourth operators \
found in the expression with the fifth operator found in the expression. Any \
nonzero commutators will be accounted for.",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.5153497363125*^9, 3.51534977684375*^9}, {
   3.51535003734375*^9, 3.515350054765625*^9}, {3.5153500984375*^9, 
   3.515350125609375*^9}, {3.51551722440625*^9, 3.5155172308125*^9}, {
   3.5177734180625*^9, 3.5177734370625*^9}, 3.527702912181944*^9},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommuteParts", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"p", "[", "j", "]"}], "**", 
    RowBox[{"q", "[", "i", "]"}], "**", 
    RowBox[{"q", "[", "j", "]"}], "**", 
    RowBox[{"q", "[", "k", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "5", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51535098240625*^9, 3.515351003734375*^9}, {
   3.517773351390625*^9, 3.5177734076875*^9}, 3.5177735266875*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\({}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866186611*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(3\\)\[NoBreak] of \
\[NoBreak]\\!\\({}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6482238662397623`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\({}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866307186*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866340918*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "drop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot drop positions \[NoBreak]\\!\\(2\\)\[NoBreak] \
through \[NoBreak]\\!\\(5\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Drop/drop\\\", \
ButtonNote -> \\\"Drop::drop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866373455*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "seqs"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Sequence specification (+n, -n, {+n}, {-n}, {m, n}, or {m, \
n, s}) expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] in \
\[NoBreak]\\!\\(Drop[\\(\\(\\(\\({}\\)\\), \\(\\(\\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) ** \\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\\) ** \\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) ** \\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)\\)\\), \\(\\({2, \
5}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/seqs\\\", ButtonNote -> \
\\\"Drop::seqs\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866412265*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "seqs"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Sequence specification (+n, -n, {+n}, {-n}, {m, n}, or {m, \
n, s}) expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] in \
\[NoBreak]\\!\\(Drop[\\(\\(\\(\\({}\\)\\), \\(\\(\\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 5 \[RightDoubleBracket]\\)\\) ** \\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\\) ** \\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 3 \[RightDoubleBracket]\\)\\) ** \\(\\(\\(\\({}\\)\\) \
\[LeftDoubleBracket] 4 \[RightDoubleBracket]\\)\\)\\)\\), \\(\\({2, \
5}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/seqs\\\", ButtonNote -> \
\\\"Drop::seqs\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866465959*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Thread", "::", "tdlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Objects of unequal length in \
\[NoBreak]\\!\\(\\(\\({}\\)\\)\\\\ \\(\\(\\(\\({}\\)\\) \[LeftDoubleBracket] \
5 \[RightDoubleBracket]\\)\\)\\\\ \\(\\(\\(\\({}\\)\\) \[LeftDoubleBracket] 2 \
\[RightDoubleBracket]\\)\\)\\\\ \\(\\(\\(\\({}\\)\\) \[LeftDoubleBracket] 3 \
\[RightDoubleBracket]\\)\\)\\\\ \\(\\(\\(\\({}\\)\\) \[LeftDoubleBracket] 4 \
\[RightDoubleBracket]\\)\\)\\\\ \\(\\({2, 5}\\)\\)\\\\ \\(\\(p[i]\\)\\)\\\\ \
\\(\\(p[j]\\)\\)\\\\ \\(\\(q[i]\\)\\)\\\\ \\(\\(q[j]\\)\\)\\\\ \
\\(\\(q[k]\\)\\)\\)\[NoBreak] cannot be combined. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Thread/tdlen\\\", ButtonNote -> \
\\\"Thread::tdlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866498147*^9}],

Cell[BoxData[
 RowBox[{"10", " ", 
  RowBox[{"p", "[", "i", "]"}], " ", 
  RowBox[{"p", "[", "j", "]"}], " ", 
  RowBox[{
   RowBox[{"{", "}"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
   " ", 
  RowBox[{
   RowBox[{"{", "}"}], "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
   " ", 
  RowBox[{
   RowBox[{"{", "}"}], "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}],
   " ", 
  RowBox[{
   RowBox[{"{", "}"}], "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
   " ", 
  RowBox[{"q", "[", "i", "]"}], " ", 
  RowBox[{"q", "[", "j", "]"}], " ", 
  RowBox[{"q", "[", "k", "]"}]}]], "Output",
 CellChangeTimes->{{3.51777352721875*^9, 3.517773531578125*^9}, 
   3.648223866503639*^9}]
}, Open  ]],

Cell["\<\
Only operators are counted for ordering purposes.  (The assumption here is \
that the \[OpenCurlyDoubleQuote]All Symbols\[CloseCurlyDoubleQuote] option is \
not used in the pallette- but only  relevant symbols  are declared to be \
operators). Therefore, in the example below, p[i] is specified by {1} and \
q[j] by {2}. \
\>", "Text",
 CellChangeTimes->{{3.517773536421875*^9, 3.51777356628125*^9}, {
  3.517773606078125*^9, 3.51777361340625*^9}, {3.527691683180587*^9, 
  3.5276918543732433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommuteParts", "[", 
  RowBox[{
   RowBox[{"5", " ", "a", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      RowBox[{"p", "[", "i", "]"}], "**", 
      RowBox[{"q", "[", "j", "]"}]}]}]}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517773578796875*^9, 3.517773641265625*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(1\\)\[NoBreak] of \
\[NoBreak]\\!\\({}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866588604*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(2\\)\[NoBreak] of \
\[NoBreak]\\!\\({}\\)\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866647952*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "drop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot drop positions \[NoBreak]\\!\\(1\\)\[NoBreak] \
through \[NoBreak]\\!\\(2\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Drop/drop\\\", \
ButtonNote -> \\\"Drop::drop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866679137*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "argm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Part\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
more arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argm\\\", ButtonNote -> \
\\\"Part::argm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866733536*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "argm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Part\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; \[NoBreak]\\!\\(1\\)\[NoBreak] or \
more arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argm\\\", ButtonNote -> \
\\\"Part::argm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223866791359*^9}],

Cell[BoxData[
 RowBox[{"5", " ", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{"a", " ", 
    RowBox[{"p", "[", "i", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Part", "[", "]"}], "2"], " ", 
    RowBox[{"q", "[", "j", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.5177736185625*^9, 3.517773642046875*^9}, 
   3.648223866952218*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Decomposition", "Section",
 CellChangeTimes->{3.515517272828125*^9, {3.515863488125*^9, 3.5158634905*^9}}
  ],

Cell[TextData[{
 StyleBox["The panel Decomposition on the DiracQ Palette gives the user two \
choices, Commutator or Anticommutator. ",
  FontColor->GrayLevel[0]],
 "The default setting is to decompose everything into commutators. ",
 StyleBox[" Making a choice of decomposition allows the user to",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["control",
  FontColor->GrayLevel[0]],
 " whether the  commutators of  composite symbols  will be decomposed into \
basic commutators",
 StyleBox[" or",
  FontColor->GrayLevel[0]],
 " anticommutators,  using appropriate standard rules. Not all combinations \
of operators can be decomposed entirely into basic commutators  or \
anticommutators. Changing the setting of decomposition has no effect so long \
as ApplyDefinition is set to true. When ApplyDefinition is set to false, the \
decomposition settings  make a difference in the results."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535083715625*^9, 3.5153508388125*^9}, {
  3.51535091925*^9, 3.51535094940625*^9}, {3.51551727434375*^9, 
  3.515517278609375*^9}, {3.515863496921875*^9, 3.51586356465625*^9}, {
  3.515864087296875*^9, 3.51586419371875*^9}, {3.517076849998643*^9, 
  3.51707685117809*^9}, {3.517076901679782*^9, 3.517076949279599*^9}, {
  3.517076979316842*^9, 3.517077037145709*^9}, {3.517077070312784*^9, 
  3.517077118133252*^9}, {3.51733758728125*^9, 3.51733766725*^9}, {
  3.517396644692882*^9, 3.517396780437632*^9}, {3.517396825044321*^9, 
  3.517396856701333*^9}, {3.5174036161668177`*^9, 3.5174036895589848`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515350964390625*^9, 3.5153509665625*^9}}],

Cell[TextData[StyleBox["In the DiracQ Palette set Apply Definition to False \
and activate All Symbols:",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.5153497363125*^9, 3.51534977684375*^9}, {
  3.51535003734375*^9, 3.515350054765625*^9}, {3.5153500984375*^9, 
  3.515350125609375*^9}, {3.51551722440625*^9, 3.5155172308125*^9}, {
  3.515864207921875*^9, 3.5158642540625*^9}},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"a", "**", "b"}], ",", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.515863567453125*^9, 3.515863624578125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.51586362834375*^9, {3.515864226515625*^9, 3.515864255375*^9}, 
   3.648223866979772*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Now in the DiracQ Palette set Decomposition to \
AntiCommutator:",
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.5153497363125*^9, 3.51534977684375*^9}, {
  3.51535003734375*^9, 3.515350054765625*^9}, {3.5153500984375*^9, 
  3.515350125609375*^9}, {3.51551722440625*^9, 3.5155172308125*^9}, {
  3.515864207921875*^9, 3.515864297984375*^9}},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"a", "**", "b"}], ",", "c"}], "]"}]], "Input"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.515864303375*^9, 3.51586430703125*^9}, 
   3.648223867234002*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5158644580625*^9, 3.5158644631875*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["DeleteOperator", "Section",
 CellChangeTimes->{{3.51534757096875*^9, 3.515347574171875*^9}, {
  3.515864535609375*^9, 3.515864537265625*^9}},
 FontSize->18],

Cell["\<\
DeleteOperator will remove a user defined operator from the list of possible \
operators. The argument of delete operators is the symbol by which the \
operator is represented.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.5153475136875*^9, 3.51534752334375*^9}, {
  3.515864539875*^9, 3.51586457178125*^9}, {3.515864641859375*^9, 
  3.51586465353125*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515348437875*^9, 3.5153484644375*^9}, {
   3.515348541203125*^9, 3.515348542140625*^9}, {3.51534860625*^9, 
   3.5153486715625*^9}, {3.515348913640625*^9, 3.51534894071875*^9}, 
   3.515349110234375*^9, 3.51586282575*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"AddOperator", "[", "\[Theta]", "]"}]}]], "Input",
 CellChangeTimes->{3.51534898675*^9}],

Cell[BoxData["\<\"Please enter all neccessary basic commutation and \
anticommutation relations. For help type ?AddOperator\"\>"], "Print",
 CellChangeTimes->{
  3.51534898825*^9, 3.51535115475*^9, {3.5158644938125*^9, 
   3.5158645073125*^9}, 3.515864574546875*^9, {3.515864611234375*^9, 
   3.51586461890625*^9}, 3.6482238673083982`*^9}]
}, Open  ]],

Cell["\<\
Calling Operators will display all currently active operators.\
\>", "Text",
 CellChangeTimes->{{3.51586457978125*^9, 3.515864598046875*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Operators"], "Input",
 CellChangeTimes->{{3.51586460615625*^9, 3.515864607203125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Theta]", ",", "\[Theta]", ",", "\[Theta]", ",", "\[Theta]"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.515864610015625*^9, 3.51586461965625*^9}, 
   3.648223867349729*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteOperator", "[", "\[Theta]", "]"}]], "Input",
 CellChangeTimes->{{3.515864621125*^9, 3.515864628734375*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.515864625078125*^9, 3.51586462925*^9}, 
   3.648223867396943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Operators"], "Input",
 CellChangeTimes->{{3.515864632734375*^9, 3.515864634578125*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.5158646359375*^9, 3.648223867432041*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["DiracQPalette", "Section",
 CellChangeTimes->{{3.51534757096875*^9, 3.515347574171875*^9}, {
  3.515864535609375*^9, 3.515864537265625*^9}, {3.515864738640625*^9, 
  3.51586474246875*^9}},
 FontSize->18],

Cell["DiracQPalette will open the DiracQ Palette.", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.5153475136875*^9, 3.51534752334375*^9}, {
   3.515864539875*^9, 3.51586457178125*^9}, {3.515864641859375*^9, 
   3.51586465353125*^9}, 3.515864768109375*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell["\<\
     Essential to the operation of the package is the DiracQPalette. This \
palette allows users to control the options of package functions, designate \
symbols as operators, and input some of the special symbols and functions \
used frequently when operatoring the package. To open the palette, input the \
function DiracQPalette. The palette should also open automatically when the \
package is first loaded.\
\>", "Text",
 CellChangeTimes->{{3.4929613169543324`*^9, 3.492961481208109*^9}, {
  3.4929628733493843`*^9, 3.492962892379616*^9}, {3.492970842895443*^9, 
  3.4929708436128473`*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"DiracQPalette", ",", 
   RowBox[{"Magnification", "\[Rule]", "1.25"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.492961514605739*^9, 3.492961518640624*^9}, {
  3.51740660719249*^9, 3.517406636080222*^9}, {3.5174069679144907`*^9, 
  3.517407019820705*^9}}],

Cell["\<\
A new notebook should open that is identical to the notebook shown below.\
\>", "Text",
 CellChangeTimes->{{3.492962015554781*^9, 3.49296204569521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.002857142857142857], 
   GeometricTransformationBox[RasterBox[CompressedData["
1:eJzsvW+Q3NhdNtq37i2g+EZRfKAoirpVYD6QNJ/wB6oubGOggJS34QIuCrpc
lQDir18aDAQNBd5tYoJwAhaJs8JviLgYEd/SbK47maSdxJ04ijdWdqJM0pNs
82Y7m/Ym7WSVpJ3ISZREu7+5569aUkua7vFMd8/4t1XPerpbOjrn6Og5v3OO
zvP8n6/6k//7Vf97pVL5DvK/0/9bpfJ/kL//9V/fCxRPPunCt74Vwc7ODgKx
cqBtk7ZR2V6TwLaLWGWUtd2vfvXr8OKLLy09jwhEHmTbxLaLOGzIa7uUh2m7
/cY3vrX0/CEQZXjpJWBtlbbZ//k/b2DbRRwaZNsujYExVkAcFtC2StvsSy+9
hG0Xcagg2+43v/nNpecFgUAgHiZUKpWl5wGBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBWHXguhoCgUAsFsi7CAQCsVgg7yIQCMRigbyLQCAQhxcj14JWq8WhNkHv
DA7uWt0n4GL72X1Lb9A1oVGrQbVaA0WzYRjOm0YIzhMatJ+9v/T7gEAgDie6
3S5cu3atEJ/61KemzvH0GlTqOnSdLnQ6HXAH4/3L06gDTbUNkfh8x7HA7N7Z
l7R7ZoPE/VWw3D6MRj0wGhXyuQmDqPy8UVeDli37FsK75hPQvRMu/d4hEIjD
iaeffhoee+yxXJw/fx7u35+O6yjvVvV++vtoALqqQ5/FjxG4JokJBwEwnjI0
sAi/60oNag0VnKHkrDF0DBXqJP6s1RrQ/u9PglqtMG5sKE12/ojw7hOdZyfH
601ybA3qig69MddhjUZdaJHYtWtrUCNxrGo6EGbLGnhQq1TA6AWJ731oke8a
FilLNASzpUO7bUC9Sq6vmjAIdiActqFKjqlU66A0afkiuG1ehM6zogzjHujN
OstTU2/DWKQ96hqg212wNQWqpGymM+THh0OwWgo5nlyj1Z7OJwKBOPJ48cUX
Qdf1XN6lsXDeOT2Dx7uu54Lj9GBM48XAJfxUBTegxwSgE65quWP2t1GrsPll
w3HBVMjfKk03gq5Kv1eg2x9Cn6Q1DO6DZzX5d14fxoTDPe3lUHn8Nrtup0mO
bxjQ90eEy2nsqsKQfB/0DJZ+RTHBdUz2d9dP5znwdPJ9DbzMvEKPxu4th/Ah
5+VKtQVOzwGN5lkhcXc4AqtZZdf1BkPCk/fhIjnu8du0bCNQKW8bXRj5fR4/
NzuTOqK/mV0SHyvk7xb45PuBVSfX0GE4HoFH4m7kXQTi6KJsXa3X601xrqZp
hRpmPYNyRwNUVSUxoMZjXMZbtQnvkrhV8wTvkr9bjs/ODTyN5EUjnNqDeoUe
E6TSDns64yXJR97FR+DlmkfS58cbfRFnRn3xOSC8q8e8Jq/NOX+SLudd2S8k
y1LjXCnyL3mZ5YPmc4dzc1X3xDmEd1/Oyxb2KcfXoSfmKaKB+Bwm+HyH143s
k3ynxe5Fy3LA32V+A4FAHG6U8S7974knnkjx7lNPPVV4PJ9n6KW/T/FuyLhW
8u6Eg3cER+oQhH1okDzpvfQ8aSB4N5DXkrwr5gmsgeTdASgVnm76nCBx7Um6
0aidEwdHYJMYlXFqlnf7E95l5dWmeZdzuQL9mHctFlPTOkidk6qbHRi6Nig1
Huv3517XQyAQhwW7vUdG188k577+9a+HKCr2sErzkICYZ3DGEfguH/frJbw7
FpxXUWw+JxqOwQ8iwWUtGMlrSd4VfMrmYmk6fc5xXpDgcnZOPu/S7806nacw
RVxM+K+rsXzadL5ZzDNYfX6eS+NVha/veXpVzI3Q8ya8OzmHx+x9q0H432D5
KOLd8WjI88li4EQ/gkAgjhxmeX/3LW95C+Ndz/NKj+vl8e7OCIw6n8et1BqM
U3Q2h5DmQcarNZPPI4w9aFbEOfJ4Egc3E597Me/y9bMGm4MVv3f5WlVevGv0
g+m8hwPQRR7ZWhnpJ0x3JH7z2LxFJYYC3pifF/ZtcXyDxLb34YmXT8ozcnSe
XpX/3hVrhr0p3m3w+Qc6RyOuUVUmfQACgXg48fzzz8Mb3vAG5quy1zSCIIjf
AZsNETsnjLLfFcWBEYRh9vg58zj2wffH6TUtOc9AYtIorwxRCEFYMAYgv4Uk
v7OWOwrDkvIhEIiHDV/+8peXnoelgMW7dca7S88LAoFAIBAIBAKBQCAQKw7U
xUEgEIjFAnkXgUAgFgvkXQQCgVgskHcRCATi8IL+9/nPfx7G4zH7e9n5eZjx
wgsvsHtB8ZWvfGXp+UEgEAcD+h/dY0H/ozqRzz77LGJJeOaZZ2BtbQ1e9rKX
wWg0WnrbQCAQBwP5H91nRp97xPLw9re/HV75ylfC93zP9yDvIhBHGPS/b3zj
G0vnHMQz8NrXvhZ+/dd/nfHucDiEO3fuMP1O+h/d7404eND5Nlr3/X4fPv3p
T+PcGyLGfq6r0f+++tWvLp1zENO8+/Wvf51xwWc+85ml5+1hwq1bt9gzdvHi
xQfSN0EcLSDvHk1I3v2+7/s+CMMQOXcJeO973wtvetObkHcRU0DePZqQvPvD
P/zD7N7cvXt36Xl62GDbNvz1X/818i5iCsi7RxNZ3v3sZz+79Dw9bEDeRSwC
yLurA+Td5QN5F7EIrALvbm1uQu8gr7Hlwo0bN8Dd3F76c10G5N3lA3kXsQjs
nXdduLR2Bi6u33qwtr61Dscqx+Ctm7sddwMunD0LZ86cYVg7dwGuXnd3TX/7
pgnHqRfPsQqcPPdfcOXcWXjj9c3Sc26+5Ryob7ye89vWTOfvFQ/Cu9s3r8Ka
qJszZ87CuQuX4bq72v1MKXo34NwZFTa2pn/r3XwLnDl7GbYO4LrIu4hFYK+8
u7VxgXuLnTgPmw/S1gnv/kTlJ2bg3XXGn2cvmmBevgTnlBPs+mcu3yjno2tr
5Lhz4jPhzfPn4C03tkrPuXHlH+H8W3i65tnTcPH69lzn7xUPwrub67ScJ+Ci
eQUuX7oAygnq+3YMLt84pNxLePcf1X+EG5R3b16G08ol2JZt78YVUM9fQd5F
LBSrsK5mKscI53Luu3QzwUskHjxPeFE5cRyOn1DAFLHhTfMcnL1wCc4Tvjx2
/CScM0U8GfOuCxfPKHApjiU34RL7vBUfd7xyHNYT8c/GhZPk+qfg+jb9vA3r
F8/A8WPH4OSZi3CTfrd1Hc4I/jl56iyJnXrw1vMqXKZpbtN4ag3MKxfh1PHj
cFI5z59xmlfCu+cuX4frlxRWvmMnTsJpEl9tPpM4n+bBvQZrp0/AcXL+6bVL
4Ip80bKukf7h4tlTrKznr5T3DfvGu8fOJbhoEy6cJGU/eZF/t32L1C/Jz7Hj
cObCesxh7sZlUE7yMpw8I2LIknKdJXH0hbMnSTon4dLGLdi4dIalqZy/Kq5z
A86Ter106RycoPeC1Ov1uE914fLaaZbuiVNrcE3G43QsQ/J2/Di9d5d4Or2b
8I9nybkfuQ7KMXkPT7P20btJePfcW0RZ89Ok45wzZy+CefEsaRM0f7PxNPIu
oghL513GgcfgiuvCBcJrx9bW42f93HH+jFy8ug6Xzh4nf59mvHjt3HEen168
AlfJs8raNY3FEvGueZqce9rkz82Ni+SYk7CxnbzmcbiajIs3r7I5CvrdjYun
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
f+/3fg/e8Y53MD6iXEX5q4h3f/RHf5TxleTd4ni3iHePwZXN5OfjE96Nj78B
CrnWcRILX7hwHk6T74+fu7ZrOdbX11nsTmNZyrHf/va3IYoiBvq35F7KybSP
ofwseZfGu69+9aunynDuBOH/k6dBUU7D6bOXYFP8dmvjKly6cJbUyYlp3n3m
Jpyl9XXyDJgbvPzbNy+z+ju9dh4unF9j/c/atd37EsRqAXn3aGGZ62p/93d/
B5qmsXE55Sd67g/+4A/m8i59d0zGu/Sdhp/+6Z9Oze8mOSufdyXPZj+LeQl6
/CaPi0+duwTm5cvs3barG7d2LQed36XPBeVT2n+8+OKLzDuW/iu5l/IuLWeS
d+k8Q9n87lpyroR8d+EE5dSzJF/nSbx+AtaneJeW7QZcPHuK1dmpCxuwub7G
/j53yWTloXPFG7eK5ooRqwrk3aOFZfLuxsYGPProoyxOpPxE/6M+YD/+4z8e
8+13fdd3sb1rdA6Yzu/StSs6D0z3tOWnOwPvbvJ5hivuNty6eo5dZ40dvwXn
CbcdP3slPndrazaOou8zUP9YyruUc+l/9N8k79J4V84z0P6DlpW+j0y9D3ct
A8tzBUyX/H2Lx7DmLX7sZJ7BhRs3eSx7be04VE5cIPm/BifIsWevyHndbdja
Xj6PIOYD8u7RwrLf3/3t3/5tFvNSXqI8JeNEukfife97H3uHQXIVXYuiMe7P
/dzPMY7LT3dzEr/K77K8S8bjdBzPuP34ScZn8Tyuu87mFyTvn5hhnoHiv/7r
v+Bnf/ZnWV5lH0LLQTmXcjGd36V1k5xjoHvb8t/fzSkD+e7i6WNxnk8ep/+e
h83k+wyknCfiMcIxOLfO+dxdv8DKKMt0DucZDh2Qd48Wlr1fjb6v+93f/d1M
e4Fyb3ItSs6H0nevKP/S4ynnUt2G/WjLm5ubhe8rbJHfZo11Jeh7CXStkNaB
LEeSc2lcL9/JoO/P0Vh/Xp2crTjPW7CZm79tnvepmHablRdj3cMJ5F1EEfaq
z/ChD32Iad9QLqLjb8q1FHRuQc7p0ncXXvayl4Fpmkt/Bsrw53/+5/Cbv/mb
4DhOXA753i7tO6ivN11Ho+uEuEcYMSuQdxFFeFA9MrovjbavP/zDP4TXvOY1
TLeLfvcLv/AL8Gu/9mtsL+6y2/8soOtXVMOHat9QHTJaDjpHTedU6P4KOr9A
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
t2Wp9RSOmPeGKjROzY638trJ82KVeHfs0r1KLRiOXL5nZF+9J0K2p2Wiazd9
jKNWoWH1YCj3rbK93PP6SwwnOoaaTeq2wzjY1BqwV824WfDAPhIUGT+HvYBp
7VQUpje4L2VL5Il6hbQKvEIokv4I474DWr342DQi8OWe8X2og/1GmUcKhw9m
k+//Us0O9Ad9cKQ/xYy6R7Ph4OspEBqNlboG3mBEYiW5p0/s31xQnSd9Nw4C
q8S7Pb0KVX12na/5MSjRkxqxdqT3E3t39ugvEXjT+mMUbdJ/HzZ/ifkwEtql
UrN4/68R9mjfPJsnwqzHjjoqVFurw7N5KPZIiUj7rMT9TfI3pg9b3b++/sDr
SWo3NKxMOblGVq52yIHk4+B9N1aFdx0yrmjW+f5yTed691Pn70nTP2B62VSb
viX2ok/xbjgES28xTqYa9LpBdcDL/CVIG7xNxrBaO7dN5+k+9m2Tx8/k75DE
87pKxlCqBh3h5zftF/AJGI/6YJsW6fc9MFsquZ4FwzCCoWszvXtNat0X+Ujk
eAMEJM2OaZDr9rlmf1OL98VP+zlQjeg2qIpCjmtB2ysfU1I/mqqigSpis+Qz
UuZJME+eAsqlJO1erwMaaUctfeKxmfVHCDK8G448Uu/Ue6BB4kI+j+S7Qg+i
RsbMZEx+P6cOcr0IZvCSSCLP96Cs3AwzeKRInRiqOzsdE0TQNajGc74XQ147
LMrrIuqpZzaEPs30nN6wrYLUOR2zetPB6jrsWaFts9ObPNN5Hht5fhx57SHP
d6PoWcr1uLg3ZOk3VcojNnleH4x3D3pdbTwaML176m03GA7Az9mTPb+mv9B4
UywYE27yzCLvzBCGni10cDwYDoYQRCX+EuQc7+LLSVqPgHe/mHerTZPVbadN
dUO4xmU0apO/G+COxtCzmqKdPTftF/DbhtC94WMsq23GGic11QDbaMbtMM+z
ocgbwDWb8XU0y+Lnsec5nPJzGLH5lib0qFaV0HSzh0VjPb630xpOdMqMRPxV
5kkwT55k3VbqLbBtca8Neq/9jD9Clne5ppVCtWEirjlOfclC32XfV1XyjA6f
h/dnPS2KvAjul3tJJFHkkVJc7p2ZPVLk2KpsHizPi2Hrubx2OC7M6yLqSfpN
ZDUIWR0Kj0LlPz4w0Uqi2kmWGesx0raU77GR58dh5LaHnSnfjXuFz1Jevb75
DPmbxWZ07Fcr1BNYFd5lvKrXJj4DOZhX05/7cFQnY3uhWZ47z5DRoJ8g319i
J7oP4/v5uhhJfwmbPE+W0RKcGPF+gNwf3SC8KrWg6D70rF/AjtSPTPhp6LXE
HB/XrFSlJm7SR6LMGyBznWFbSaSZ0FkU2ntxfYQDMFola51UK1KmI/1cMvps
hZ4Es+Yp5tKWiHEzHg0Jf4Rp3qVzoE2mXUW1vdjcpNDtTelOZq43uxdBVqMy
wRlFvgcl5Z7VIyUeW5X6O2e9GIrbYbGfy8HXE9c9z+ddWU6mV70j77Mo85hz
fv1NTxZ6bEw/X0XtIa0lXO6zka1X7pdZqbVIrBKRuvRytKxXj3e9XXh3Xk1/
7l2auI9lfgFZ3WiJffKX8Aj/9kOSN6rv2+rAiOmIjWA0Eh4AWb+AqXJldaml
H447dWypN0CmnOk50DI/hHK4Ig6oUo3C2JOqmvLYKvQkmDVPO5N5hrzfsulk
5xnouF1r0HdlWgnd+DIt9Xm8CAr8IgR29z1IljuY2SNF6pFP+2Gmn5upMha1
w6K8LqCe+NpwLVdHXD5TTK966lnl16++5v8p9tjIeb7y20O6nZb7bEyXhWpl
xuM6vVhbYpV4l8W7he1nfk1/zruJvkrGtHmxQRHv7sFfQo6JptMSuqJqur49
6tGUc/1ZeDfPs6HUGyDvWc/jMcG7zaTfx7gPbt77dIxDG3z+OorY/Qn6lohP
nEQeCjwJZs3TLr+VpiP9Hdp8vc+KY64ZPCxm8iIo5pPdfQ+y+Q1n90gZ83d/
KtVW7PuRAtM+nC5jUTv8ZKGfy8HX01jMISvW9JxJV/hUsH58ikP5PIH6tusF
HhuDXD+O/PaQ4d1Sn41sWSIY9ocQBINYuzivLPPw7n6hjHdZWyNj0/xz96Dp
PxI6zooV6zOztXY75z3aKb3+Cab9JXbgTvciPKo8AXdy1geGtpzfnE6L9+mE
z8wujMYj6Gp17subc/10uXagL5493oeGQqM0x7OhzBsgSvc9o04zMW5PjgGl
f3gV9E6PtCf6Pk+VafBny8S8LppO5nsxBkv43xV6EsycJzl3rAgvzuw8Q8If
gdWJCtzzcPL8MB/aIdcDr2kdGPrCf4/GfsMe9Eb3U2n6JV4EZR4aKT4r8j0I
i8s9u0fKxKuvotA5yMn33DeX9ofTXgxF7bDYz2V84PU0KSdpZ4n+feSImN6Y
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
0D1+AIoB3k2C62r6w58T5i5dX1+nb3/72+T3+2l7e5t2d3fp4sWLos7lCy+8
QErdn8uXL9PLL79MTz31FP3Zn/2Z7vEDUAzwLrxbSXDv3nTTTeK45KCOO6hF
4F14t5JQ6rhz33L29/fhXVBzwLvwbiXBvXvLLbfQ888/nwB13EGtAe9qA7wr
Ew7QwrlzdM7jIQ/773afo81QLO/03LsdHR304osvpgHvgloC3oV3tSKy7aYO
i5OC0TC5OgxkHnKSy3WO9qP55+Heve222+jSpUtZwLugVoB34V2t8HSbybUv
5bbeUQt7ffI83Lu33347hcPhnMC7oBaAd+FdbQjTkMFMGzH+ep+6DRYKxE6e
D3XcQT0A7ybBdTV12ZiwUIfdRc6hfnJvh4uah3u3q6tLeLUQh4eH8C6oWuBd
eFdLopEwRUuYXqnj/tprr50IvAuqFXgX3q0klDruvM5aMcC7oBqBd+HdSoJ7
95577qF4PF408C6oNuBdbYB3Twf37t13312Sdzlra2vwLqga4F14t5Lg9+j+
3u/9nuiHrBR+//d/nyYnJ3WPH4BigHfhXQBAeYF34V0AQHmBd5PguhoAoBzA
u/AuAKC8wLvwLgCgvMC78C4AoLzAu9oA7wIA8gHvwrsAgPIC78K7lcbCwgI5
nc6S4c9c6B07AMUA78K7lcT3vvc9+rVf+zV66KGH6Ktf/Sr9xV/8Bf3lX/4l
2e12+qu/+iv62te+RuPj4/Q3f/M39Ld/+7f06KOP0te//nX67Gc/K/p10Dt+
AIoB3k2C62r6o9Rx393dRR13ULPAu/CuGsQiQQoEI2deDvfuzTffTM8++6wA
3gW1CLwL76pBxDtEhv7lMy+He7e9vZ2ee+65BKjjDmoNeLf+vBsNBykYijBv
RSmaq+YZGx5irgtFkvXWueeuXIlRmA0Pp84TDYtlhbyjZBryZi0rxv3I/kdC
6cvLh1LHnbs2FXgX1BLwrjZUqne33f3s98XI3GYSvzOjG5l1zyLk7DCS2dIh
xju3I2KY3WQgg9EohhkM3bQdleq0G9l7c4c0rcm+kbW+Dbu0HqPRIK1vIVgw
Pu7dW2+9VXg2lVAoBO+CmgHerSfvBqmfOdcTkt4vD5lo1Juv3mRMjB8S4yM0
wbw7JJwZJbvRTMsRXqfdQN0LITF9eHkoZ767YTdTh3MzMY3B5CxYb02p4/7S
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
YZavZvZ3LvVtHmMuY+9jEQruy3lqLEzBYCgxrVSHLUzRcJBCGXlvJBSk/WCK
kyNP0fVGe8K7vM78PltWWj/oOeDebW9vp+eeey4B6riDWgPerR7vbtrNZLa7
adTI6+mE5OGFvSvVSTOQfSGQGOYdMqbU5/FIddQiXlGHx2iUavuYuvupQ669
bhqV6ghtTkj1g43y8NGFIEn13k3Jeu/mCQpyt6Z4N7QwJOoEWcxmmtgonC8r
ddxfeOGFNOBdUEvAu9XiXV470khe5rSwp5v5zUVRMbywdzn7yxNSO4NplLYj
VxI1K4NXuMtNZHZui5qXJrmGWkzkyGbaEK/tiTrtvI5lh1y7MrzMXGpyUjR4
TuTTQbGuCNm5j7lbU7y7McpcbnEXrKumoNRxv3TpUhbwLqgV4F1tUNu7kQ27
lHuaO8hslOpbLoT4uJO9K4gFycnrYlrOUUyuTWxfXmYuN9FymI1n+a7ZJNVt
F+syTgivS+uVhqfWe4/wesTMx8+Leu8TCacmahOntjNEAzRhkfJo+3Kw4HZy
795+++0UDodzAu+CWgDerQbvRsllNlC/J0AR5p5IJESuDqVW+gntDNEIRaLS
a+FKnqOy10FPv5QDd3uk9lvuXaOU16a6Nprh3e5z+2JZQZ5zs3mldgoLBcT6
pPrydn7tTnh3VHhXqWUZXu5PLCvftnLv8n7PL1++nBd4F1Q78G4VeDfMa6R3
037KsOjmhHx+n+7d6zO8G9mU82STUeTITqV9NbpJ5tT7G+R8l3s3uu1kOazs
XT6//Fpp35WWZaaFfV6XOEreCYtYNr/mZxrySO0f3LvXSPnu5kRHYvyQZ7/g
tnLv8voRL7/8ckHgXVDNwLtV4N0zwnNefo4eTR0m2niVdtkiiUl5q6jPnrWO
KMur89/by2M46V4GDvfunXfeSa+++uqJwLugWoF3k1T2dTWVP3d3Pw2dC+ge
Rybcu3fffTcdHR2dyOuvvw7vgqoE3q1P71Yq3LsWi4Xi8XjRwLug2oB34d1K
gnv33nvvpePj45KAd0E1Ae/Cu5XE888/T+973/tEf2SlwHNk3k+Z3vEDUAzw
rjbAu6eH98vw7W9/u2ReeeUV3WMHoBjgXXgXAFBe4F14FwBQXuBdeBcAUF7g
3SS4rgYAKAfwLrwLACgv8C68CwAoL/AuvFtJ8D7Oed3K8+fPA1CR8Jqq8G5l
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
bnUD7+pPpXt3TvbuzrxNxNTuWBJuE+fvDU3UJPf/JYbn9G5pdYdy1yLi/fDI
NTyblPpCPXlqea6QVe4XZ3BqPsd4NeLx04AhpS2F7Y8msT8yaj2ntENI7Tby
Pkvpp2cmo6ZHU4u0fT0z+c8r4F0A79aydxvY+fk6rcxNUrtcY821LuVmK16l
vXRH6key1S7nd+nePU3doaxhcg2hhNtlz1ld3pyx++YdSbe1WGl6Jdm2q0o8
mb8tO3Nye3KT3D/7utQXu1KfTY6/qWcqUSt0zpbSn5u8Pal9vgUK9OED7wJ4
t1a925reZ2NDO016Uu5REOfWU+SwD0tOTtSSTHfSaeoOZQ7zz8l9SLZaaZAt
o69LqWtZoC3Bv0Q2azJXHZbvr1Ajnlze5W0bPdPrWfP4Lib7CE69trczPyzi
kPqf9FKfct7QZxP1mgt9NvAugHdr2bsN5JhfF/dipY7zs3yyQc7vrH091NqQ
6qVUJ52u7lCWd5W+e1v4/FbqYvRYu2iwiOta63N2Kfctqo7Q6b0r9fnuzzlP
rhpH6d5l+OZpsCv5O9EztQLvAni37ryb3r6bZIfs3CkNydo59pZ83j193aFc
3u2ZPuleitzYU3JPNeLJ711fYnwu7/Yk2kV2yNWXp46bf07qp71pMFl7Ht6t
KXBdTX8q3bvZ9cx3yNEu1QGa8izR3KRcq6Kph5YC2U4qve5QrmHrNNgk14uY
nmfD1ml+ZoqmZnK07zJvWdv7yDXHp/PR0rRNynfbHaJtVZ14iveu5E65didv
R+jpSdyTl/DuzhLZBm00x5bv4/dPGFLby+HdWgPe1Z9K9a5Ul6w1Z31HHzt3
T9QKamin4UHlXgPpXD7zPrJS6w7lGsbr+Qy2pt8v0JrruYUdT9YzEw2tg7SU
sh1njyd3+26y/Vb2bqstrR7RcFeruIeixWqnOddg8n4GFnN7WjytifrJ8G7t
Ae/qT6V690QC6XWBpDo7herilFZ3KOcwxo7fl3N49rrWxTEp5afaxVMsmfcn
TPfw35B2mk/5PdjZ2SG//+TnmuHd6gbe1Z+q9S4oAZYfi2uP7dTT10dd8r26
LcOneyYP3gXwLrwLTmZlboqG+3rEPRRd1j6anMt/vwK8C+BdeBdUFvAugHfh
XVBe4F0A78K7oLzAu9UNrqvpTyHvzs7OivEApPIrv/Ir8G4VA+/qD/8e5fMu
APmAd6sX/vnBu5Xn3cuXL9Njjz0GQF74cQPvVifwrv7k8i4AlQS8W7nAu/Au
qE3g3coF3oV3QW0C71Yu8C68C2oTeLdygXdPB+8HhfeHsre3B0BF8vjjj8O7
KoLravpzdHQkjkkAKpVLly7Bu/AuAKDKgHfhXQBAeYF34V0AQHmBd7UB3gUA
5APehXcBAOUF3oV3AQDlBd6FdwEA5QXeTYLragCAcgDvwrsAgPIC78K7AIDy
Au/CuwCA8gLvagO8CwDIB7wL7wIAygu8C+8CAMoLvAvvAgDKC7ybBNfVAADl
AN6FdwEA5QXehXcBAOUF3tXOu3y/XrhwAQAA0vinf/oneFcDXnzxRdrd3QUA
gJzwnFdvTwEAAAAAAAAAAADUEmpeVwMAAHAy8C4AAJQXeBcAAMoLvAsAAAAA
AAAAAACt+eEPf1iQN998M2360KKTegdGaGRkhMbGx2lsjL8eoIHxRYpXwPak
chxepYfGKi8uAEB943a76Stf+UpennnmmbTpD/bWaHFxldZWz5PVYKDO8Vn2
epEW1/bouOzxh2i8d5xCed7HL62Rw7UG7wIAdCHfdbXLly/nde6jjz5K/C/3
MuPkbDTQ2G5cen+0SyPMeXtxeXx8j8bY+2A8TmvOMXItnqeBtmZqbhug1eCR
NM3xAc2OWKmxsZlG3FsJb4d9brLyaZs76Xwwnnda33ib2K62TiuNnQ9mvT8O
M+8+siq8y3PfkbFZWp0do2a2jIEUH4e3Zsna3ExtvWPkdo7Q+GJQ988LAFD9
FLqf4cknn8zp3WCwkH+OaJx7d+tQfh+mAbaO3tWweB+a7SRDm5u57YiczQa2
/kaa9W3R+bFm9rqXgsfHdN5qoMaRVTo83BW58/gW8/HxHnWy105fiA6CW7QX
5t7NPW14y02NbLmutS0KHcaz3r++NcbWNUaHLJ6jXafYBwari3xrLvF69YD5
ODQrXjtZvh7aPU9t7HXz+JbunxcAoPop5N3Dw0PRXpvq3Mcee+yEZWZ69y0K
uplrm10sFz2iMYMyTplOyXF3qZm50XcUEp5uHhgnt9tFvWyaZucucX/zeQ2d
I7S6pyw7z7TxLbasZtpK5Njp71/fdbDtdtDrb3HvjrPXI3SQEvuI75BC53tF
zEruu+dspsYxeBcAcHZOun93YWEhzbsvvfTSCcvM9u5bh2tSvnmeO26AwmnT
ZXj3+9yRBrI6z9Pq4iItMnx7B9I08RDNjllFzFb3Hr11lGda2bO+I3n9Ge+z
vNs4TkdyTE459j1Xm8jLlTaO3XF4FwBQHt544w2y2WzCuTMzM0XMk8O7vD2g
1yB82cl9KU/H2xmss7vi/YFvXLQzhN6Kk6uN5a1ja4n54/Fj5mWWg4YlR3MH
Sm0VeaY98gnPrx4cS8Mz3mfnu9nejYv2h0aa3QrS7uKYiB3tDACAcrG6ukoP
PfQQHRwcFDF90l2pww99Y8Jja4fJ6bgzRduqjEuZ53BLtBkow9vktoO2xLSN
5Nw6yD8tW/Zsb2OK59PfC+9enT/fde5xvx/T1uwI8zXzbe84Odn8na69kvcd
AACchh/96Ef0r//6r2dahmjj7ZxNuadMyovHd/k1szjFj7PniR8dSflrYtix
NKyoafmwOB0f539fkOMjCh8obSBB6jXIsVbA5wEAACcjXf9ypnlLamcY36pQ
l8V3xf0TiTx65LycEwMAwNlAvziFOY7nzsUBAOC0wLsAAFBe4F0AACgv8C4A
AFQfvG+yp59+umrg92b8/d//ve5xFIvH4xH3TusdR7H84z/+I124cEH3OIrh
P/7jP8SxsLKyonssxcDv6eTx8rj1jqVYdnd3dXdULfLf//3faffhgvrmbW97
m+4xgMrh/e9/v+6OqkUU737pS1+iubm5iqe5uVnE+w//8A+6x1IMV111Fb3r
Xe/SPY5iecc73kEf+9jHdI+jGP76r/9aHAv333+/7rEUww033CDifeSRR3SP
pRg+8YlPwLsae5cfCxcvXqx4PvOZz4h4+TmQ3rEUw7vf/W769V//dd3jKJaf
/dmfpVtuuUX3OIrhn//5n8Wx8PDDD+seSzFYLBYRL28X0TuWYujo6IB3c8A/
Q3i3soF3tQPe1RZ4F95VgHe1Bd7VDni3NoB39Y/nJOBd7YB3tQXehXcV4F1t
gXe1A94F8G55gHe1A97VFngX3lWAd7UF3tUOeBfAu+UB3tUOeFdb4F14VwHe
1RZ4Vzvg3doA19X0j+ck4F3tgHe1Bd6FdxXgXW2Bd7UD3q0N4F394zkJeFc7
4F1tgXfhXQV4V1vgXe2AdwG8Wx7gXe2Ad7UF3oV3FeBdbYF3tQPeBfBueYB3
tQPe1RZ4F95VgHe1Bd7VDni3NsB1NbWW6ydbi4Fa7fOqx6uVdwO+FZpxuWjG
s0T+gHrLVd+7AVr3rpBnbo7WVYyTo6V3Azs7FFB5mfBubQDvqrVcPw03Gahh
cE71eDXxrm+aWgyt5JhyUCvbF0029X4v1PeujxxdvFZXF3lV3rfaeXeFuthy
W1T+HYZ3awN4V63lBsjGvNs07FE9Xi28u+MZJEOTXXof8JPPH1Bt2Vq0MyzZ
WsRn1tXeTjaPX7XlaufdAM3Yh8m1pF6sHHi3NqhM7/rJMz1FDsckTbHz4Kmp
KYnJKfKs75x5+ap6d2eF7IPDLNZhauL1U1v72Gsb2afV+15o086wLvKx1uFp
1c+F1fSub2WObD2Sc5u6hmnG46H5Ja9qMWvj3QDt+P207vWSb0e93zOOlt7d
WffSvGeeVtbV+62Ad7VDVe/6ZqidLctqn6a5qcGsmtD2+QrzLvOXzdpOVobk
hh7q6Wqnvskl1Y5d9b27Tg7usoYmEXO7yufC6nl3h6Ztw2S397A4m2hyZoq6
mqTjwKbCccDRwrve6eRx2+5Q7zjgaOHdHe+MaGviy+0ZtrL/DTTjV2fZ8G41
eHedevixOqkcU34aNKh/rUrLdoYWu7rfM4663l2nQd4O3eMS72f6Gph/B8mn
YrxqtzP4pnskj7UMk9c/LxzhWFEnj9Qm310SuUNTaxe51is73w2sTCZ+Ixwr
bNiKnb1uIc+OOvHCu5XvXb9nOOMzZ95tMFDXlLrnVPV8Xc030yftY/m+gLnB
pgr3boCmrJIXptlxEZjnx0grzat0X4MW3pWO4wZq7RpW/Tqgut7dIXt7CzWJ
c4hWstms4v+Uim3S8G4VeHeOnZ81DNOOMizgEW2mauU2Clp6t6nCvSs82zRM
fuU9z3fbJ1Vt41XVu4ElqR1aPueZ7mHxdrlUi1UL784N8jacFrLaZth+reB8
d2eeBnv6qJ3lNk3WYXLNzCe/eyoB7+amkq6rCe+m5GIunud0Tal+3aeevbvk
4O3QfVJ+65+hBv67tqROW6mCmt7dWbKLtt050d64Tn38ngabneyT6rQ9qe9d
+Thob6cuaxd19an3G8FR27vWpiZxDPRMr8v7e4qGVdq3HHi38r17cWeJ+vg5
T0sX9bDzn9aeqURepib17F1+3bKFtz1ae1ie00CDLq/q8arp3Xl7Kzse7FIe
tuORr/900bxK7Y9aeJc/P8OX2WJ1qNp+w1G7fXfe3pJo321gDm6x2mldxXjh
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
     "], {{0., 0.}, {1., 1.}}, {0, 255},
     ColorFunction->RGBColor], {{{350., 0.}, {0., -774.}}, {0., 774.}}]},
  AspectRatio->Automatic,
  ImageSize->{255.67441860465118`, Automatic},
  PlotRange->{{0., 350.}, {0., 774.}}]], "Input",
 CellChangeTimes->{
  3.51740653213203*^9, 3.51740852803246*^9, {3.553255220661439*^9, 
   3.553255226934297*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Thickness[0.002857142857142857], 
   GeometricTransformationBox[RasterBox[CompressedData["
1:eJzsvW+Q3NhdNtq37i2g+EZRfKAoirpVYD6QNJ/wB6oubGOggJS34QIuCrpc
lQDir18aDAQNBd5tYoJwAhaJs8JviLgYEd/SbK47maSdxJ04ijdWdqJM0pNs
82Y7m/Ym7WSVpJ3ISZREu7+5569aUkua7vFMd8/4t1XPerpbOjrn6Og5v3OO
zvP8n6/6k//7Vf97pVL5DvK/0/9bpfJ/kL//9V/fCxRPPunCt74Vwc7ODgKx
cqBtk7ZR2V6TwLaLWGWUtd2vfvXr8OKLLy09jwhEHmTbxLaLOGzIa7uUh2m7
/cY3vrX0/CEQZXjpJWBtlbbZ//k/b2DbRRwaZNsujYExVkAcFtC2StvsSy+9
hG0Xcagg2+43v/nNpecFgUAgHiZUKpWl5wGBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBWHXguhoCgUAsFsi7CAQCsVgg7yIQCMRigbyLQCAQhxcj14JWq8WhNkHv
DA7uWt0n4GL72X1Lb9A1oVGrQbVaA0WzYRjOm0YIzhMatJ+9v/T7gEAgDie6
3S5cu3atEJ/61KemzvH0GlTqOnSdLnQ6HXAH4/3L06gDTbUNkfh8x7HA7N7Z
l7R7ZoPE/VWw3D6MRj0wGhXyuQmDqPy8UVeDli37FsK75hPQvRMu/d4hEIjD
iaeffhoee+yxXJw/fx7u35+O6yjvVvV++vtoALqqQ5/FjxG4JokJBwEwnjI0
sAi/60oNag0VnKHkrDF0DBXqJP6s1RrQ/u9PglqtMG5sKE12/ojw7hOdZyfH
601ybA3qig69MddhjUZdaJHYtWtrUCNxrGo6EGbLGnhQq1TA6AWJ731oke8a
FilLNASzpUO7bUC9Sq6vmjAIdiActqFKjqlU66A0afkiuG1ehM6zogzjHujN
OstTU2/DWKQ96hqg212wNQWqpGymM+THh0OwWgo5nlyj1Z7OJwKBOPJ48cUX
Qdf1XN6lsXDeOT2Dx7uu54Lj9GBM48XAJfxUBTegxwSgE65quWP2t1GrsPll
w3HBVMjfKk03gq5Kv1eg2x9Cn6Q1DO6DZzX5d14fxoTDPe3lUHn8Nrtup0mO
bxjQ90eEy2nsqsKQfB/0DJZ+RTHBdUz2d9dP5znwdPJ9DbzMvEKPxu4th/Ah
5+VKtQVOzwGN5lkhcXc4AqtZZdf1BkPCk/fhIjnu8du0bCNQKW8bXRj5fR4/
NzuTOqK/mV0SHyvk7xb45PuBVSfX0GE4HoFH4m7kXQTi6KJsXa3X601xrqZp
hRpmPYNyRwNUVSUxoMZjXMZbtQnvkrhV8wTvkr9bjs/ODTyN5EUjnNqDeoUe
E6TSDns64yXJR97FR+DlmkfS58cbfRFnRn3xOSC8q8e8Jq/NOX+SLudd2S8k
y1LjXCnyL3mZ5YPmc4dzc1X3xDmEd1/Oyxb2KcfXoSfmKaKB+Bwm+HyH143s
k3ynxe5Fy3LA32V+A4FAHG6U8S7974knnkjx7lNPPVV4PJ9n6KW/T/FuyLhW
8u6Eg3cER+oQhH1okDzpvfQ8aSB4N5DXkrwr5gmsgeTdASgVnm76nCBx7Um6
0aidEwdHYJMYlXFqlnf7E95l5dWmeZdzuQL9mHctFlPTOkidk6qbHRi6Nig1
Huv3517XQyAQhwW7vUdG188k577+9a+HKCr2sErzkICYZ3DGEfguH/frJbw7
FpxXUWw+JxqOwQ8iwWUtGMlrSd4VfMrmYmk6fc5xXpDgcnZOPu/S7806nacw
RVxM+K+rsXzadL5ZzDNYfX6eS+NVha/veXpVzI3Q8ya8OzmHx+x9q0H432D5
KOLd8WjI88li4EQ/gkAgjhxmeX/3LW95C+Ndz/NKj+vl8e7OCIw6n8et1BqM
U3Q2h5DmQcarNZPPI4w9aFbEOfJ4Egc3E597Me/y9bMGm4MVv3f5WlVevGv0
g+m8hwPQRR7ZWhnpJ0x3JH7z2LxFJYYC3pifF/ZtcXyDxLb34YmXT8ozcnSe
XpX/3hVrhr0p3m3w+Qc6RyOuUVUmfQACgXg48fzzz8Mb3vAG5quy1zSCIIjf
AZsNETsnjLLfFcWBEYRh9vg58zj2wffH6TUtOc9AYtIorwxRCEFYMAYgv4Uk
v7OWOwrDkvIhEIiHDV/+8peXnoelgMW7dca7S88LAoFAIBAIBAKBQCAQKw7U
xUEgEIjFAnkXgUAgFgvkXQQCgVgskHcRCATi8IL+9/nPfx7G4zH7e9n5eZjx
wgsvsHtB8ZWvfGXp+UEgEAcD+h/dY0H/ozqRzz77LGJJeOaZZ2BtbQ1e9rKX
wWg0WnrbQCAQBwP5H91nRp97xPLw9re/HV75ylfC93zP9yDvIhBHGPS/b3zj
G0vnHMQz8NrXvhZ+/dd/nfHucDiEO3fuMP1O+h/d7404eND5Nlr3/X4fPv3p
T+PcGyLGfq6r0f+++tWvLp1zENO8+/Wvf51xwWc+85ml5+1hwq1bt9gzdvHi
xQfSN0EcLSDvHk1I3v2+7/s+CMMQOXcJeO973wtvetObkHcRU0DePZqQvPvD
P/zD7N7cvXt36Xl62GDbNvz1X/818i5iCsi7RxNZ3v3sZz+79Dw9bEDeRSwC
yLurA+Td5QN5F7EIrALvbm1uQu8gr7Hlwo0bN8Dd3F76c10G5N3lA3kXsQjs
nXdduLR2Bi6u33qwtr61Dscqx+Ctm7sddwMunD0LZ86cYVg7dwGuXnd3TX/7
pgnHqRfPsQqcPPdfcOXcWXjj9c3Sc26+5Ryob7ye89vWTOfvFQ/Cu9s3r8Ka
qJszZ87CuQuX4bq72v1MKXo34NwZFTa2pn/r3XwLnDl7GbYO4LrIu4hFYK+8
u7VxgXuLnTgPmw/S1gnv/kTlJ2bg3XXGn2cvmmBevgTnlBPs+mcu3yjno2tr
5Lhz4jPhzfPn4C03tkrPuXHlH+H8W3i65tnTcPH69lzn7xUPwrub67ScJ+Ci
eQUuX7oAygnq+3YMLt84pNxLePcf1X+EG5R3b16G08ol2JZt78YVUM9fQd5F
LBSrsK5mKscI53Luu3QzwUskHjxPeFE5cRyOn1DAFLHhTfMcnL1wCc4Tvjx2
/CScM0U8GfOuCxfPKHApjiU34RL7vBUfd7xyHNYT8c/GhZPk+qfg+jb9vA3r
F8/A8WPH4OSZi3CTfrd1Hc4I/jl56iyJnXrw1vMqXKZpbtN4ag3MKxfh1PHj
cFI5z59xmlfCu+cuX4frlxRWvmMnTsJpEl9tPpM4n+bBvQZrp0/AcXL+6bVL
4Ip80bKukf7h4tlTrKznr5T3DfvGu8fOJbhoEy6cJGU/eZF/t32L1C/Jz7Hj
cObCesxh7sZlUE7yMpw8I2LIknKdJXH0hbMnSTon4dLGLdi4dIalqZy/Kq5z
A86Ter106RycoPeC1Ov1uE914fLaaZbuiVNrcE3G43QsQ/J2/Di9d5d4Or2b
8I9nybkfuQ7KMXkPT7P20btJePfcW0RZ89Ok45wzZy+CefEsaRM0f7PxNPIu
oghL513GgcfgiuvCBcJrx9bW42f93HH+jFy8ug6Xzh4nf59mvHjt3HEen168
AlfJs8raNY3FEvGueZqce9rkz82Ni+SYk7CxnbzmcbiajIs3r7I5CvrdjYun
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
f+/3fg/e8Y53MD6iXEX5q4h3f/RHf5TxleTd4ni3iHePwZXN5OfjE96Nj78B
CrnWcRILX7hwHk6T74+fu7ZrOdbX11nsTmNZyrHf/va3IYoiBvq35F7KybSP
ofwseZfGu69+9aunynDuBOH/k6dBUU7D6bOXYFP8dmvjKly6cJbUyYlp3n3m
Jpyl9XXyDJgbvPzbNy+z+ju9dh4unF9j/c/atd37EsRqAXn3aGGZ62p/93d/
B5qmsXE55Sd67g/+4A/m8i59d0zGu/Sdhp/+6Z9Oze8mOSufdyXPZj+LeQl6
/CaPi0+duwTm5cvs3barG7d2LQed36XPBeVT2n+8+OKLzDuW/iu5l/IuLWeS
d+k8Q9n87lpyroR8d+EE5dSzJF/nSbx+AtaneJeW7QZcPHuK1dmpCxuwub7G
/j53yWTloXPFG7eK5ooRqwrk3aOFZfLuxsYGPProoyxOpPxE/6M+YD/+4z8e
8+13fdd3sb1rdA6Yzu/StSs6D0z3tOWnOwPvbvJ5hivuNty6eo5dZ40dvwXn
CbcdP3slPndrazaOou8zUP9YyruUc+l/9N8k79J4V84z0P6DlpW+j0y9D3ct
A8tzBUyX/H2Lx7DmLX7sZJ7BhRs3eSx7be04VE5cIPm/BifIsWevyHndbdja
Xj6PIOYD8u7RwrLf3/3t3/5tFvNSXqI8JeNEukfife97H3uHQXIVXYuiMe7P
/dzPMY7LT3dzEr/K77K8S8bjdBzPuP34ScZn8Tyuu87mFyTvn5hhnoHiv/7r
v+Bnf/ZnWV5lH0LLQTmXcjGd36V1k5xjoHvb8t/fzSkD+e7i6WNxnk8ep/+e
h83k+wyknCfiMcIxOLfO+dxdv8DKKMt0DucZDh2Qd48Wlr1fjb6v+93f/d1M
e4Fyb3ItSs6H0nevKP/S4ynnUt2G/WjLm5ubhe8rbJHfZo11Jeh7CXStkNaB
LEeSc2lcL9/JoO/P0Vh/Xp2crTjPW7CZm79tnvepmHablRdj3cMJ5F1EEfaq
z/ChD32Iad9QLqLjb8q1FHRuQc7p0ncXXvayl4Fpmkt/Bsrw53/+5/Cbv/mb
4DhOXA753i7tO6ivN11Ho+uEuEcYMSuQdxFFeFA9MrovjbavP/zDP4TXvOY1
TLeLfvcLv/AL8Gu/9mtsL+6y2/8soOtXVMOHat9QHTJaDjpHTedU6P4KOr9A
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
t2Wp9RSOmPeGKjROzY638trJ82KVeHfs0r1KLRiOXL5nZF+9J0K2p2Wiazd9
jKNWoWH1YCj3rbK93PP6SwwnOoaaTeq2wzjY1BqwV824WfDAPhIUGT+HvYBp
7VQUpje4L2VL5Il6hbQKvEIokv4I474DWr342DQi8OWe8X2og/1GmUcKhw9m
k+//Us0O9Ad9cKQ/xYy6R7Ph4OspEBqNlboG3mBEYiW5p0/s31xQnSd9Nw4C
q8S7Pb0KVX12na/5MSjRkxqxdqT3E3t39ugvEXjT+mMUbdJ/HzZ/ifkwEtql
UrN4/68R9mjfPJsnwqzHjjoqVFurw7N5KPZIiUj7rMT9TfI3pg9b3b++/sDr
SWo3NKxMOblGVq52yIHk4+B9N1aFdx0yrmjW+f5yTed691Pn70nTP2B62VSb
viX2ok/xbjgES28xTqYa9LpBdcDL/CVIG7xNxrBaO7dN5+k+9m2Tx8/k75DE
87pKxlCqBh3h5zftF/AJGI/6YJsW6fc9MFsquZ4FwzCCoWszvXtNat0X+Ujk
eAMEJM2OaZDr9rlmf1OL98VP+zlQjeg2qIpCjmtB2ysfU1I/mqqigSpis+Qz
UuZJME+eAsqlJO1erwMaaUctfeKxmfVHCDK8G448Uu/Ue6BB4kI+j+S7Qg+i
RsbMZEx+P6cOcr0IZvCSSCLP96Cs3AwzeKRInRiqOzsdE0TQNajGc74XQ147
LMrrIuqpZzaEPs30nN6wrYLUOR2zetPB6jrsWaFts9ObPNN5Hht5fhx57SHP
d6PoWcr1uLg3ZOk3VcojNnleH4x3D3pdbTwaML176m03GA7Az9mTPb+mv9B4
UywYE27yzCLvzBCGni10cDwYDoYQRCX+EuQc7+LLSVqPgHe/mHerTZPVbadN
dUO4xmU0apO/G+COxtCzmqKdPTftF/DbhtC94WMsq23GGic11QDbaMbtMM+z
ocgbwDWb8XU0y+Lnsec5nPJzGLH5lib0qFaV0HSzh0VjPb630xpOdMqMRPxV
5kkwT55k3VbqLbBtca8Neq/9jD9Clne5ppVCtWEirjlOfclC32XfV1XyjA6f
h/dnPS2KvAjul3tJJFHkkVJc7p2ZPVLk2KpsHizPi2Hrubx2OC7M6yLqSfpN
ZDUIWR0Kj0LlPz4w0Uqi2kmWGesx0raU77GR58dh5LaHnSnfjXuFz1Jevb75
DPmbxWZ07Fcr1BNYFd5lvKrXJj4DOZhX05/7cFQnY3uhWZ47z5DRoJ8g319i
J7oP4/v5uhhJfwmbPE+W0RKcGPF+gNwf3SC8KrWg6D70rF/AjtSPTPhp6LXE
HB/XrFSlJm7SR6LMGyBznWFbSaSZ0FkU2ntxfYQDMFola51UK1KmI/1cMvps
hZ4Es+Yp5tKWiHEzHg0Jf4Rp3qVzoE2mXUW1vdjcpNDtTelOZq43uxdBVqMy
wRlFvgcl5Z7VIyUeW5X6O2e9GIrbYbGfy8HXE9c9z+ddWU6mV70j77Mo85hz
fv1NTxZ6bEw/X0XtIa0lXO6zka1X7pdZqbVIrBKRuvRytKxXj3e9XXh3Xk1/
7l2auI9lfgFZ3WiJffKX8Aj/9kOSN6rv2+rAiOmIjWA0Eh4AWb+AqXJldaml
H447dWypN0CmnOk50DI/hHK4Ig6oUo3C2JOqmvLYKvQkmDVPO5N5hrzfsulk
5xnouF1r0HdlWgnd+DIt9Xm8CAr8IgR29z1IljuY2SNF6pFP+2Gmn5upMha1
w6K8LqCe+NpwLVdHXD5TTK966lnl16++5v8p9tjIeb7y20O6nZb7bEyXhWpl
xuM6vVhbYpV4l8W7he1nfk1/zruJvkrGtHmxQRHv7sFfQo6JptMSuqJqur49
6tGUc/1ZeDfPs6HUGyDvWc/jMcG7zaTfx7gPbt77dIxDG3z+OorY/Qn6lohP
nEQeCjwJZs3TLr+VpiP9Hdp8vc+KY64ZPCxm8iIo5pPdfQ+y+Q1n90gZ83d/
KtVW7PuRAtM+nC5jUTv8ZKGfy8HX01jMISvW9JxJV/hUsH58ikP5PIH6tusF
HhuDXD+O/PaQ4d1Sn41sWSIY9ocQBINYuzivLPPw7n6hjHdZWyNj0/xz96Dp
PxI6zooV6zOztXY75z3aKb3+Cab9JXbgTvciPKo8AXdy1geGtpzfnE6L9+mE
z8wujMYj6Gp17subc/10uXagL5493oeGQqM0x7OhzBsgSvc9o04zMW5PjgGl
f3gV9E6PtCf6Pk+VafBny8S8LppO5nsxBkv43xV6EsycJzl3rAgvzuw8Q8If
gdWJCtzzcPL8MB/aIdcDr2kdGPrCf4/GfsMe9Eb3U2n6JV4EZR4aKT4r8j0I
i8s9u0fKxKuvotA5yMn33DeX9ofTXgxF7bDYz2V84PU0KSdpZ4n+feSImN6Y
9K9s7lv4nHBvGjquLfLYCKaer+L2EKR9N9zrJT4b2Xodg1at83efSuZTVol3
J94BVWhqVsIDRGJvmv79tvQcJXVQ5X2m0sqkn9Lrb4DppN+BytM57z3xCDn+
0dT4g3Fuyr+hwfKQ5nfSZyjVSZ6oXn2OXwD3FxD+1ZoNnmMJX4YqaG0XHLkm
Q45/8vq0j0SRN4CjizWJGimT14n19BXzqYx/w4jkIeljTdqv60/dt8naQrqs
I8eYzDfUWvDhW8WeBPY/z5anN73tbZPfDAcGziRNayvtj9C5cSVeh2R1Qn10
xLlVhddJRTy7ri7b1f+Aq5fTdbBT5EVQ4uuRvedFvgf/+bqicrusTc7mkSLu
g2OK92/ouzd18Q5si/BnvhdDbjssySv1kzroepLcK9t2raGAUpd9f2IvjvRY
pmk2eJ5M+Y5InsdGnh9HSXtI+W5Qb7mCZ2m6XgP+7j59J4vwU5X86xS8c7wq
vDsr9qTpH078FKI9vM+f6y9B2lk4s6fANKifxYPo1c+G/fEGoH4IWb+Cw4nk
PYtSZdrNb2MeL4JcHLRHiiiTP+Lztf6MbSu3HZbk9cDrKc5DwMqS66uRmDOI
8tpmgcfGPO1h2ndjjmeJXb/8Xf/DxrvLAPpLIBArBDFHlTcneFiwSutqCAQC
UQo2ZyDenak3wFwlHY05gLyLQCAQiwXyLgKBQCwWyLsIBAKxWOC6GgKBQCwW
K8O70Qg6lgXtDtWrbYNtdXLe4c3HYvWeS/LxANrj8+l0h9C12gvRxPMHHthG
C1rWg+hzhuB1qPY71YLv5t/XyCflb0OHasV3vCPp3T2NCAZOGzSqCUY1vIw2
DMaL05hFLA8rw7v03cOBIzTYKqA7gxnecVyU3vNseBDt8bl0uv0ur6NSLZT9
Qd+xUnvX94pA7B3iWinTa9CjjireVVegOzhYzelZcNC611RniN1vuufD7cNo
1AdLaGZpi1yjD8cwQq5fOFaHdynE3tLaLJy5OL3nRWFWnW6+l5Pvfz74uDAs
3e84D/q63MeX1RIQe8ArUudpyffiwHWvI7Eftja1H8fV+L6qYr3N/b23VD+r
5R3e92APK1ZrXU3odST0QIr0xWfSe6Z/70krne5t7zBtcervZDtc26JMuztX
ezzog0l1mclxVCtaliFXb3knRz8rD1EPlGoDdKFB2k48n6X5YwiZPrOiKNAi
5fUGAxgMPwUbhg4aqQtaNz6JbzVNByP2l5vWMcnTxc7Tlc7mXWoCsP2YzmTP
MS13td4CbUpjNl9vmpbTbVvQ7Q/BpT5cVLe7z/dWG1QfvmWm9PfydLALNccz
utedD98AXdNIfdB9oHQvrM50+S1nyO459aExyVir57Whpaqg2x45bszanEq1
4nvTe6sjoRtSbWU1LXbYWIbtSVW7k/tJ94Wz+0bq1XYTfa3P8y6+Z/VWoHGe
d8+6LaHlT/LJyiPa7JR2OR2LDj3yvBjQdUg5yfEOuRfjPn9G1Bavn4djbmh/
sOq8W6QvPoveM8X8WulSP6oO3SEZgwktnZrulGp3T2mPC50owx1BIPZ7cw2b
fP1tVqYZeHfUVqCq9VhMVs08u2X5Y3VJ42RSt344Epo3VD/QgXt93odxP7uQ
PI8Vlo+xuCcpPbBcXew8Xen2VN49rQFa2+a8Fo9peMyl94Zgp3i3SLud9KNa
Y8Lfls35Wuy9j/XhhdZWvg52ieb4lO51yPV85H0Jelz/W/Ng2DUmWgBNE2xD
SeVLVzh/ZzU8ZNttmDn+n1J7gNTPM7H+RAWahkXiA6HXYdHzqG5Rleu6DDqc
q0lbyNPi3vxYvpa5L7zMVNLHUj2YQu3yu0mdjho7R3/6IyyfbV+MLw/QO/Ao
YtV5t0hffDa95/m10ql2tsLa9oTPeZzGn59C7e6dtPa4S7lLlZxI4yQNLKYr
U6y3vDvvUk3KKnt+6Gc+Vk3rRBfnb8w0VystodfL9JiEflmsizWeTiPLuzNq
eOfBI2NovTeO50mMHukPfNontSYa0rVZ9KYD0BMxs9TAdFN6mYTXyb2cVQc7
qTme1VzM1oeZqI++mTyWa4a2Mlr0WU+9lJZstp6E3nOlTtupmOMRGsusj2rw
NYDnRRpNEoMautR+otprWS3uknuW0fqfXbt8J9bXpRqzAWnfvc7i17EPM1ae
dwswm94zT3MerXSpC5seB0sd86BYuzuVJteVlhqNUyjQW96Nd2WsWanWoFab
xJc8/uHHFOdPPLM1jesiui32nPriuNqMvEtRruFd3A9S3m25dCzf4bF60wKb
jHWbTAM14PFobUa96eqkvyvUKRZ5KtfBntZaT5e/vD6mfivJV7Y95bZd6dUh
+pds3cs+wWF9VxN6Ix9GQ14un2nI5Ovb7q67Po92ubifpozvq2C6B+NjelSx
WutqE97ddcwyk97z/FrpUrs22W5D1tdXmQ5+oXb3TlJ7XPgFpNaIQnC7HoQl
estpTe8sIjYOj2Mp5hk4hFZVjAXFcWX5k5qoVF+v0VChO5QePuI4EfekY7j0
czyrhnceOO+Oga8rTeZ5uOd7+t7vqjfN+E36Vxbwrij/LDrYybrP8i6Lz+PP
YSrezefd/Hwl89AUMW25X5qs+0n/LfPyv9h9aEA/qanW64Az/OL0fPyu9yyA
+bTLaRnGbG6CzvFKf7M8nwhEPlaDd0lbbjZAJ7zEY7IJX5Xpi++u97wHrXSp
9V9RmOYoTY/xUIW3x0Lt7p209jidV2QxTcuGgfDspF5BZXrLSZ3uqbqj/mUy
Pk1AekiqQgO6OH8RW0eptdowGA5hSOKkQGrgSW8Juw9RIOb1SH82SMzByGd/
Vw3vEo2odoNyEv89HFiZWH3M55xl3su028V4fspbLnm/mD78DDrYOZrjKd1r
UjbOWzXokH7KF/q01COH5rOf8kEbs/kPRXh0TI3Nk/dNzMMqST1duaZX1UQb
EP23YgvNXL42QMst15WpfjGNeQeuKfqwaY3zwnt2T/RLzgCGvT48V6JdLmMK
qcHP3vkgcQXPl8fGL3auni4iD6vCu3Kdhz4jSa35In1xiTK9571qpdN3K7mX
LzmnpbA265L0qF9FkXa397SV0R4fQ7s1Wb+va8JrqUBv+dXGG9M63YkyRqOu
+K0KLXsS+4RDh5w/mW/4mzeeL8wffae4oyY0tAUUxntjsGIN7DoZj1aZxjbV
f89qoefrYv8u/P2ZjK508j5RDW9V/l4nY1KfcwqJu/nc8BB0RZajyt47of7X
+XrTEThy/araBKfvgS7qsNY0wfPacfxFtahzdbB3yvTf3Snda7reJHW2q40m
7yvJvXv7Oy6LtlcDzXagY8i1OoXEnX0wRZlqNC7IiRt8zxZjNlLn9VrcT0+O
FWMA1rYbfO2XtCP+/k4EnqUm7mWDrRnkaZwXa5nL8RJfX42KtMtJ+5P1U1ct
MTcl5iDIvWk16+RfC9fV5sBq8C5vR/laxbPoi5frPe9JK50gYJ5/D/b+fBQG
k7gyt0zRYjTFSfzYZPr3IYTBmNW1P2hDLfGeM9XYnqmse9Tw3hv2Qbt9Zh3s
xH3L0b2ONb/39X6Rdu/7zFcymIotxDyDwT3MxsF0243YvZzhvhXdM/J3tn3O
o13Orn/g+v1HD6u1roY4KPA1OzK+9Mh4mzyn49EA2lqDxHcPsv8XcbDIvs+A
OCpA3n1IENKx/uS9VzaP0M15fxSxMvAScwZNo9gTHHH4gLyLQCAQiwXyLgKB
QCwWq7OuhkAgEA8HkHcRCARisUDeRSAQiMViVXhX+hF0Oh1o2zY47N17qrfR
Zh4UbduCjle2BzxMpNEG2+a6i1R7xrZsli71MrDaJV4GIdXds0HTczwjyn7b
M6iOoAuW1gK7X/R+KnoSIBBHDauyrkb9CDS5Z02xwBfvcocDoaHYasNwXP5+
djCc7CuK/SqiYLKvp2FAv+T9+2jsQatWydVIKPtt7wjZ/qJKka4BehIgEEcS
q8K7HAOxh7YGnRH9HLG9rbn60AXgWnZaWsdA7MWvF+mDJZDWhJn9t71jkNI0
mwA9CRCIo4rV4l0a3wofiboGbbpXPKMJGb1wGx5vPg63R/mc00vplAgk9Oyo
FkGnxF+B6XnVdHBdG1Qyrm8ZnZjDy37L9bUo0Omn+z8dk/sEtIRmRJZ30ZMA
gTi6WDXepejFup5pnTuK8FmuY6UV6A1Kb0m3P4B+rw99+q/wYZB6p0GJv0LP
EHu6Gi3QNZEPxRacXPZbjq+Fn6PTT/iM6e0pFoyjEDyzkcu76EmAQBxdrMq6
WgqjiR6U1c+Ob7l+TpEOCOfdGihNvg7FoDQgpTNd4q/Az5/wg8e4luvzl/02
m6+F5J/qxINA+AtM8S56EiAQRxYrx7tCE1o1dKFXpwpd7NmQO88g5ndjLegS
f4Ws5nWY8O4p+202Xws6r8E1emP96IxnhQR6EiAQRxerxbt8DUfGblLXvKp2
Zk4/y40MoZfPuzn+CkXc6pbwrhvM6msheTfhGxam9bdjoCcBAnFksUq861K+
IDHcJFYVY2Y23uaxUjRyQFVU6NzJW1+PxPFKel444HOS8fsMJf4KXJt/MpfA
/BsafA63+LdiX4spnX45h6JwnWhf+BWrdm9q7gQ9CRCIo4nVWFcLwZB+A1UF
uuLZ5ONe6YNQgYbWhXtiXe2id38qja4+8dGWHgtJrfyJX0Oxv8K4xz0OuAdA
FaoJr4Di3wp8Lc78w7ROP0G/3Zrks1pl+VJaFnoSIBAPCVaDd+cD9Y/Yj7yU
+SuEJTr6Rb/N5WsRTvwLol3nr9GTAIE4SjiMvItIAj0JEIjDBuTdww30JEAg
Dh9WaV0NgUAgHgYg7yIQCMRigbyLQCAQiwXyLgKBQCwWuK6GQCAQi8VR4V3f
64Blt7lfRdsGm/zddXswnkPbYSrNgQe20YKWJffgjsFuKaAXaY5HPnRMjWnx
6HYX3I4FnUIfiQki3wG1oYJToG2Zf4700SBldvq57+aGI4/UBffv6Pbz9dtm
xairg9LaT68NBOLhxVHh3SgYgtXke9AaOuEjS+rqVMHq7Y1z+o6V1nUQmgl8
j0L2eJ/vFa5r4PZ70BZ756Z0F3IQ9vleMbO3+7ExogAGjhHvw5vWPQjBkv4d
DQOGOfspUtjFU0Lqaw4foB9DIBAcR4V3KSR/GT2xNyoUWga1vXrziD0JeZpg
WQRSa2eyL2tgNWbyuNgzol6svVvXM/smhG4C4353t34HPSUQiEVi1dbV/F4H
WsLDUVVVBq6hq0JnGMLotgmq1s7d5y+1EyeaikIzpsY1zfP8FEbCb8J2fRbP
mroGum7BMJycL+PdiMSE1KfB7Aym8x54Ir6m+hIibg360KXahyQ2HfYdMDUD
Ol0bWiQPzZYJA6HbFfhD6Jo6tPvBxD+i0yPxrEny2wSjk6N9ztJ3oUF1G2pc
e8FL7Nl1WjWoNqY11Xf3lBhM+0bcuQejgUvybzLtIJ4W9YbTQSFpqeT7ni85
O8ffggB9JxCICVaJd7n3ggq9cRjrdDENc8oT9SbTdPEuvpx89wh496fPl7xr
iPH6QPoqqB2438/3U9jZGYFG9Wk0zq3Dbiuhh5jk3ZB589D4Mj/+DaGr1eMY
U9E7k76Bap7JMX+1BbYptGpIf+ATnrKFpg7lR194Y7D5EsLNpvitkzf3S3i3
XjegF+uW9ePva5UmuK6Z4t2woA5SnhLPdKd8I1638Q7xndBCJ2W1Feo1SsoY
jkCvcb+OoMDfYifqo+8EApHAqvAu54SED8POmPFhctzOEN2H8f388bDk3Uq1
OtHbMjj/FfopZGLatIZsVh882nXeYUhi1Fqs/9UET8yZcq3eeqyROBL8zuZl
CS8V+V9I/dtcXyPKu4S7Q9J3qOJ6Q/L9wKxDzRhAOMjw7oyeElO+Ecnvgh2R
bgMGst77bdAMB75Y5G+BvhMIRAqrwrtMy1ZpT9blBRdou85NThDPM7g53jg7
BX4Kc/Fuvk8DQ0q/awSW8DmT/mtZTfBUbF7if1HkR8FAebeqseMGFl/Ha9mE
W6kHMeHMaGreZRZPiem8Zr8b2Arz+snGrF6hvwX6TiAQSazGulrE3gWoJdag
oqHN47Hx7GlPz+9OUOinEOso8mvzuLue/m0G3vW0BolJk+8jjPn4W8wtZ7ks
5RE0xbsJv/jAy/VfYxDxruTnhoyzhZ55dt5lNk+JfN4NE9/5yVhd/O57Dnzo
bQX+FoPPo+8EApHAavCu9OCVXhN8zjXPS/dO9yI8qjwBd3LeZxpLL4Ts3MRO
iZ9CJHTDGyb45O9ui7+LxmMyPq8w8dApnmcIejpf2/LFPGw04GP/TLwr/X26
wquCezHw2F7mm8X+NeERR36rFZSJ8yXhubiMdcZpbTEXzOcGqK/GsLwOMp4S
ftY3YkdyrZgnGYl3JapN6PaH0OtozP/ibpG/xT30nUAgklgV3qXe6vTZrykq
KLUq873JO7/3xCMkL4+m5h4pRgk/8yoZRxuZvQ3Ffgo0Dpz4PzS1FvmN+z+8
481SY7EGhnMHXDP5OT1WlvPTzO9B4b4P9F3efjyvIK9f4+8fVFX+WzQCs8nX
zqp1FTqdN02u0XHAVOsxlyXfnaV+R03hxVEl12Hen+MuNBoW4+tomPbZ0DrD
mTwlHm1dhN/N+Eb4ngWNqlzr4++SDLt6XN+0LD1Wznx/C/SdQCDSWBXe5Qgh
GI8nnge5iCDczcuhCEV+Cjv0HbEgx8thHkTCN4J7Q/jj9B4IHu/WwaWea+M5
9kfsN+bwlJglrSDHR6LI3wJ9JxAIjlVZVzvqGLta6n0GBALx8AJ59+BBPR/l
mldNMcSeDAQC8bACeReBQCAWC+RdBAKBWCxWa10NgUAgjj6QdxEIBGKxeOh4
N/TBc2zQ9IPR8I78PrQNjemotaj+mNcHt9NJ6HgtBg+iUx76A3DaJqgte+r8
id56BzrtNti2De2OAwN/7++Hled1F635FWtDsf4+qRtvmP++4MDpkDrrsHr0
Rg/He3UB1bjTWlxnsKVDt5e/l/9hwcPGu9G4Bxrbt7BXTd5i9G2x/0LRwe31
oee2uf7vvJrm+4AH0Skf9x3Q6gV1FAXQ7+q8nA2N8K8NrYbYU6E7ub4X8+c1
An8k6qtUa3712hDV8ewaQouiZk7XH93bLdqE1u5BsOz3CnfRu39wROAKbQ7F
7MJwNAKvzfeVVtXpfv0g8xG3qRXAw7iuNrAS+gf7BP5+bgXqmpP5bQQtqlcz
h77PKiBk+54L+iaxr3mi6R5BR61y3YU59DSKMOqoUG2tDs/O24bk/mwKq5+O
Z/tWPd7Ll91zuXgcvN697/BYRG2nxytSk7RuHqAvwAq3qZXi3WAAZotqnqtg
kLGaZXVz23WedveueuEkRjFUBRQy/md7XmvTz0ycRtsFx9Zi7W6p0V2sue4L
Ddr8Z8kn+aGa5tR/rWvSdBvQaBpin3AAw54Dpm6SGNkBnY7DdBv8pDZCj2uG
N5stsJ3B7uWNwmmd8qDP6paVyXLiMlAPNl2lddkA1XTisgZlvCs00pL6QH2T
a6zbA/oMh+DauhhTGomxdEhiHf59S9PBoRoNmbz6roilawrL5/08rXlSFkvj
evgaiaFYXc1Qj7u1oWDUh45pQIeMVZh2e1PjeZyjDbF0PCPeM15pJjT2dgZM
K05le7/rCd2hgvoidTPsdcE0O9Dz2tAi19Vtj6Q3Zu1IJe2hnRivhyOX3EvS
TlQyDuntXqak3v2/v80GXeOa9BGLUXXQdB0sh/JlBGOSjm1a4A080o5U8hxQ
b4AIhq7N2qaWq2UvtE/IWGYw9ds4fmZ698t9AfK19KNpfX5Sb3ntOdumwqI2
ROtwPISuZUDbdcEiz4tOnynqIUZ5SW2Bbtj78v79yvBuwPW01PaA3ROrkT+O
K9TuLtMLF14QVI87CodgNPKfmaTGQ9OwyLPL22VD6IkXaq5Lr4l6eQzdM6pM
l2a0I3WALAhZfqog9XptS+MaDyIO4BpidegOyXhQaMHXyHi+rLzhsJvWKR/z
sa3hjiAYtnkaLFYdsHkQhdZ5NGTjeRmXz8K7Mt4NfVfMpzRhQPiP3buGCSPC
mV2tFs+z8Bi6yTQfXK0OLWc8lVeZVlW1oD98Ht6f1Zr3Habjobb7EBAeVIXG
7/B+eT3O0oZcsxnHqZpl8XzVJrpws7QhzrsaNPQO2E0+BpCa9X6nSWKuLnhM
s7Mea40W1dewa8RzEpWmCbacv6D5sAhPKpVYOy8atUl5G+COxtCzeDkMb1xa
ppTevT/mekzyngc9fh+oH0A4AL0uNTcUsNpmnK+aapB8ietl59KELkfRc8F1
nOrg3i33BcjV0iftJKvPr3sfy23P6TblMx/Z3DYUjcFWa3F91WmelDZ0m6Sc
TKOL6lzX9mVMtyq8y7SyqkbcZ6a0EJPPTKF+ebFeuGek03aalYIxovBT09z4
s+R/Fh8Waa5LDcZdeHfQJjEK8yYm97fJ2z9NN60zntA8i/qsvTSsSazH50L5
s1amj57UKXdb1HNDzn/QWEYDi2kU+2A2uY8HXS9rVpI6xOW8K/ffVYU2T72p
szhN6gM5cdv0Qatyrbm7ng6x/m40gt4gmMqrvAdFGnCuVk31x5HoRxR7UFyP
s7ahKK35PGwr8bVmb0Ocd+taL9adrzFdzoBp7FHPjQEbG3DeLasvmnbfTD4H
Pp+zcvxUvblBBG2Fx466YZC4lfMga8clZcrq3afaE41Vkx5XLJ+JZ409r3p8
LNVxVZ3MWtku8QjXx5P1kO8LsPGBAi39qedmp6Q9p9tUWRvK1peci6nUWtAb
05jGS8ThB8+7B62/a6T4LtsG0sjXLy/SC3+ee6w1O2nuyk17Wl+3+Ng0D9Ur
E63d4vIH0CWxQY2MbZXaJO4o1FoX2rutRHtOauqW6aNP0iTpZbSNU6BrRI06
GTu3UnMHM80zaHwdLbmWJvV/kvMtXaFrOSZxkybjGtaOdzJ5zbsHyc9j4ZeX
uB9S64z8Xp7ODG0oo4M8meMO5mhDnHdrLZfzkRhLtzs6VIUWZtx3BrvU19Rz
wO+lVnCPq60OjPwRDKnm/MjnfURhmaZ/m7pWoR9A/rHJ55djyPqJ/HGBXBPg
XF7kC7D26v8LirT083Si89vz7G0oq0XN8tK3J2NLvbsv3oCrxLux5ixBv6Bd
F+uXF+mF32VeYMl63p13Jxwl4/DyNTjuN8bGh/28NYoIgvA+j0nqFmszw0Qc
U8a72XlUHhdw3fAyffQw+UzWJvGTzK/b9SAU6SttrmlpJeJD9nwWvfMh5xny
dIg9PpdmDSb1wJ9RHe4SThiHAXjyvQ9xT8KZeTfkdVjV2FwFzwsfE9D3HWbl
3d3138eZOgjnaENJ3qVz+1o8bjXiuDLBuyX1Vcy7WX16MY+qpp9jj/opFZZp
Z4pj0m09TMW7s/BuXl3zuYscnXsxluNzCcW+ANeLtPSH4TTvFrbn2dtQtg3Q
Z3fYH0JA156EXqti5fjazonV4F3ZFkmb6vQJHwzBVPL7yWL98mK98L7F13xa
bO6Y1HuTzwG6U++VCI5SpB45n/+U46cyzfWdUVf4qjWgO5ikG437LMZrdj7O
xmIVtQ3jQM4PatAfh/F4iY+xkmMiyecK0wmm6bFxZ4W3mTJ99KROeV94ANVb
NgxGA7BJnNEwe/Ezz+bOyNibx7Ad5g3hd9V4PDdV1qn3GRIQbZ/OY/Lvxizm
ofOsVJdetfkzMXZUkP6WKU11GY/Q2G3YI3HO/dR8geQxQz4Xwq+ear0X1+OM
bUiOuwUPjTr0txar69nbEOEMwrvVeF5nJGK+yVion5grKqsvfmxyfmMMOuMV
/m5Acpwtn5+m2YXReMQ8VrmnaHGZZF8t9e4/yfqjGnSG5P4LrWYaQ4eJa8l5
ABkXhYKjk54t2fbA5+B0Nq8jn7O2yuenbNHfFPkChEVa+tGkv5Z5Km7Pz6fa
1M23nS9sQ3F9xT4DY9CqdXCEvvRu/oqHjXfp3L0Wz93Lseg07xZpdz/1AaNY
LzxM+J3FaTdAs7L1J9dfyf2qc+3yutaNx9FFmusxx/oeGePI9GtQq4n8iDXh
bmvyDpEm5uBe/idvALXO22CjZYHTlnrideZbP1nTIOe0FMYXrh8xv+Wi8npP
Z3XKx9COr83LxMegfVDFcVWlBapYl3q18cZ43UTqnMdlHDkkv6IuqzVyD6bH
XVLDvtrkadaadsLriGrLayR/fK0kT1Pd1WVe/wdcvZzVmp+8D6qK+691h6zu
S+txhjb0n69riHunguN1Yt14xXTTnnklbSipB98QbWdIuF3t8P5mop1P58ab
4JBnvai+6NppTZRdsx3oGHKNTCHxXp/EJjw/NYWuyZG+XKnGeasKbXlHLynT
zkTvvk7fvfadybx9o8l5i7SL9/c+RNq1WGPWbPAcec+qoNF3f+TaXVWBbt4+
kKAPumhbSlPhZaJlT9yXQl+AAi19qvGnZPT5i9pzqztKtCmq85/fhpIeBLQs
HRY/EU5o8M/0ma2Sfx3/wd93XpV1tbj+hV52ej0hgxL98jKEgdQ2L6o36bXG
xyPjIHvcbJrrwdiH4XAIIzEPlcpDOMlvNIfOeMDm7fw97UuIOZNpu5eVKdpF
c34ehOCPaB1k48GIadvvtl8gT089VZZgzOp4vNd3eg6sDe13fc0HWrdzactP
6d0ntOz3eU9HSO7ZaDQCfzydv918AYq09KdR3J6zbWquNkTqabbrz4ZV410J
Pp5uTeZgFoLs+wwIBGIReNh8AVaRd+l7tHU59tSz+78ODnQ8w8eAVWga+7Nu
iUAgyvEw+gKsIu8iEAjEUcbKrKshEAjEQwLkXQQCgVgskHcRCARisUDeRSAQ
iMViVdbVeh0b7HaH+Ri0bfK33Yau2wN/FdY2Z/EXYPm2oOP5EAV98jf/zrbo
d6N9yUfqWm2beT10ui4MRtPavg/iNzFrPtrtbmIPUtKLgvpQOAfyDiB9t19t
qGy/wf6kl/TPsBP3KgSvYzNfCHov+weqDY542LAqvEt1QnWx10uzyTNgG/G7
Jaa3XM3wWf0F6lobRmyvRQi2KIve9sCf2n+RxWxa+FEwgrZWF9eywOm2QVez
+2v4sQ/iN7F7PoZgNcXeKMWevG8XBaT/5Hs19e5g93fMZ/U6SBwnNRz3zb+D
5Nm15H6rFgwS94rqB7K9bKoN473W44H7OSAOI1aFdyn6Qh+vJ2Nc4fGS1nRZ
Dsr8BSQXSG0Evg+1OrU/tQjzaOFnr8Uw5pp3fG/9Yvy6osHEU6GR1Lilmjm1
WTyUZvU6OHhPBLZPUezFTu0BZ/oc9QfwhVhE3hGHEavEu0ltWf6d1CK1WEyV
qwWf5+GQk/ZBeVRQSN0BqkU2dnXBuXkxzrRufp4WfrGvxeRaemYMEPYtoWPi
THk4zFtvfq8NKqkrhfoZePl+klSDpKZosV617gqtSuofVtUSec/3Ukh6HXBP
g/x7lD0u8ElZTJ37d8T5nfbjmNd/QurtSI179h3VBlI6qeMGXZPlUdWt1NxD
Xp3llTE3r7neCfemvTlWgC8Q+4NVWlfjvFsFo+2wMTTXmKkKzaJ8LfhcD4dM
ugfpUUEhubDW4Oebg3zOzdPNn9LC3ynxtdgp5t14bEDyeDfl4TBfvXG96Sb0
xiH0hAaXndOHSG3vnXE31q1hWn9hkneLvRTSXgdB8T1KHfcc2OIeyfIX+XHs
7OLjMY2h8B3gWldyz7iR0PWkum5VhXA31ZOrT44tqrNsGQvzmuOd8Lr/V4Os
N8eyuQKxf1gt3uVtViFxmqGpsSYWjc+4LmNWC77YwyGZ7sF6VEy4MNaCaphT
a0qxFteUbn6OXmGRr8VOCe8m9JxTHhY5PgqF9SZ0L6X/ANVCM1r5Y4hcjVnC
t8OxBw2heVjqpZDxOii8R5njqG5rrO++ix/HrP4TcZ3YTaFfRdIOaH+S0Ach
12LrDSTGNwwDWoLTtae84jpL5n2uvEpNw2lvDsTRwGrxbj2jjTHmOrxSlzNH
C77IwyGb9sF5VCQ9IHzhGcXXm5LHcs3XPN38cl+EomtN8a54xmlsOaWlPmu9
CT3WKZ+svHwkeJeVT/SZzPdHzO+We09k9aVn84BIfd7Fj2Me/wlZh1IrtmM2
Uhwpr2t6Q64bNuL3MCyrsz3ndYfrouZ4cyCOBlaRd5O+HXytrQptpkWbfVbD
Qg+HZLoH61GR5MKA50ms9ddanXhNf9Qp0s3/4r7w7sDmGqVql78HFeby7i71
JsrfTHpuj/vg5sRaWd6lvGZL/VfpX1TmpZDpC3b3gJDxZJrLyvw45ubdnZ1J
vxnnRUBqhCfGDHRup73RLq6zZN7nyit9lyLfm2PZfIHYH6zSuprU4ZftnfpS
c5/aBn/HIUcLvsjDIZnuwXpUSM+/ZDwZgCU4SOqmR4W6+Vl/hbDU1yL0jNS1
6Nqg1J2uNifvdKU8HGaut+eFH1gV9E4Phv0uqf8q1+GfykfSU0GA8JCa5Igy
L4WM14FTdI/upY8LRFn4+xzlfhyz+k+k4HPfkKraybwHJ3wjSJ1a7oDEvB7T
2DZ6zxXXWaqMH4MrJXnNeicUeXMsmy8Q+4NV4V2HjHljHf4q9WoQMWOjxX1z
crXg8z0c6DOTTPsgPSpGjgn1qly/qYFO482gB5qSOLeuEX7N182naaS18It9
Lag+Zk2eT64p66hab4LtTuKtlIfDYya8cY56i1JrPNT73Z+6V1lPhdQ65qhD
8jXxtCnyUsh6HfgF96gfJo7757fBm0VZqnWV+W4U+XHM4z+RRgRtkk/Ny4nx
B52Jr3rcJ++U1FnGz6EorzneCXneHMvmCsT+YVV490Ewk4fDivgLFOnmp7Xw
Z/O1OMh6C0i5D9x7Iut1UHSPpjwRprEffhzJfBSmw3wHxrl1k1tnOXmfPa+z
eXMgDh+OAu8iEAjEYcIqrashEAjEwwDkXQQCgVgskHcRCARisUDeRSAQiMXi
da973ULX1T7xiU/AY489Br4//X4SAoFAHHXcv3+fceDTTz+9sGt+61vfYlz/
pje9CZ577jm4d+8eAoFAPBS4c+cOvPnNb4bXvva18LWvfW2hfH/37l24ePEi
43wEAoF4mEDjzs985jNLibVfeukl+OxnPwuf+tSnEAgE4qHA888/Dy+++OLM
PLlf62oIBAKBmA3IuwgEArFYIO8iEAjEYoG8i0AgEAgEAoFAzIaPfOQj8O53
vxuBQCBycePGjaXz1FHDzZs34R3veAe4rotAIBApvOc974H19fWl89RRA+Xd
D3zgA/D1r38dgUAgUtje3kbeFdjPdTXkXQQCUQTkXeRdBAKxWCDvIu8iEIjF
AnkXeReBQCwWyLsHA+RdBAJRBORd5F0EArFYIO8i7yIQiMUCeRd5F4FALBbI
uxPguhoCgVgEkHeRdxEIxGKBvIu8i0AgFgvkXeRdBAIxP7785S/DaDSCz3/+
8xAEwVznIu8eDJB3EYijCcq1juPAxsZGjHe9612wtbUFX/nKV2ZKA3kXeReB
QMyGwWAQcy3V0H366afhqaeeir/rdrtw7969XdNB3kXeRSAQu+OFF16Ad77z
nTHH0uf7q1/9Kot/k7Ev5eHd0kLeRd5FIBC7g8a2SX4t4l0K+l1ZWsi7E+C6
GgKBKEKn02H46Ec/yvDJT36S8a7v+/F3t2/fZrxLebUsLeRd5F0EAlGO+/fv
x/O3lGuLMBwO2XHUX7EsPeRd5F0EArE76DsLdC3tv//7vxk+/elPM6790pe+
FH9HY17Kux//+MdL00LeRd5FIBC740Mf+tDM87vPP/98aVrIuwcD5F0E4mjh
c5/73Ey8+/73vx++9rWvlaaFvIu8i0AgZgPlS8mv733ve9lnz/Pi765fv87W
2WZJB3kXeReBQMwGuneCzvNm5xboe7t0rneWNJB3kXcRfK/9l7+6/HwgDg/o
Ow5Ul4GC/j3Puci7E+C62uHHtvXn5D7+FFjbX97l2K9OePaF98PLyL1/2Wt2
32dUhhc+eg1e9bLK/9/e2Qe1cp33X2nTSWfaf9rppHU6naSZlknzk5m+JGQm
HSvG5KWJhWliG2MbY1t2FLcFlxSSBoJNTFCnWNNG0B+1TJrKNaOaueBG9xYC
LVDrR6GRUYAE2Rfsyq5uayVX2MIW9o3i0Dz+nXN2V+8SEuxq9fJl5jNI+/rs
avXRs2d3zyOOI07H6DkKabq9MfxWVCnwLrxbOwRpSHaecWghbVw0HBTHejAU
odiVKC2PGtl0/RSIxNj4CG0/9RRtB6MUi4QpFE46OxaNUDgak95HQhTYDlAo
kr3uWNAj3G2wOGk/EqXghkt6332OrY+vP0xhNlyKI0jRlHkjoX02bJ8iyrBY
lMKhMHMqW448PBF/IrbMbZDmDQflZcXyL4vPG9wPUGA/mNw2UFbgXXi3Vohs
TrDPsJuco2b2v4M2o9LwTVd/IgflufCydyL53uykSGSDrmGvr7FvUMDVwYYb
aTnM542S02Qgy7l9Ci1PpC3DE0z31eaEWQz3RjKHmdmwCE2YDCnzMzqcFGb5
qneiIznMOEr7fDs27GnTXliW3pvkZYwuh+RtTdmGK2FydRtT5uug5VAsa1nL
7LfDbpK2wWzkOb5X98+tHoF34d3aIEYei4HMrn2Wly6Iz7LfE6Qr0Q0yc2eN
LqRNvzlhYp6bkPI/Ns31bJrrmXevRLxk4m0EroC8HDPzd0T4l/stFNkXObXR
vpGxvGzvBj39Yv4N5l2n2SB+E7ZZfrnt7pb8/4IUm3ligyLBBZEf2zciCada
JrwUibIcnOWqUbaMSGiT+sW6vVnboMwzweZP5P3dHgpnLkvePlO/m4LIdXUD
3tUGeLfMRCSHpeWU5gmRy5pkn6VOn8u71wiXxuhcN5vXNERuO3Np/wLxdogJ
s5wjms2CIfd22vI27FJuuxFNXYfiYtm7zNu8fSG27RTxndtak2I2meXldpB7
O+ndiU0p5pCcnxvZdHxbzLLz071rl38j+Lqj0vqMdno+Y1mc7XOjiX3U7Txb
mzY4HfAuvFsL7LstzF8TtB8KUZCxIXJK5rbv/Qd1iHZXF4ViUjsrd9+GnTnL
MEpB3g4aSfVu+nm+S1yfi5KrwyDaUrdlr6W2AXOiAbfUFjDkkdpj9xek9Yo2
ANm7RrY+3ragODqyLaYx9p+T/c/bgGMJ79o3pD6tpFj7WX4q5bEmOd9N3YZo
wJXM8WMB6hZt3MtZy7oSC7P9w2MPyu0NoxSugM+v3oB34d3qh+WjRgMNeVP6
3ottk0Wcw29SkOWLxkQebBZtAUG5zZTnhOHopvBfx6NKDrtP/fy+BJM94aRY
yEv9KW20Jnt2nri/nLoe5j2LnQIRKT6pnSFJt2tTzBPacIkcVhnO8/KonA87
t6Ucdd8zlGhX7jAbE+0ZadvAfe60pOT6o7TNpslcltLuokw3dG5bxc8BFAu8
C+/WBbEoRSJRcW9B6rBoiW2cvJ218DxSzS2+ruQw+boay8e5H7Pnj4k+tQvd
ExaLKrHHRDtt3m2IRjPWnYuYtB24B0034N0kuK4GtCFKC3YLWewL6d4HdQu8
C+8CAMoLvAvvAgDKC7wL7wIAygu8qw3wLgAgH/BuZXmX94t16dIlAECV8tpr
r8G7Vebd//qv/xI18fb29gAAVcbTTz9NP/jBD+DdKvTuc889p3v8AIDS4fUs
4d3SqITravAuANULvFs68C6oL45FrYRj3eOoHeDd0qlW78ZDazQ2MkZjY5xx
cs2u0cFx7mlf35X6T3lk61Df/R0P0ez4ALU1N1NzcyeNuBbzxlyN/PjHP6b7
7rsv9/ij5La3dfJtX6O4DjHuutrYsdBMviN8xmoB75ZOtXr3aGtcxN5sHaDe
tkbxunHMl3PaePjb9IjDTXuHx/rt66Mt6pT7ZRlzn6fzzl6pn5bGEQpq/r08
prVxK3WOLGq6Hu7dz33ucznHrQ7wbW9kHpqlWdcIdQ7M6uLdPVcni6ONtrTw
rq6f8VsUXh2ntrYxCpV5n8K7+lJW7+7KfU7t8fdB6XhvHKfDeJDGe600Mu6k
kc5G6nTtUvzSKg30DtDif77O8pEgjVl7yb22SmOdzdTYbKXZrSCtse9IY2Mz
9bp84hz0OLzKfM7GM1c0d7J596RcOR5cpN7OXhp3jbN1NtLUwgxZ26zkVnLp
4xCNW9kyg0dp8a6NNEt9LO4mh4dXR8Qwqzso4krEbeVxtZFzNShPe0RrrgFq
5r8tbb20KC87MxbX7oHYjubGRrEtA85FOhTTuRN9cbUNnKcjvkyWl7lHrGz7
DGIfuH0haV259l/YR2O9bWJaQ/MA7cVzfyb5vXtI4818/b20m+W73Nv21nGY
ZseS2zJyXtoXYZ+brM2NwuHWETeF5FiCi2wfWEfI7WbuYfN0DrgpLLvuaG9R
/DY3t3VSm9gPsnfZZ+Xk29XI90EnORf3cu6DW8cm1PmM34rTItsm68g4Ofm+
58ebc1X6PBihNRd1stgNjW00Ln/22Z/xEYXXnGIbDWI7nbQntmWPrPJn3Ng2
In1GJXzGb8WT+5ufD8zuHeX8jHMB7+qLHt4dWd2jvcUxySsDqyLnaJOPv2bm
V9daiF7ffUS8d/DvTcp464j0fRfHaifPmw2Jc9CjvfPknPVRKLhGvXyaNpf4
fhxtORMOs/aO0Orz/09aXqdb+Dq8yHMca0Z+c0hO4Z1O2k111pFPzNs4sEjH
KXF1DvTKcTXS2uFbtOVsE69da1vksvLhAyKnyYol/DLLsVzkC7LfEZeUazm5
Aw63pO9kI/vure2xOA/J1WaQl+kjV2+jPO1hjv0XpPO9kqvO7wbJd36Rgnly
xUL57p7bmoh1wLWWcE3ubTuS42PTuhdp9byLxR1OfOaNvWwbmaMa5c+F/7bs
iuVI+3ikV3o95mPbE9+Vc1ArnV87T72NKd492iWn8zzthfbYPpCGi88ncx8s
fVOdz5htl1Perka2XGuz9Hpk7SDxWfayfbPmkvbV+fBxjs84Tntsf8z62HHv
k9rP2rg33zpg+0/6PRpz8za3Uj7jEAVnpXWOLO7S3toirQXh3WpBD+8qNFrH
KSh+46VjqnlsLTFtmnfl8b3n+W//sXRsNo4JDwTTzkHjFPQtkss5xnIQnuc5
xfdbWe/YmtJWfEyLA1KO4Ds8ICebttMdzIhX+b710l7qd1VxQidzuhL3+JYY
dyDnSeNbL8rf52b2O3Ce5erSd0v8NmTFwvKjgyAtul0iP5XmPxTbIraz2SWd
2x8p+0hulzlcE55vHvfl3H+rA9J3tq13nNb28reRF/IuZ4/lpMrvnKHNSQcJ
V2Vs2/e3ZFetps2/NS61zfLfIv7eN9ac+J2UvMvG8c8u6Epsu+KtgcWwFENG
O8NB0EezLqfcVtUmtftm7QOVPmPl96R5XPrdOVwVvx38M5e2jR2Xzllyj1kT
vxu5PuO34gfkW5wlJ8tP+fxt8jGjbNvucemfcXhxQM6Ve+Xf5uK/i/Cuvujh
3TH2W318nNJuKx9TyrHIyfQuP/7Gxbmg/F1hTuU+kr67/Dt5LOd4LHdwuai3
WZrmKGW941vJfED5bjc2N2fnO4I4uTsNac7gHO9J5/8iViVu564Yd+gbl9fz
3/L3uZnF4iaX283OpRfFOXRmLMeh8/Jv0Bi5xq0p45Tvu7QNyndSWRd3Q8L5
OfYfz+VWnQNSfsnzrtlM50ic5F3BcVjOywzkDr6ce9teTf8NUthSPh95/yqu
TXpXGhdP7Jekd5V9tOdqS3g3dF46J7COudh5d3PSxzn2gSqfcdbn4JNduCVv
mxSL28X3wyxtHcRzHG8h6fyL5dsu15iYv825lbI/5P1T8mfM9s2qS8ox+PKt
xbe/w7ulU7XX1XL4Tzq+sr+zOb27le7do9Tj9khuj+x00cGhnK80j1E4bb2p
eV+IBpTztoxjOTNeQ9sY7R2y71PYRwPyeeb5UDwRd2Ovmw7iYXJ2St5fZOeV
Sr7pZOf88eM4hfb22DTZsSjXGp1bBxSUnTKyGpa2k6+rcYB2D45S4u2lLRbL
3qyU64hzgKz9d0zBrS0Kc58FZ6VtzHP9Mr934yw/W6S98CHFWa42K29P/m1T
4muj83vsHPwgRHuhw0ROZnXvUvxoV55GanNJdc5xyn5RfosMneO0tbUotzlI
ft0alxy6xXLY8/J5OD+3z3UMqfIZJ9pP+H4/Ip+zU8rF2WeUaAd2rtFhPE6H
oT0KpnlXPt5kV3e6tuhwT8rrm0ekvFVps5ndPWD5aimfMfudD26xz4cfh3uS
1/m1kiK/i/Bu/Xk39RqGQD6mOt17iWGKd917ryfGp+WBnW4531XOQY8T3wme
v/TK5+w8z1PW68647iB9h5tp9SB/zKFVZ/I82yC1Bc4yRypxd6aNY9/HWTlX
4dd/rM0p4yRvZMVysJZYRmNnr9yGJ7VDBs8PyPNKbRT8ek0it+H7a2xRvt6W
uf+Sba3StflOWhUOyd6+/N6VvZ+ybcr1y3zblhlfs5wvLo5ZU2KxJq7DSd61
inN8Jd91Clcd0fmRtuRyGqX9ztdx4Eu2VXX2WpN5Xo5jSJXPOHNf8ngGZmW/
xcU10dRx/BjNPt4O5N9kaft75eXNBuPid1FZ9xjb9uI/49T2cekYGV8NFf1d
hHdLp1q9Ww7iR0csB5Nei3vt894LFKYxfnwPFHOfFstlDg5YHn2Y3oaW1s7A
8px49j1vPJ6jo/gJbW9xMY20zKP05WS+l58hyLWuTI7jKcvNQ+F2Br6uQzo4
YOf+Oe6HyL1tUnzxjPiO+XaU+OyDWH6u+zDiyeHH4vPOty9U+IyV8yv5WmDO
/Sn2c/K4y0dy++MZ+y3zffGf8VvH8rpL2K8ceLd04N2zExK5ZCM7lzzD/cHy
9RdrRo5VTRTVvlulqPIZ83y3s7S202oA3tWXevUukKhl74L8wLv6Au/WN/Bu
fQLv6gu8W9/Au/UJvKsv8G59A+/WJ/Bu6eC6GlALeLc+gXdLB94FagHv1ifw
bunAu+Xl+OiADo6O6fVIpKbuJeLUl3ePKRKW+r7g9yTrH49+wLulA++Wj+PQ
LDW3jYu+FQ63HqGrb3DR6xUQl1rUj3d5/x03kGNN6mtny9mZ7AehDoF39QXe
LcyRb4yax5Rn4g/JYXVQpALiUov68e4hjV19A31bef7taI16U/r2qjfgXX2B
dwtztMW8O6L0KXNIj/Q+UnTfI9VA/Xj3dXJcewOtvS6/P1yjgfHcfQXVA/Cu
vsC7hQnO9lKnS3kO+HV6hH13FyM61h5SmbrxLu+z62prsi/IuI/aGkdEf3W6
x6YD8K6+wLuFOKTxRgON+JL9pbuvNVCv3B93LVAv3j3ccpDBMJY8VzneE30a
LR7Uzm9oKcC7pYPrauWDtzM0DijtgLx9d6ymcqR68a5oZ7j62mT/5odr1JtR
G6OegHdLB94tH7nad3FdrRo5TG/fPfKhfRfeLQl4t3yk5bvHu9R59Riuq1Ul
r9PY1VfTqpzvxvec1DyA+xng3eKBd8vJIa26XOQ7OKZdXhN2q3badjn14923
6HBvkVyz/J7AA1HDeStcuE/4Wgbe1Rd4t76pJ++CJPCuvsC79Q28W5/Au/oC
79Y38G59Au/qC7xb38C79Qm8Wzq4rgbUAt6tT+Dd0oF3gVrAu/UJvFs68C5Q
C3i3PoF3SwfeBWoB79Yn8K6+wLv1Dbxbn8C7+gLv1jfwbn0C7+oLvFvfwLv1
CbyrL/BufQPv1ifwbunguhpQC3i3PoF3SwfeBWoB79Yn8G7pwLtALeDd+gTe
LR14F6gFvFufwLv6Au/WN/BufQLv6gu8W9/wP/4d1DsOUF7gXX2BdwGoP+Bd
fYF3Aag/4N3SwXU1AMBZgHdLB94FAJwFeLd0KsG7oVCIdnd3xWcHAKguvvOd
79Dly5fh3SrzLv/sLl68CACoUl555RV4VydO610AQO0D78K7AIDyAu/CuwCA
8gLvwrsAgPIC7yaphOtqAIDaB96FdyuJo6Mj+upXv0p9fX3U399PX/ziF2lg
YIC+/OUv09DQED3wwAP04IMP0le+8hV66KGHaGRkREzPh3/3u9/VPX4AigHe
hXcrCe7O97///TQ5OUmPPPIITU1N0Te+8Q167LHH6PHHHye3201PPPEEnTt3
Thy3Ho+HLly4IIb96Z/+qe7xA1AM8G5tejcWCVIgGNFg2RF2zAQpptH6uHdv
uukm8ewIPzb39vboP//zP4k/x/c///M/9P3vf58ODg4oGo1SLBajH/7wh/Tm
m2/Sv//7v4scWe/vEwDFAO9qg97ejXiHyNC/rP6yI8tkNAxRuJT1RTfI0uGk
SBHL5969+eab6dlnnxXAu6AWgXdr1Lsbo2Qe3aBYNEzBUJ48NBalUDBIoUgs
MSzGfcb+R0NseDiWMn2UgsEQRcLLZDbZs71baH2xDTFPtIi4uXfb29tFHxUK
QRYjvAtqCXi3Rr27OSHaTYxGo/hvGl3OaBuIkLPDSGZLhxjv3JZcuWE3sfdG
ltMaxHBXIMpy3G3qN7JlmTvIxIebJrJy13zrC216yGm3iGXanS7aCEYLxs29
29HRIVyr8MILL8C7oKaAd2vUuxt2Mpjlc/swbxsw02Y017QxWh4y0ZA3LN5z
7xqHFqTXo2YxPOTpJkO3NOxKeIFMxlz5bu71hfe3aWOZO9lCC5ubtJ+WQ2fD
vXvbbbfRpUuXsoB3Qa0A7yappetqynm/eB/dYHmqkZYjKdPE9sneYSJTh0Xk
sPYNOd9lrh1Nec29uzHK8l97cllm42jedoac64t6RTtDse27t99+O4XD4ZzA
u6AWgHdr17tGyznpffAc27Z+CmaMNxgnxGvvkJEs54LiteLa1Nf7bgsZ2LJE
u8Eyny/boQXXF2HezZEj54J7t7OzU/Sllw94F1Q78G6NeldpbzWZxP/Rhf30
acJe6hBtuCayWMyiHYC3C4h8N8W74nVkk7rl9l6jyVi4fTfX+kr0bldXF738
8ssFgXdBNQPv1qZ3ebut+B+NUCRnu+4VcT9DVB4XjRS+3sWXFyk4TYH15bn3
LBfcu3feeSe9+uqrJwLvgmoF3k3nzTeP6X//9yc14N1KIkKB7exnLXLBvXv3
3XeL54WLAd4F1Qi8+5bwLPftT37yE3rySR/Lo66w1wTv6gD3rsVioXg8XjTw
Lqg26t27il+5b7/+9RV69NFlgeJjeLe8cO/ee++9dHx8XBLwLqgm6tm73Ks8
t1Vcmwr3MM+B4d3ywp9Pa2hoEA4thfvuu0/0XaZ3/AAUQz17l3uV+zWXd3nu
y9sd4N3yw2th831XKvw+B71jB6AY6tm73KupbQvIdwEA5aCevVso3+XtD2jf
BQBoQT17V/FqZp7LnfvDH755pmXDuwCAfNSzdzn8fgbuWeV+Bty/CwDQmnr3
Lif1/l21lgnvAgDyAe9qA7wLAMgHvAvvAgDKC7ybpLb6xaleeI0Jfg9vqfC+
cvSOHYBigHfh3UqCO/e9730vfeYzn6Ebb7xR1Li85ZZbRO2fW2+9VfSJzvvn
5X1F8n7LeB86vD+Ha665hoaHh3WPH4BigHfh3UqC98/AfcvzV9RxB7UKvFtH
3o2FaXN5gZY39ovqk/EkIsEABSPZ9dJi4X1a9izQxn6eOsYF4N696aabxHH5
zDPPwLugJoF3taESvesdNZGhY4gmnAtF1To7cXn9RupfDmcMD9Oo0UAdQ3Zy
eQLSsOgGWTqcRddX43XcuW85+/v78C6oOeDdevFuiIZ4/R1vKOf4aDhEwWAo
mQfzWhQxlrtG2PBQJGPaIIUiUebxZC02hVhomUwGEy2n1g2ObYi6ltEi4uTe
5e253LUKvM0X3gW1BLxbH94NnOsX7SgGo5GGPOm11iIbE2Q0mqnDxMZ3uERe
Kuqy83ppbHr+3+LeFtNuu/lyjNTRIdVRs2+kejdCbotRnq+DPPtRCm16yGm3
iHnsThdtBAvXE+Le5dfPuGczgXdBrQDv1od3r1yJ0gQ7/x/dzO+9WMjDfCnV
aJe8OyRqAkc3Rsk05GXTBKmf+dMTkqZfHjJl5btXYpsi392ISe/D+9u0sTwh
6mYubG7Sfji7PTgV7t3bbrtNODYX8C6oBeDdJLV9XS1Cdu7djcz22Cu0v2AX
+a7FYkrUCuZ12U2jG2J8RPFuxEtG7lS5buWmPbudgbflcu96I6nDvKKdodj2
XX6fGPdrPuBdUO3Au/Xu3TCN8vaCbfY6yuv+doscN+HatNcBsrBp3fs8Zw3m
Xl4u75ZYx/2OO+4Qbi0EvAuqGXi3frw7kSff9do7xLabzBYys/8dzm3hWnOK
d5XXm65uqZ3YYGSOzmzfvaKKd/nzENyrhTg8PIR3QdUC79aLdwsTjcjtvvJ9
DIWmjUUjJ06TRoTn0UNFe/euu+4STj0J1HEH1Qq8qw3V5l1tiVBgO1jUsxpK
HXfu02KBd0G1Ae/Cu5UE9+4999wjXFoK8C6oJuBdeLeS4N41mUzCo6WwsLBA
f/RHf6R7/AAUA7wL71YS/HoZ71esv7+/JD7/+c/T2tqa7vEDUAzwbpJ6vq4G
ACgf8C68CwAoL/AuvAsAKC/wLrwLACgv8K42wLsAgHzAu/AuAKC8wLvwLgCg
vMC78C4AoLzAu0lwXU1/XnnlFVGrPbVuO+8Xktdt5/3l8Lrt/Dnie++9lz77
2c/S5z73ObrvvvvEtN/61rd0jx+AYoB34d1Kgj8n/OEPf1gck9/85jfpwoUL
wqf/8i//QisrK/TUU0+J59I2NjbI5/PRd77zHdrZ2aGlpSXxzJre8QNQDPAu
vFtJKHXcd3d3xbGJOu6gFoF34d1ysem0UIdzs+A03Ls333wzPfvsswJ4F9Qi
8K42wLvZbNhNZBz1FpxGqeP+/PPPJ0Add1BrwLvwbrmQvLtRcBruXX5N7cUX
X0wD3gW1BLwL75aLYr3L67hfunQpC3gX1ArwLrxbLor1Lr93LBwO5wTeBbUA
vJsE19W0pVjv8vt1L1++nBd4F1Q78C68Wy42i/Quf0bi5ZdfLgi8C6oZeBfe
1ZrIpos6zGaxf53bkYLTKnXcX3vttROBd0G1Au/Cu5oTDdH25ibth2MnTsu9
y58FfuONN4oC3gXVCLyrDfDu6eDetVgsFI/HiwbeBdUGvAvvVhLcu7zPm+Pj
45KAd0E1Ae/Cu5XECy+8QL/1W79F7e3tJdHa2ko2m033+AEoBngX3q00Xnrp
JeHfUuHX2fSOHYBigHeT4LoaAKAcwLvwLgCgvMC78C4AoLzAu/AuAKC8wLva
AO8CAPIB78K7AIDyAu/CuwCA8gLvwruVBq8TvLCwUDKRSOE+dwCoFODdJLiu
pj8XL16kd7/73fTHf/zH9Cd/8id0//33U29vr6jRzp8D/sIXvkB//ud/TgMD
AzQ4OEgPPPAAPfjgg/TpT38addxB1QDvwruVBO+f4cYbb6Tvfe97qOMOahZ4
F96tJJQ67s888wzquIOaBd6Fd7Uitn+OjIYO8oal99FtF5nMExQuMA/3Lu/n
5rnnnkuAOu6g1oB3tQHe5cTI020gg+Ucex2ifva7NrF5cr0JXseduzYVeBfU
EvAuvKsp0U3qYL41Gg1kHvWeOD337q233io8mwm8C2oFeBfe1fwYc1vIYDDS
cuTkaZU67tyxmfD+IeFdUAvAu/CupsS2ycLzXYZpaPnE6bl3Ozs7hV9z8YMf
/ADeBVUPvJsE19XUh7fvmp0BuhJZFu51bkcLTs+9e8cddwi3FgLeBdUMvAvv
akVkc4IMxlEKKceaaG8YomCBebh377zzTnr11VdPBN4F1Qq8C+9WEty7d911
Fx0dHRUFvAuqEXgX3q0klDru3KfFAu+CagPe1QZ493Qoddy5S0sB3gXVBLwL
71YS3Lu8jvsTTzxREo8++qjwtd7xA1AM8C68W0m88cYbNDMzQw6HoyS+9rWv
iX4c9I4fgGKAd+FdAEB5gXeT4LoaAKAcwLvwLgCgvMC78C4AoLzAu/AuAKC8
wLvaAO8CAPIB78K7AIDyAu/CuwCA8gLvwruVBO9j90Mf+hBde+211NzcTNdd
dx21tLTQRz/6Ufr4xz8u+MQnPkGf/OQn6VOf+hRdf/31ZDab6QMf+AB94xvf
0D1+AIoB3k2C62r6w58T5i5dX1+nb3/72+T3+2l7e5t2d3fp4sWLos7lCy+8
QErdn8uXL9PLL79MTz31FP3Zn/2Z7vEDUAzwLrxbSXDv3nTTTeK45KCOO6hF
4F14t5JQ6rhz33L29/fhXVBzwLvwbiXBvXvLLbfQ888/nwB13EGtAe9qA7wr
Ew7QwrlzdM7jIQ/773afo81QLO/03LsdHR304osvpgHvgloC3oV3tSKy7aYO
i5OC0TC5OgxkHnKSy3WO9qP55+Heve222+jSpUtZwLugVoB34V2t8HSbybUv
5bbeUQt7ffI83Lu33347hcPhnMC7oBaAd+FdbQjTkMFMGzH+ep+6DRYKxE6e
D3XcQT0A7ybBdTV12ZiwUIfdRc6hfnJvh4uah3u3q6tLeLUQh4eH8C6oWuBd
eFdLopEwRUuYXqnj/tprr50IvAuqFXgX3q0klDruvM5aMcC7oBqBd+HdSoJ7
95577qF4PF408C6oNuBdbYB3Twf37t13312Sdzlra2vwLqga4F14t5Lg9+j+
3u/9nuiHrBR+//d/nyYnJ3WPH4BigHfhXQBAeYF34V0AQHmBd5PguhoAoBzA
u/AuAKC8wLvwLgCgvMC78C4AoLzAu9oA7wIA8gHvwrsAgPIC78K7lcbCwgI5
nc6S4c9c6B07AMUA78K7lcT3vvc9+rVf+zV66KGH6Ktf/Sr9xV/8Bf3lX/4l
2e12+qu/+iv62te+RuPj4/Q3f/M39Ld/+7f06KOP0te//nX67Gc/K/p10Dt+
AIoB3k2C62r6o9Rx393dRR13ULPAu/CuGsQiQQoEI2deDvfuzTffTM8++6wA
3gW1CLwL76pBxDtEhv7lMy+He7e9vZ2ee+65BKjjDmoNeLf+vBsNBykYijBv
RSmaq+YZGx5irgtFkvXWueeuXIlRmA0Pp84TDYtlhbyjZBryZi0rxv3I/kdC
6cvLh1LHnbs2FXgX1BLwrjZUqne33f3s98XI3GYSvzOjG5l1zyLk7DCS2dIh
xju3I2KY3WQgg9EohhkM3bQdleq0G9l7c4c0rcm+kbW+Dbu0HqPRIK1vIVgw
Pu7dW2+9VXg2lVAoBO+CmgHerSfvBqmfOdcTkt4vD5lo1Juv3mRMjB8S4yM0
wbw7JJwZJbvRTMsRXqfdQN0LITF9eHkoZ767YTdTh3MzMY3B5CxYb02p4/7S
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
YZavZvZ3LvVtHmMuY+9jEQruy3lqLEzBYCgxrVSHLUzRcJBCGXlvJBSk/WCK
kyNP0fVGe8K7vM78PltWWj/oOeDebW9vp+eeey4B6riDWgPerR7vbtrNZLa7
adTI6+mE5OGFvSvVSTOQfSGQGOYdMqbU5/FIddQiXlGHx2iUavuYuvupQ669
bhqV6ghtTkj1g43y8NGFIEn13k3Jeu/mCQpyt6Z4N7QwJOoEWcxmmtgonC8r
ddxfeOGFNOBdUEvAu9XiXV470khe5rSwp5v5zUVRMbywdzn7yxNSO4NplLYj
VxI1K4NXuMtNZHZui5qXJrmGWkzkyGbaEK/tiTrtvI5lh1y7MrzMXGpyUjR4
TuTTQbGuCNm5j7lbU7y7McpcbnEXrKumoNRxv3TpUhbwLqgV4F1tUNu7kQ27
lHuaO8hslOpbLoT4uJO9K4gFycnrYlrOUUyuTWxfXmYuN9FymI1n+a7ZJNVt
F+syTgivS+uVhqfWe4/wesTMx8+Leu8TCacmahOntjNEAzRhkfJo+3Kw4HZy
795+++0UDodzAu+CWgDerQbvRsllNlC/J0AR5p5IJESuDqVW+gntDNEIRaLS
a+FKnqOy10FPv5QDd3uk9lvuXaOU16a6Nprh3e5z+2JZQZ5zs3mldgoLBcT6
pPrydn7tTnh3VHhXqWUZXu5PLCvftnLv8n7PL1++nBd4F1Q78G4VeDfMa6R3
037KsOjmhHx+n+7d6zO8G9mU82STUeTITqV9NbpJ5tT7G+R8l3s3uu1kOazs
XT6//Fpp35WWZaaFfV6XOEreCYtYNr/mZxrySO0f3LvXSPnu5kRHYvyQZ7/g
tnLv8voRL7/8ckHgXVDNwLtV4N0zwnNefo4eTR0m2niVdtkiiUl5q6jPnrWO
KMur89/by2M46V4GDvfunXfeSa+++uqJwLugWoF3k1T2dTWVP3d3Pw2dC+ge
Rybcu3fffTcdHR2dyOuvvw7vgqoE3q1P71Yq3LsWi4Xi8XjRwLug2oB34d1K
gnv33nvvpePj45KAd0E1Ae/Cu5XE888/T+973/tEf2SlwHNk3k+Z3vEDUAzw
rjbAu6eH98vw7W9/u2ReeeUV3WMHoBjgXXgXAFBe4F14FwBQXuBdeBcAUF7g
3SS4rgYAKAfwLrwLACgv8C68CwAoL/AuvFtJ8D7Oed3K8+fPA1CR8Jqq8G5l
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
bnUD7+pPpXt3TvbuzrxNxNTuWBJuE+fvDU3UJPf/JYbn9G5pdYdy1yLi/fDI
NTyblPpCPXlqea6QVe4XZ3BqPsd4NeLx04AhpS2F7Y8msT8yaj2ntENI7Tby
Pkvpp2cmo6ZHU4u0fT0z+c8r4F0A79aydxvY+fk6rcxNUrtcY821LuVmK16l
vXRH6key1S7nd+nePU3doaxhcg2hhNtlz1ld3pyx++YdSbe1WGl6Jdm2q0o8
mb8tO3Nye3KT3D/7utQXu1KfTY6/qWcqUSt0zpbSn5u8Pal9vgUK9OED7wJ4
t1a925reZ2NDO016Uu5REOfWU+SwD0tOTtSSTHfSaeoOZQ7zz8l9SLZaaZAt
o69LqWtZoC3Bv0Q2azJXHZbvr1Ajnlze5W0bPdPrWfP4Lib7CE69trczPyzi
kPqf9FKfct7QZxP1mgt9NvAugHdr2bsN5JhfF/dipY7zs3yyQc7vrH091NqQ
6qVUJ52u7lCWd5W+e1v4/FbqYvRYu2iwiOta63N2Kfctqo7Q6b0r9fnuzzlP
rhpH6d5l+OZpsCv5O9EztQLvAni37ryb3r6bZIfs3CkNydo59pZ83j193aFc
3u2ZPuleitzYU3JPNeLJ711fYnwu7/Yk2kV2yNWXp46bf07qp71pMFl7Ht6t
KXBdTX8q3bvZ9cx3yNEu1QGa8izR3KRcq6Kph5YC2U4qve5QrmHrNNgk14uY
nmfD1ml+ZoqmZnK07zJvWdv7yDXHp/PR0rRNynfbHaJtVZ14iveu5E65didv
R+jpSdyTl/DuzhLZBm00x5bv4/dPGFLby+HdWgPe1Z9K9a5Ul6w1Z31HHzt3
T9QKamin4UHlXgPpXD7zPrJS6w7lGsbr+Qy2pt8v0JrruYUdT9YzEw2tg7SU
sh1njyd3+26y/Vb2bqstrR7RcFeruIeixWqnOddg8n4GFnN7WjytifrJ8G7t
Ae/qT6V690QC6XWBpDo7herilFZ3KOcwxo7fl3N49rrWxTEp5afaxVMsmfcn
TPfw35B2mk/5PdjZ2SG//+TnmuHd6gbe1Z+q9S4oAZYfi2uP7dTT10dd8r26
LcOneyYP3gXwLrwLTmZlboqG+3rEPRRd1j6anMt/vwK8C+BdeBdUFvAugHfh
XVBe4F0A78K7oLzAu9UNrqvpTyHvzs7OivEApPIrv/Ir8G4VA+/qD/8e5fMu
APmAd6sX/vnBu5Xn3cuXL9Njjz0GQF74cQPvVifwrv7k8i4AlQS8W7nAu/Au
qE3g3coF3oV3QW0C71Yu8C68C2oTeLdygXdPB+8HhfeHsre3B0BF8vjjj8O7
KoLravpzdHQkjkkAKpVLly7Bu/AuAKDKgHfhXQBAeYF34V0AQHmBd7UB3gUA
5APehXcBAOUF3oV3AQDlBd6FdwEA5QXeTYLragCAcgDvwrsAgPIC78K7AIDy
Au/CuwCA8gLvagO8CwDIB7wL7wIAygu8C+8CAMoLvAvvAgDKC7ybBNfVAADl
AN6FdwEA5QXehXcBAOUF3tXOu3y/XrhwAQAA0vinf/oneFcDXnzxRdrd3QUA
gJzwnFdvTwEAAAAAAAAAAADUEmpeVwMAAHAy8C4AAJQXeBcAAMoLvAsAAAAA
AAAAAACt+eEPf1iQN998M2360KKTegdGaGRkhMbGx2lsjL8eoIHxRYpXwPak
chxepYfGKi8uAEB943a76Stf+UpennnmmbTpD/bWaHFxldZWz5PVYKDO8Vn2
epEW1/bouOzxh2i8d5xCed7HL62Rw7UG7wIAdCHfdbXLly/nde6jjz5K/C/3
MuPkbDTQ2G5cen+0SyPMeXtxeXx8j8bY+2A8TmvOMXItnqeBtmZqbhug1eCR
NM3xAc2OWKmxsZlG3FsJb4d9brLyaZs76Xwwnnda33ib2K62TiuNnQ9mvT8O
M+8+siq8y3PfkbFZWp0do2a2jIEUH4e3Zsna3ExtvWPkdo7Q+GJQ988LAFD9
FLqf4cknn8zp3WCwkH+OaJx7d+tQfh+mAbaO3tWweB+a7SRDm5u57YiczQa2
/kaa9W3R+bFm9rqXgsfHdN5qoMaRVTo83BW58/gW8/HxHnWy105fiA6CW7QX
5t7NPW14y02NbLmutS0KHcaz3r++NcbWNUaHLJ6jXafYBwari3xrLvF69YD5
ODQrXjtZvh7aPU9t7HXz+JbunxcAoPop5N3Dw0PRXpvq3Mcee+yEZWZ69y0K
uplrm10sFz2iMYMyTplOyXF3qZm50XcUEp5uHhgnt9tFvWyaZucucX/zeQ2d
I7S6pyw7z7TxLbasZtpK5Njp71/fdbDtdtDrb3HvjrPXI3SQEvuI75BC53tF
zEruu+dspsYxeBcAcHZOun93YWEhzbsvvfTSCcvM9u5bh2tSvnmeO26AwmnT
ZXj3+9yRBrI6z9Pq4iItMnx7B9I08RDNjllFzFb3Hr11lGda2bO+I3n9Ge+z
vNs4TkdyTE459j1Xm8jLlTaO3XF4FwBQHt544w2y2WzCuTMzM0XMk8O7vD2g
1yB82cl9KU/H2xmss7vi/YFvXLQzhN6Kk6uN5a1ja4n54/Fj5mWWg4YlR3MH
Sm0VeaY98gnPrx4cS8Mz3mfnu9nejYv2h0aa3QrS7uKYiB3tDACAcrG6ukoP
PfQQHRwcFDF90l2pww99Y8Jja4fJ6bgzRduqjEuZ53BLtBkow9vktoO2xLSN
5Nw6yD8tW/Zsb2OK59PfC+9enT/fde5xvx/T1uwI8zXzbe84Odn8na69kvcd
AACchh/96Ef0r//6r2dahmjj7ZxNuadMyovHd/k1szjFj7PniR8dSflrYtix
NKyoafmwOB0f539fkOMjCh8obSBB6jXIsVbA5wEAACcjXf9ypnlLamcY36pQ
l8V3xf0TiTx65LycEwMAwNlAvziFOY7nzsUBAOC0wLsAAFBe4F0AACgv8C4A
AFQfvG+yp59+umrg92b8/d//ve5xFIvH4xH3TusdR7H84z/+I124cEH3OIrh
P/7jP8SxsLKyonssxcDv6eTx8rj1jqVYdnd3dXdULfLf//3faffhgvrmbW97
m+4xgMrh/e9/v+6OqkUU737pS1+iubm5iqe5uVnE+w//8A+6x1IMV111Fb3r
Xe/SPY5iecc73kEf+9jHdI+jGP76r/9aHAv333+/7rEUww033CDifeSRR3SP
pRg+8YlPwLsae5cfCxcvXqx4PvOZz4h4+TmQ3rEUw7vf/W769V//dd3jKJaf
/dmfpVtuuUX3OIrhn//5n8Wx8PDDD+seSzFYLBYRL28X0TuWYujo6IB3c8A/
Q3i3soF3tQPe1RZ4F95VgHe1Bd7VDni3NoB39Y/nJOBd7YB3tQXehXcV4F1t
gXe1A94F8G55gHe1A97VFngX3lWAd7UF3tUOeBfAu+UB3tUOeFdb4F14VwHe
1RZ4Vzvg3doA19X0j+ck4F3tgHe1Bd6FdxXgXW2Bd7UD3q0N4F394zkJeFc7
4F1tgXfhXQV4V1vgXe2AdwG8Wx7gXe2Ad7UF3oV3FeBdbYF3tQPeBfBueYB3
tQPe1RZ4F95VgHe1Bd7VDni3NsB1NbWW6ydbi4Fa7fOqx6uVdwO+FZpxuWjG
s0T+gHrLVd+7AVr3rpBnbo7WVYyTo6V3Azs7FFB5mfBubQDvqrVcPw03Gahh
cE71eDXxrm+aWgyt5JhyUCvbF0029X4v1PeujxxdvFZXF3lV3rfaeXeFuthy
W1T+HYZ3awN4V63lBsjGvNs07FE9Xi28u+MZJEOTXXof8JPPH1Bt2Vq0MyzZ
WsRn1tXeTjaPX7XlaufdAM3Yh8m1pF6sHHi3NqhM7/rJMz1FDsckTbHz4Kmp
KYnJKfKs75x5+ap6d2eF7IPDLNZhauL1U1v72Gsb2afV+15o086wLvKx1uFp
1c+F1fSub2WObD2Sc5u6hmnG46H5Ja9qMWvj3QDt+P207vWSb0e93zOOlt7d
WffSvGeeVtbV+62Ad7VDVe/6ZqidLctqn6a5qcGsmtD2+QrzLvOXzdpOVobk
hh7q6Wqnvskl1Y5d9b27Tg7usoYmEXO7yufC6nl3h6Ztw2S397A4m2hyZoq6
mqTjwKbCccDRwrve6eRx2+5Q7zjgaOHdHe+MaGviy+0ZtrL/DTTjV2fZ8G41
eHedevixOqkcU34aNKh/rUrLdoYWu7rfM4663l2nQd4O3eMS72f6Gph/B8mn
YrxqtzP4pnskj7UMk9c/LxzhWFEnj9Qm310SuUNTaxe51is73w2sTCZ+Ixwr
bNiKnb1uIc+OOvHCu5XvXb9nOOMzZ95tMFDXlLrnVPV8Xc030yftY/m+gLnB
pgr3boCmrJIXptlxEZjnx0grzat0X4MW3pWO4wZq7RpW/Tqgut7dIXt7CzWJ
c4hWstms4v+Uim3S8G4VeHeOnZ81DNOOMizgEW2mauU2Clp6t6nCvSs82zRM
fuU9z3fbJ1Vt41XVu4ElqR1aPueZ7mHxdrlUi1UL784N8jacFrLaZth+reB8
d2eeBnv6qJ3lNk3WYXLNzCe/eyoB7+amkq6rCe+m5GIunud0Tal+3aeevbvk
4O3QfVJ+65+hBv67tqROW6mCmt7dWbKLtt050d64Tn38ngabneyT6rQ9qe9d
+Thob6cuaxd19an3G8FR27vWpiZxDPRMr8v7e4qGVdq3HHi38r17cWeJ+vg5
T0sX9bDzn9aeqURepib17F1+3bKFtz1ae1ie00CDLq/q8arp3Xl7Kzse7FIe
tuORr/900bxK7Y9aeJc/P8OX2WJ1qNp+w1G7fXfe3pJo321gDm6x2mldxXjh
3Srwrozf5yO/yvffpFLP7buCgJ+87HvrU8ldmWj5nHDA71f1XFiT62qBHc2O
X03uI+P3b2v0nYN3q8e7WqOVd+2tBmq1VcdzE1qC/hm0A89NAHi3PMC72gHv
agu8C+8qwLvaAu9qB7wL4N3yAO9qB7yrLfAuvKsA72oLvKsd8G5tgOtq+sdz
EvCudsC72gLvwrsK8K62wLvaAe/WBvCu/vGcBLyrHfCutsC78K4CvKst8K52
wLsA3i0P8K52wLvaAu/CuwrwrrbAu9oB7wJ4tzzAu9oB72oLvAvvKsC72gLv
age8WxuocV2N71++nPe973304Q9/uOL5xV/8RakWWlOT7rEUw8/8zM8I9I6j
WN72trfRL/zCL+geRzE0NjaKY+E973mP7rEUwzvf+U4R7+/8zu/oHksx/PIv
/zK9613v0t1zlYYa3t3c3BTL+emf/umEIyoZ7gUer95xFIvSP6recRTLT/3U
T4l9rHccxfD2t7+9qo5dvm+r6Vjgx8HP//zP6+65SgP3kekfz0mgnUE70M6g
LWhngHcV4F1tgXe1A94F8G55gHe1A97VFngX3lWAd7UF3tUOeBfAu+UB3tUO
eFdb4F14VwHe1RZ4Vzvg3doA19X0j+ck4F3tgHe1Bd6FdxXgXW2Bd7UD3q0N
4F394zkJeFc7ivdugHZ2dmgnIP/PIkAr0w4attnJbufYyGabovWAuvHCu7UB
vKt/PCcB72pH8d5dp8Em6blBQ1Mrtba2UEtLC/vfSk0NfHgLPfwXDvKmzLM+
46DpdXXjhXcBvFse4F3tKKmdYd1FTWzaVpsnY5yPhpmTLV/8K1pPGb4+M0kz
8C68C+8K4F1tqVnvMlamrGJ627w/bfj69CD9Sf8E+VKG+T3wLrwL7yrAu9pS
y969eHGHHO28XcFKKxnj5h2DNGyfpEmHgxyTkzTc00czPnXjVdu7WrdJw7vw
rgK8qy217V3Gzhy18n5E+6azxgVSr7UFAqrHq7Z35+zatknDu7nBdTX94zkJ
eFc7TnsfmW+mT8xnX9opa7yqe9cxqWmbNLwL7yrAu9pSD971DLeQoWk4rT23
HKjv3SlN26ThXXhXQWvvbm1tqbo8eFc7TuNdKddtJc9O+eNV27tat0nDu/Cu
gtbenZiYUPX5J029u7NCjmGbfF2FYbPRlGf9TMusae+uu6ghZ/uCl77QcS99
udhrVKfc71rcz6BlmzS8qx316t0AO0bvvffenFx11VU0yfIHNeLV1LvrM2Sf
9qYM85LDPnOmZdaud1eoh01rnfJmjdvxDJPpU5/PcY3KTw5rK7W0topnLDgt
LVby/Nvp9jvuIwPaejdAfr+Pof51C7TvpsC865hJzbPW2Tnn3JmWWZve3aEp
q/S8Wh/LT23DwzQsYHntcJ94nuL/fOZLxV+jOuV+V8u7fP5PfepTOfnud7+r
2v6Fd6vHu/NTg+JczpCghewz2TnGaYF3U2Df/8m51GcA/PBuDnwzg3IN6oaU
41KhQRyvH7v1wRzXqHLku619tPRvp9vvanmXu3VpaSknzz77rGr7F96tDu/O
DDaJZTmWksfkunzPTpdjSZVjQU3vrs9Ps/NDBzkcqdhp0uWhgErH7lm9WzBG
v4cG+4ZpcpIP49dXhqnPpq93y7FPFdTsj6yka1Sn3O9oZ6gNKum6WmDJzvKG
VupqMVCDdZJ2xHAvDfL3La1sXBO5VLjHRU3vzvS10/D0PC3Nz9O8YIlWlqbZ
NgymnXOehbN698QYM/rYOqvbzurdcuxTBbX7gSzpGtUp9ju8WxtUknfnWK7b
YuM5rZd6Grh7B6mHOdfQaiM//z5am6hn2nfmY0FV7w5aaTorp/HRcNdw5Xi3
DDGmcmbvljFe9L+rLfBuFXi3r4X6lDYv/4y4VmEwtNOSPH7J3pXzWnKpwLvq
x5gKvKsd8G5tUFHeZfluu4N7dZ36eF+n7T1k5f+7HOIcbNraUCX57noVeFfd
GFPRxrtSvP+2Mk22lPtebTY7edZPf88pvKst8K52qNa+uzIprg2387aFdrt8
bXhFOLihtZWNa8rxfSwddb3bQzNZzy35K8y72seYytm9mz/eeX5PrDfFs+vT
ZJ8+/XMe8K62wLuV713O3HCrWNawJ5nXrrh6xDDrpDrHmprenetrIENTF1mt
XdTVJWHtaqWmFvWe3T+rd8sRYypn9W6heBcz74nNug+2NOBdbYF3q8O7nKVp
m9y2K9PQSo65sz27mgru39UWLe/f5c8izPlThvk98G4FA+9Wj3cVlHqBah8L
8K62aOldv8dBfcN26R5ZxyQ5hvvINnf6Nv969y76PdeHSrquVi7gXW3R+nm1
QEYd37Msq969i37P4d1yAe9qSy0+J1wpoN/z2gDe1T+ek4B3tUNL7wbWPeRg
5+/pzztzXKc+l0e/57UBvKt/PCcB72qHlt71TfdQS5+LVpaW5Oed52lpZZ5s
7e3kOuX9kOj3HMC75QHe1Q5NvTszSIMz2df85nI+F1Ic6PccwLvlAd7VDs29
m+OZjtzP4xUH7iMD8G55gHe1A97VFngX3lWAd7UF3pXwTfN2Bn/W8LnBnopp
39UaeDc3uK6mfzwnAe9qh7b3kQVEDb5cnHaZ8G5tAO/qH89JwLvaUe/372oN
vAvvKsC72gLvage8WxvAu/rHcxLwrnbAu9oC72qH4t2Ghgb60Ic+VPH80i/9
koj3Ax/4gO6xFMM73vEO4TK94yiWt7/97fTOd75T9ziKobGxURwL733ve3WP
pRiuuuoqEe9v//Zv6x5LMfDjAN7VhldeeYVuvPHGquEjH/kI/eqv/qrucRTL
7/7u79L73vc+3eMolt/8zd+kD37wg7rHUQx/+Id/KI6F6667TvdYioHHyeNt
a2vTPZZi+fznP6+7owAAAAAAAADlQ43ragAAAIoH3gUAgPIC7wIAQHmBdwEA
AAAAAAAAAAAAAAAAAAA4GVxXAwCA8gLvAgBAeYF3AQCgvMC7AAAAAAAAAAAA
AAAAUL28+eYx/e///kT3OAAoBn6s8mP2Jz/5CY5dUFUox+6PfvQjevJJH8Vi
V9hxTLrHBUAhlGOUH7Nf//oKjl1QNWQeu48+uizgw5A7gEqFH5vcscrxmooy
Xu8YAchFoWOXe5jnwHrHCEAu+LHJj1Ecu6DaKHTs8tyXt5kp0/J7e1PJXBbG
Y3w5x/NjM/X8rNCxW4nxY3z9juftuZnH7v8H115P+g==
     "], {{0., 0.}, {1., 1.}}, {0, 255},
     ColorFunction->RGBColor], {{{350., 0.}, {0., -774.}}, {0., 774.}}]},
  AspectRatio->Automatic,
  ImageSize->{255.67441860465118`, Automatic},
  PlotRange->{{0., 350.}, {0., 774.}}]], "Output",
 CellChangeTimes->{3.648223867811428*^9}]
}, Open  ]],

Cell["\<\
The DiracQ package contains a collection of commonly used quantum mechanical \
operators for which algebraic relations such as commutators, anticommutators, \
and products are known. The functions of the package recognize certain \
symbols as operators and use these algebraic relations to manipulate and \
evaluate user input. To avoid confusion the package requires explicit \
instructions from the user to view any certain symbol as an operator. By \
default no symbols are viewed as operators. This prevents users from making \
assumptions about the status of a symbol.

  The DiracQ palette contains a section titled \"Operator Controls\". The \
purpose of this section is to control how the functions of the package view a \
symbol. This section contains a list of the operators that are included for \
use in the package and the symbols used to represent them. For a symbol on \
this list to be viewed as an operator it must first be activated by the user. \
This is done by locating the desired symbol(s) in the subsection titled \
\"Active Operators\" and checking the box to the right of the symbol(s). The \
symbol should now populate the list of primary operators. Any additional \
secondary operators which are composites of the primary operators will be \
found in the list \"Secondary Operators\". Once a symbol is activated that \
symbol will be viewed as an operator, or \[OpenCurlyDoubleQuote]q\
\[CloseCurlyDoubleQuote] number, by all of the DiracQ functions. The symbol \
will also be given the special algebraic properties of the quantum mechanical \
operator to which it corresponds. The same symbol when inactivated will be \
viewed as a \[OpenCurlyDoubleQuote]c\[CloseCurlyDoubleQuote] number with no \
special algebraic properties.\
\>", "Text",
 CellChangeTimes->{{3.4929669928694563`*^9, 3.4929670043860273`*^9}, {
   3.492967151304242*^9, 3.49296753004604*^9}, {3.492967767122951*^9, 
   3.492968175000053*^9}, {3.492968295074183*^9, 3.492968304671041*^9}, {
   3.4929683388942003`*^9, 3.4929684140376253`*^9}, {3.492968466029028*^9, 
   3.492968498300932*^9}, {3.492968584524425*^9, 3.492968663244727*^9}, {
   3.492973332227153*^9, 3.492973372431972*^9}, {3.4934888516717253`*^9, 
   3.493488860005068*^9}, 3.5158648475*^9, {3.517397872213917*^9, 
   3.5173978934299603`*^9}, {3.567100608923603*^9, 3.567100611734823*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["DropQ",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.51656278875*^9, 
   3.516562790671875*^9}, {3.517773696359375*^9, 3.517773699890625*^9}, {
   3.517774102625*^9, 3.517774103203125*^9}, {3.51777419409375*^9, 
   3.5177741954375*^9}, {3.51777454415625*^9, 3.5177745448125*^9}}],

Cell["\<\
DropQ[expr,n] gives expr with the operators specified by n dropped. The \
specification of operators is identical to that used by the Drop function to \
specify which elements of a list to drop. The operators are specified by the \
order in which they appear in expr.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, 3.51656279875*^9, {3.517773897796875*^9, 
   3.5177739008125*^9}, {3.517774105921875*^9, 3.5177741065*^9}, {
   3.517774551453125*^9, 3.5177745575*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (p \
and q).
The notation used by DropQ is very similar to that used by the Mathematica \
function Drop.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, 3.51656444834375*^9, {3.517773916296875*^9, 
   3.517773933375*^9}, 3.527703006828964*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Drop"}]], "Input",
 CellChangeTimes->{{3.517774671609375*^9, 3.51777467353125*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Drop\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\) gives \!\(\*StyleBox[\\\"list\\\", \\\"TI\\\"]\) \
with its first \!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\) elements dropped. \
\\n\!\(\*RowBox[{\\\"Drop\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"-\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}]}], \\\"]\\\"}]\) gives \!\(\*StyleBox[\\\"list\\\", \\\"TI\\\"]\
\) with its last \!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\) elements dropped. \
\\n\!\(\*RowBox[{\\\"Drop\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\"}\\\"}]}], \\\"]\\\"}]\) gives \!\(\*StyleBox[\\\"list\\\", \\\"TI\\\"]\) \
with its \!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\)\!\(\*SuperscriptBox[\\\"\
\[Null]\\\", \\\"th\\\"]\) element dropped. \\n\!\(\*RowBox[{\\\"Drop\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) gives \
\!\(\*StyleBox[\\\"list\\\", \\\"TI\\\"]\) with elements \!\(\*StyleBox[\\\"m\
\\\", \\\"TI\\\"]\) through \!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\) dropped. \
\\n\!\(\*RowBox[{\\\"Drop\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\
\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) gives \
\!\(\*StyleBox[\\\"list\\\", \\\"TI\\\"]\) with elements \!\(\*StyleBox[\\\"m\
\\\", \\\"TI\\\"]\) through \!\(\*StyleBox[\\\"n\\\", \\\"TI\\\"]\) in steps \
of \!\(\*StyleBox[\\\"s\\\", \\\"TI\\\"]\) dropped. \\n\!\(\*RowBox[{\\\"Drop\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"seq\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"seq\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\) gives a nested list in which elements specified by \
\!\(\*SubscriptBox[StyleBox[\\\"seq\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\) have been dropped at level \!\(\*StyleBox[\\\"i\\\", \
\\\"TI\\\"]\) in \!\(\*StyleBox[\\\"list\\\", \\\"TI\\\"]\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Drop"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.648223867872768*^9},
 CellTags->"Info3648198667-2372840"]
}, Open  ]],

Cell["\<\
Therefore, the input below will drop the first operator in the expression.\
\>", "Text",
 CellChangeTimes->{{3.5177746781875*^9, 3.51777470428125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DropQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
      ")"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}]}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
  3.516564386109375*^9, 3.516564389921875*^9}, {3.516564451421875*^9, 
  3.516564456109375*^9}, {3.51777400996875*^9, 3.5177740889375*^9}, {
  3.51777412771875*^9, 3.517774145859375*^9}, {3.517774228640625*^9, 
  3.517774242890625*^9}, {3.51777471225*^9, 3.51777472396875*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "drop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot drop positions \[NoBreak]\\!\\(1\\)\[NoBreak] \
through \[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Drop/drop\\\", \
ButtonNote -> \\\"Drop::drop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223867936122*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "2"]}], ")"}], "**", 
   RowBox[{"{", "}"}], "**", 
   RowBox[{"{", "1", "}"}]}]}]], "Output",
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, 
   3.516564456796875*^9, 3.5165659195625*^9, 3.516643054765625*^9, {
   3.51777406365625*^9, 3.517774090203125*^9}, 3.5177741480625*^9, 
   3.517774244640625*^9, {3.5177747245625*^9, 3.517774736453125*^9}, 
   3.6482238679437017`*^9}]
}, Open  ]],

Cell["The input below will drop the first and second operators.", "Text",
 CellChangeTimes->{{3.517774744359375*^9, 3.5177747729375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DropQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
      ")"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}]}]}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.517774760171875*^9, 3.5177747674375*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Drop", "::", "drop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot drop positions \[NoBreak]\\!\\(1\\)\[NoBreak] \
through \[NoBreak]\\!\\(2\\)\[NoBreak] in \[NoBreak]\\!\\({}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Drop/drop\\\", \
ButtonNote -> \\\"Drop::drop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.648223867987771*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "2"]}], ")"}], "**", 
   RowBox[{"{", "}"}], "**", "2"}]}]], "Output",
 CellChangeTimes->{{3.5177747611875*^9, 3.51777476828125*^9}, 
   3.6482238679931383`*^9}]
}, Open  ]],

Cell[TextData[{
 "The assumption here is that the \[OpenCurlyDoubleQuote]All Symbols\
\[CloseCurlyDoubleQuote] option is not used in the pallette- but only  \
relevant symbols  are declared to be operators. In case \
\[OpenCurlyDoubleQuote]All Symbols\[CloseCurlyDoubleQuote] are activated in \
the Palette,  DropQ  will regard the prefactors (such as ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], ")"}]],
  CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
   3.516564386109375*^9, 3.516564389921875*^9}, {3.516564451421875*^9, 
   3.516564456109375*^9}, {3.51777400996875*^9, 3.5177740889375*^9}, {
   3.51777412771875*^9, 3.517774145859375*^9}, {3.517774228640625*^9, 
   3.517774242890625*^9}, {3.51777471225*^9, 3.51777472396875*^9}}],
 ") in this case to be operators too and give a correspondingly different \
output."
}], "Text",
 CellChangeTimes->{{3.51777424915625*^9, 3.5177743349375*^9}, {
  3.517774563484375*^9, 3.517774670234375*^9}, {3.527469519528062*^9, 
  3.527469609648896*^9}, {3.527691929030053*^9, 3.527691961235672*^9}},
 FontColor->GrayLevel[0]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluation", "Section",
 CellChangeTimes->{{3.51534757096875*^9, 3.515347574171875*^9}, {
  3.515864535609375*^9, 3.515864537265625*^9}, {3.51586491609375*^9, 
  3.515864917859375*^9}},
 FontSize->18],

Cell["\<\
Evaluation is an option for the Kronecker-\[Delta] function. If Evaluation is \
set to Identical the \[Delta] will evaluate to zero unless both arguments are \
indentical.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.5153475136875*^9, 3.51534752334375*^9}, {
  3.515864539875*^9, 3.51586457178125*^9}, {3.515864641859375*^9, 
  3.51586465353125*^9}, {3.515864930125*^9, 3.515864932359375*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515348437875*^9, 3.5153484644375*^9}, {
   3.515348541203125*^9, 3.515348542140625*^9}, {3.51534860625*^9, 
   3.5153486715625*^9}, {3.515348913640625*^9, 3.51534894071875*^9}, 
   3.515349110234375*^9, 3.51586282575*^9}],

Cell["\<\
The kronecker delta function by default does not evaluate two different \
symbols to be zero unless it knows the symbols to be numerically different.\
\>", "Text",
 CellChangeTimes->{{3.51586495625*^9, 3.51586499515625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"\[Delta]", "[", 
   RowBox[{"i", ",", "j"}], "]"}]}]], "Input",
 CellChangeTimes->{3.51534898675*^9, {3.515864948296875*^9, 3.51586495225*^9}}
  ],

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j"}], "]"}]], "Output",
 CellChangeTimes->{3.51586495284375*^9, 3.515865003734375*^9, 
  3.648223868034277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"i", ",", "j"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.515865005171875*^9, 3.515865051546875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5158650231875*^9, 3.515865052296875*^9}, 
   3.6482238683889647`*^9}]
}, Open  ]],

Cell["\<\
When evaluation is set to identical the kronecker delta will evaluate to zero \
unless the symbols are identical.\
\>", "Text",
 CellChangeTimes->{{3.51586505684375*^9, 3.515865090609375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j", ",", 
   RowBox[{"Evaluation", "->", "Identical"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51586509834375*^9, 3.515865116453125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.515865117015625*^9, 3.648223868434827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "i", ",", 
   RowBox[{"Evaluation", "->", "Identical"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.515865127203125*^9, 3.51586512725*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.515865127546875*^9, 3.648223868469431*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["f", "Section",
 CellChangeTimes->{
  3.515351949546875*^9, {3.515865176609375*^9, 3.515865177203125*^9}}],

Cell[TextData[{
 "f is the Fermionic annihilation operator. This operator requires one index \
denoting site, and a second optional index can be used to denote spin or \
species. Also included is the Fermionic number operator, represented by",
 StyleBox[" ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "f"], TraditionalForm]],
  FontColor->GrayLevel[0]],
 ". The argument scheme for the number operator is identical to that of the \
annihilation operator. For more information on site index see Site Index \
below."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
  3.51551621971875*^9, 3.515516245125*^9}, {3.515865178671875*^9, 
  3.515865205484375*^9}, {3.517077881392267*^9, 3.517077888422117*^9}, {
  3.517405117691688*^9, 3.517405135104188*^9}, {3.517408593338348*^9, 
  3.517408601178602*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551661784375*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]).
The f operator obeys the canonical anticommutation relation for fermions.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515865216625*^9, 3.51586522396875*^9}, 3.527703024457773*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f\[Dagger]", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
  3.515865235046875*^9, 3.515865243625*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"f", "[", "1", "]"}], " ", 
  RowBox[{"f\[Dagger]", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.5158652480625*^9, 3.515865253390625*^9}, 
   3.648223868517659*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["FullOrganize", "Section",
 CellChangeTimes->{
  3.515351949546875*^9, {3.515865176609375*^9, 3.515865177203125*^9}, {
   3.51586680915625*^9, 3.515866812*^9}}],

Cell["\<\
FullOrganize is an extension of the Organize function. FullOrganize \
incorporates Organize, OrganizeQ, and OrganizedProduct into one function. \
Therefore FullIOrganize takes an expression, organizes it into the DiracQ \
organized notation, orders the operators, and applies product rules to the \
list of operators. See Also: Organize, OrganizeQ, OrganizedProduct\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
  3.51551621971875*^9, 3.515516245125*^9}, {3.515865178671875*^9, 
  3.515865205484375*^9}, {3.51586681978125*^9, 3.515866962734375*^9}, {
  3.5159473879375*^9, 3.51594740884375*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551661784375*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]) and Bosonic Annhilation and Creation Operators (b and b\
\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515865216625*^9, 3.51586522396875*^9}, {3.515867009828125*^9, 
  3.515867021421875*^9}}],

Cell["\<\
The two examples below demonstrate the structure of expressions in DiracQ. \
The first example has no summations in it, three c-number prefactors (5 a c) \
and a pair of Fermi and a pair of Bose operators. Reading from right to left, \
these are arranged as shown with the q-numbers in the last bracket, the c \
numbers in the next bracket, the summed indices (null in this case) in the \
next bracket and the numerical coefficient in the first bracket.  The second \
example has three summed indices and a more complicated c-number part that \
are pulled out in the given format. Within the q-number bracket, there is a \
canonical ordering with Bosons to the left of Fermions etc.  ( If we do not \
activate the Fermion or Boson operators in the palette, the FullOrganize \
function will treat f and b as c-numbers as well. )\
\>", "Text",
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
  3.51551621971875*^9, 3.515516245125*^9}, {3.515865178671875*^9, 
  3.515865205484375*^9}, {3.51586681978125*^9, 3.515866962734375*^9}, {
  3.5159473879375*^9, 3.51594740884375*^9}, {3.517078204488986*^9, 
  3.517078407057035*^9}, {3.517078455761269*^9, 3.517078588892911*^9}, {
  3.517338348375*^9, 3.5173383854375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullOrganize", "[", 
  RowBox[{"5", " ", "a", " ", "c", " ", 
   RowBox[{
    RowBox[{"f", "[", "i", "]"}], "**", 
    RowBox[{"b", "[", "i", "]"}], "**", 
    RowBox[{"f", "[", "j", "]"}], "**", 
    RowBox[{"b", "[", "k", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5170779940463457`*^9, 3.51707803032565*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"5", ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "c", " ", 
      RowBox[{"b", "[", "i", "]"}], " ", 
      RowBox[{"b", "[", "k", "]"}], " ", 
      RowBox[{"f", "[", "i", "]"}], " ", 
      RowBox[{"f", "[", "j", "]"}]}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.517077995216106*^9, 3.5170780311620293`*^9}, 
   3.648223868548188*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullOrganize", "[", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "k"], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], " ", 
     RowBox[{"5", " ", "a", " ", "c", "  ", 
      RowBox[{"u", "[", 
       RowBox[{"i", ",", "j", ",", "k"}], "]"}], 
      RowBox[{
       RowBox[{"f", "[", "i", "]"}], "**", 
       RowBox[{"b", "[", "i", "]"}], "**", 
       RowBox[{"f", "[", "j", "]"}], "**", 
       RowBox[{"b", "[", "k", "]"}]}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5170779940463457`*^9, 3.51707803032565*^9}, {
  3.517078095542749*^9, 3.517078140185553*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"5", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "c", " ", 
      RowBox[{"b", "[", "i", "]"}], " ", 
      RowBox[{"b", "[", "k", "]"}], " ", 
      RowBox[{"f", "[", "i", "]"}], " ", 
      RowBox[{"f", "[", "j", "]"}], " ", 
      RowBox[{"u", "[", 
       RowBox[{"i", ",", "j", ",", "k"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.517077995216106*^9, 3.5170780311620293`*^9}, {
   3.517078132296774*^9, 3.517078141927474*^9}, 3.6482238687270803`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["function", "Section",
 CellChangeTimes->{
  3.515351949546875*^9, {3.515865176609375*^9, 3.515865177203125*^9}, {
   3.51586680915625*^9, 3.515866812*^9}, {3.5159475525625*^9, 
   3.515947554109375*^9}}],

Cell[TextData[{
 "function is a label used by the Organize function to denote a function of \
operators that can not be decomposed simply into polynomials. The first \
argument is the function, and the second argument is the operators on which \
the function depends. This function is not intended to be manipulated by the \
user ",
 StyleBox["but is used in certain internal computations. The first argument \
of function is the function containing an operator, and the second argument \
are the operators of which that functiond depends. In general DiracQ does not \
know the algebraic properties of non-polynomial function of operators. The \
user can input algebraic properties of functions if necessary using the same \
methods as inputing algebraic properties of user created operators.",
  FontColor->GrayLevel[0]]
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
  3.51551621971875*^9, 3.515516245125*^9}, {3.515865178671875*^9, 
  3.515865205484375*^9}, {3.51586681978125*^9, 3.515866962734375*^9}, {
  3.5159473879375*^9, 3.51594740884375*^9}, {3.5159475629375*^9, 
  3.51594756878125*^9}, {3.517078647361444*^9, 3.51707865136504*^9}, {
  3.517078867032176*^9, 3.517078886941804*^9}, {3.517338463515625*^9, 
  3.517338463875*^9}, {3.517845885859375*^9, 3.517846014890625*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551661784375*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]) and Bosonic Annhilation and Creation Operators (b and b\
\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515865216625*^9, 3.51586522396875*^9}, {3.515867009828125*^9, 
  3.515867021421875*^9}}],

Cell["\<\
The example below shows that the power function of f\[Dagger][i] below is \
recognized to contain an operator, and is therefore organized as an operator \
using the function notation.\
\>", "Text",
 CellChangeTimes->{{3.5178460673125*^9, 3.517846096265625*^9}, {
  3.5178461525625*^9, 3.517846172625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Organize", "[", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"f\[Dagger]", "[", "i", "]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
  3.515865235046875*^9, 3.515865243625*^9}, {3.515867035296875*^9, 
  3.51586705959375*^9}, {3.5159478541875*^9, 3.515947879921875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"f\[Dagger]", "[", "i", "]"}]], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.5158652480625*^9, 3.515865253390625*^9}, {
   3.515867060765625*^9, 3.51586706746875*^9}, 3.515947887171875*^9, 
   3.517846179953125*^9, 3.648223868768743*^9}]
}, Open  ]],

Cell["\<\
DiracQ does not know what the commutator of this function of f\[Dagger][i] \
and other fermionic operators is.\
\>", "Text",
 CellChangeTimes->{{3.517846099046875*^9, 3.517846127125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"f\[Dagger]", "[", "i", "]"}]], ",", 
   RowBox[{"f", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517846182578125*^9, 3.5178461935*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6482238688188562`*^9}]
}, Open  ]],

Cell["\<\
We are able to teach DiracQ how to perform this commutator by using the \
CommutatorDefinition function, as shown below.\
\>", "Text",
 CellChangeTimes->{{3.51784636621875*^9, 3.51784640678125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CommutatorDefinition", "[", 
   RowBox[{
    RowBox[{"function", "[", 
     RowBox[{"a_", ",", 
      RowBox[{"{", 
       RowBox[{"f\[Dagger]", "[", "i_", "]"}], "}"}]}], "]"}], ",", 
    RowBox[{"f", "[", "j_", "]"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"a", "**", 
    RowBox[{"f", "[", "j", "]"}]}], "-", 
   RowBox[{
    RowBox[{"f", "[", "j", "]"}], "**", "a"}]}]}]], "Input",
 CellChangeTimes->{{3.517846237203125*^9, 3.517846350609375*^9}, {
  3.517846431609375*^9, 3.517846438859375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"f\[Dagger]", "[", "i", "]"}]], ",", 
   RowBox[{"f", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517846182578125*^9, 3.5178461935*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51784636075*^9, 3.517846442484375*^9, 
  3.6482238688857527`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["f\[Dagger]", "Section",
 CellChangeTimes->{{3.515516436953125*^9, 3.515516439828125*^9}, {
  3.516380283171875*^9, 3.51638028325*^9}}],

Cell[TextData[{
 "f\[Dagger] is the  Fermionic creation operator. This operator requires one \
index denoting site, and a second optional index can be used to denote spin. \
Also included is the Fermionic number operator, represented by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "f"], TraditionalForm]]],
 ". The argument scheme for the number operator is identical to that of the \
annihilation operator. For more information on site index see Site Index in \
the DiracQ Glossary. The dagger symbol is created by entering \[EscapeKey]dg\
\[EscapeKey] or clicking the appropriate button on the DiracQ palette."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
  3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
  3.51551652434375*^9}, {3.516380287*^9, 3.516380290109375*^9}, {
  3.517408618942222*^9, 3.517408652389958*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.5155166190625*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]).
The f\[Dagger] operator obeys the canonical anticommutation relation for \
fermions\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.516380297859375*^9, 3.516380303859375*^9}, 3.527703067455399*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f\[Dagger]", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
  3.51638032175*^9, 3.516380331234375*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"f", "[", "1", "]"}], " ", 
  RowBox[{"f\[Dagger]", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.516380326921875*^9, 3.516380336265625*^9}, 
   3.648223868924429*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Humanize", "Section",
 CellChangeTimes->{{3.515516436953125*^9, 3.515516439828125*^9}, {
  3.516380283171875*^9, 3.51638028325*^9}, {3.516380366984375*^9, 
  3.51638037240625*^9}}],

Cell[TextData[Cell[BoxData[
 StyleBox[
  RowBox[{
  "Humanize", " ", "is", " ", "the", " ", "functional", " ", "opposite", " ", 
   "of", " ", 
   RowBox[{"Organize", ".", " ", "Humanize"}], " ", "takes", " ", "a", " ", 
   "nested", " ", "list", " ", "of", " ", "terms", " ", "organized", " ", 
   "according", " ", "to", " ", "the", " ", "method", " ", "of", " ", "the", 
   " ", "package", " ", "and", " ", "yields", " ", "output", " ", "of", " ", 
   "familiar", " ", "mathematical", " ", 
   RowBox[{"forms", ".", " ", "Humanize"}], " ", "only", " ", "reconizes", 
   " ", "input", " ", "that", " ", "is", " ", "in", " ", "the", " ", "format",
    " ", "of", " ", "the", " ", "output", " ", "of", " ", "the", " ", 
   "Organize", " ", 
   RowBox[{"function", ".", " ", "For"}], " ", "more", " ", "information", 
   " ", "on", " ", "the", " ", "organization", " ", "system", " ", "of", " ", 
   "the", " ", "package", " ", "see", " ", "Organize"}], "MSG"]],
 CellChangeTimes->{{3.516380353265625*^9, 3.516380355078125*^9}}]], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, {3.516380287*^9, 3.516380290109375*^9}, 
   3.51638037884375*^9, {3.516380514140625*^9, 3.516380557828125*^9}, {
   3.5174052265900183`*^9, 3.517405230026081*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.5155166190625*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.516380297859375*^9, 3.516380303859375*^9}}],

Cell["\<\
The Organize function decomposes an expression containing a variety of terms \
and algebraic forms and converts it into a nested list. The Organize function \
is used by a majority of the DiracQ functions to convert input into a form \
that can be easily manipulated.\
\>", "Text",
 CellChangeTimes->{{3.51638080015625*^9, 3.516380860984375*^9}, {
  3.516380918890625*^9, 3.516380957234375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Organize", "[", 
  RowBox[{
   RowBox[{"2", " ", "a", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{"f", "[", "i", "]"}]}]}], "+", 
   RowBox[{"3", " ", "b", " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{"f\[Dagger]", "[", "j", "]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
  3.51638032175*^9, 3.516380331234375*^9}, {3.516380769765625*^9, 
  3.516380787046875*^9}, {3.516380872671875*^9, 3.516380899484375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", "i", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", " ", 
       RowBox[{"f", "[", "i", "]"}]}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", "j", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", " ", 
       RowBox[{"f\[Dagger]", "[", "j", "]"}]}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.516380326921875*^9, 3.516380336265625*^9}, {
   3.516380789203125*^9, 3.51638079384375*^9}, 3.516380900984375*^9, 
   3.648223868983828*^9}]
}, Open  ]],

Cell["\<\
Humanize is used to return the nested list structure used to manipulate \
expressions to standard mathematical forms.\
\>", "Text",
 CellChangeTimes->{{3.5163809159375*^9, 3.516380916859375*^9}, {
  3.516380963328125*^9, 3.51638096434375*^9}, {3.51638153728125*^9, 
  3.51638158875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Humanize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.516380796859375*^9, 3.51638079821875*^9}, {
  3.51638090759375*^9, 3.516380911578125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{"a", " ", 
     RowBox[{"f", "[", "i", "]"}]}]}]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "j"], 
    RowBox[{"b", " ", 
     RowBox[{"f\[Dagger]", "[", "j", "]"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.516380912*^9, 3.648223869061102*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Identical", "Section",
 CellChangeTimes->{{3.515516436953125*^9, 3.515516439828125*^9}, {
  3.516380283171875*^9, 3.51638028325*^9}, {3.516380366984375*^9, 
  3.51638037240625*^9}, {3.516381634765625*^9, 3.516381635875*^9}}],

Cell[TextData[Cell[BoxData[
 StyleBox[
  RowBox[{
  "Identical", " ", "is", " ", "an", " ", "option", " ", "setting", " ", 
   "for", " ", "the", " ", "Kronecker", " ", "\[Delta]", " ", "option", " ", 
   RowBox[{"Evaluation", ".", "If"}], " ", "Evaluation", " ", "is", " ", 
   "set", " ", "to", " ", "Identical", " ", "the", " ", "\[Delta]", " ", 
   "will", " ", "evaluate", " ", "to", " ", "zero", " ", "unless", " ", 
   "both", " ", "arguments", " ", "are", " ", 
   RowBox[{"indentical", ".", " ", "From"}], " ", "more", " ", "information", 
   " ", "on", " ", "the", " ", "Kronecker", " ", "\[Delta]", " ", "see", " ", 
   "\[Delta]"}], "MSG"]],
 CellChangeTimes->{{3.516380353265625*^9, 3.516380355078125*^9}}]], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, {3.516380287*^9, 3.516380290109375*^9}, 
   3.51638037884375*^9, {3.516380514140625*^9, 3.516380557828125*^9}, {
   3.516381640578125*^9, 3.516381645265625*^9}, {3.516381753578125*^9, 
   3.516381784765625*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.5155166190625*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]).
The Kronecker \[Delta] will only evaluate to zero if two symbols are known to \
be numerically different.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.516380297859375*^9, 3.516380303859375*^9}, 3.527703114763523*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
   3.51638032175*^9, 3.516380331234375*^9}, {3.516380769765625*^9, 
   3.516380787046875*^9}, {3.516380872671875*^9, 3.516380899484375*^9}, 
   3.516381791984375*^9, {3.516381906265625*^9, 3.51638191075*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.516380326921875*^9, 3.516380336265625*^9}, {
   3.516380789203125*^9, 3.51638079384375*^9}, 3.516380900984375*^9, 
   3.516381911640625*^9, 3.648223869140046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j"}], "]"}]], "Input",
 CellChangeTimes->{{3.516381912828125*^9, 3.516381917109375*^9}}],

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j"}], "]"}]], "Output",
 CellChangeTimes->{3.5163819178125*^9, 3.6482238691921883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"i", ",", "j"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.517079302840212*^9, {3.517079348899015*^9, 3.517079368336362*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.648223869242169*^9}]
}, Open  ]],

Cell["\<\
The option Evaluation allows users to specify that unless two symbols are \
identical the Kronecker \[Delta] should evaluate to zero.\
\>", "Text",
 CellChangeTimes->{{3.5163819495*^9, 3.516382014578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j", ",", " ", 
   RowBox[{"Evaluation", "\[Rule]", "Identical"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51638201740625*^9, 3.51638203046875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.516382030984375*^9, 3.648223869291411*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["J", "Section",
 CellChangeTimes->{{3.515516436953125*^9, 3.515516439828125*^9}, {
   3.516380283171875*^9, 3.51638028325*^9}, {3.516380366984375*^9, 
   3.51638037240625*^9}, {3.516381634765625*^9, 3.516381635875*^9}, 
   3.516382161046875*^9}],

Cell[TextData[{
 "J is the canonical angular momentum  operator. This operator requires at \
least two arguments. The first is site index and the second is coordinate \
direction. An optional third argument is used to denote different  species. \
Also included are the angular  raising and lowering operators, denoted by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["J", "Plus"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["J", "Minus"], TraditionalForm]]],
 " respectively. The raising and lowering operators accept only  one argument \
corresponding to site, and if provided, a second argument  taken to represent \
 species. For more information on site index see Site Index. The action of \
the angular momentum operators on standard basis states will be implemented \
later, for now only their commutation rules are available."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, {3.516380287*^9, 3.516380290109375*^9}, 
   3.51638037884375*^9, {3.516380514140625*^9, 3.516380557828125*^9}, {
   3.516381640578125*^9, 3.516381645265625*^9}, {3.516381753578125*^9, 
   3.516381784765625*^9}, 3.516382167125*^9, {3.51638228634375*^9, 
   3.51638233*^9}, {3.5163823836875*^9, 3.51638239984375*^9}, {
   3.517079587380044*^9, 3.51707958973696*^9}, {3.517079643324334*^9, 
   3.517079671244533*^9}, {3.517405305984214*^9, 3.517405483034903*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.5155166190625*^9}],

Cell["\<\
In the DiracQ Palette activate the Canonical angular momentum operator (J).
The J operator obeys the canonical commutation relations for angular momentum \
operators\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.516380297859375*^9, 3.516380303859375*^9}, {3.516382408109375*^9, 
   3.516382432328125*^9}, {3.516382462390625*^9, 3.516382462890625*^9}, {
   3.517405502467031*^9, 3.517405541748439*^9}, 3.527703126034584*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"J", "[", 
    RowBox[{"j", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516382333625*^9, 3.516382340703125*^9}, {
  3.516382435421875*^9, 3.516382452296875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5163823410625*^9, 3.5163824528125*^9, 
  3.648223869341947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "z"}], "]"}], ",", 
   RowBox[{"J", "[", 
    RowBox[{"j", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516382530359375*^9, 3.51638254903125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.516382549640625*^9, 3.648223869401637*^9}]
}, Open  ]],

Cell["\<\
The third argument will be taken to represent  species. In the following \
example we take the commutator of two angular momentum operators that act on \
different  species, represented by g and h.\
\>", "Text",
 CellChangeTimes->{{3.51638257215625*^9, 3.516382640328125*^9}, {
  3.516382691203125*^9, 3.516382695671875*^9}, {3.517405551224276*^9, 
  3.517405565070538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "x", ",", "g"}], "]"}], ",", 
   RowBox[{"J", "[", 
    RowBox[{"j", ",", "y", ",", "h"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516382672578125*^9, 3.51638268459375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.51638267628125*^9, 3.516382701375*^9}, 
   3.6482238694493093`*^9}]
}, Open  ]],

Cell["\<\
Using the angular momentum raising and lowering operators the first argument \
is taken to be site index, and the second argument is used to denote \
different  species.\
\>", "Text",
 CellChangeTimes->{{3.517338497390625*^9, 3.5173385305*^9}, {
  3.5174055744665127`*^9, 3.5174055865915203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["J", "Plus"], "[", 
    RowBox[{"i", ",", "a"}], "]"}], ",", 
   RowBox[{
    SuperscriptBox["J", "Minus"], "[", 
    RowBox[{"j", ",", "b"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.517338494140625*^9, 3.6482238694890347`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ket", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
  3.51638273184375*^9, 3.5163827321875*^9}}],

Cell["Ket[x] represents a ket vector |x> using Dirac notation", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.517408689369022*^9, 3.5174086916049547`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]) and Bra and Ket Vectors.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Ket", "[", "A", "]"}], "=", 
  RowBox[{
   RowBox[{"f\[Dagger]", "[", "1", "]"}], "**", 
   RowBox[{"Ket", "[", "Vacuum", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
  3.5155169773125*^9, 3.515517036421875*^9}, {3.516382745328125*^9, 
  3.516382777375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f\[Dagger]", "[", "1", "]"}], "**", 
  TemplateBox[{"Vacuum"},
   "Ket"]}]], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.515517005828125*^9, 3.5155170369375*^9}, {
   3.516382766140625*^9, 3.5163827781875*^9}, 3.5164746452317157`*^9, 
   3.5164747223264523`*^9, 3.516474922157135*^9, 3.6482238695212507`*^9}]
}, Open  ]],

Cell["\<\
In the calculation below we use the important function ProductQ that is \
described more fully  below. This function uses all the non commutative \
properties supplied by the user and implements them to give an easily \
readable and correct final result. In this calculation, the \
\[OpenCurlyDoubleQuote]f\[CloseCurlyDoubleQuote] fermion at site 1 that is \
present in Ket[A] is destroyed by f[1] acting to its left.\
\>", "Text",
 CellChangeTimes->{{3.517338593875*^9, 3.51733860571875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"Ket", "[", "A", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.515517029765625*^9, 3.5155170931875*^9}, {
  3.5164746513099184`*^9, 3.516474652841188*^9}, {3.5164747126075783`*^9, 
  3.5164747182639008`*^9}, {3.5164747527018414`*^9, 3.516474761139449*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.515517033609375*^9, 3.515517093640625*^9}, 
   3.5164746476379967`*^9, {3.516474718701406*^9, 3.516474723763971*^9}, {
   3.516474753951857*^9, 3.5164747618894587`*^9}, 3.5164749229696455`*^9, 
   3.51647505850263*^9, 3.648223869586234*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["n", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9}],

Cell[TextData[{
 "n is the number operator. To specify the number operator for bosons use ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "b"], TraditionalForm]]],
 " and for fermions use ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "f"], TraditionalForm]]],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]) and Bosonic Annhilation and Creation Operators (b and b\
\[Dagger])\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["n", "f"], "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.5155162576875*^9, 3.515516274171875*^9}, {
  3.5155169773125*^9, 3.515517036421875*^9}, {3.516382745328125*^9, 
  3.516382777375*^9}, {3.5164752284423056`*^9, 3.5164752350517654`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f\[Dagger]", "[", "a", "]"}], "**", 
  RowBox[{"f", "[", "a", "]"}]}]], "Output",
 CellChangeTimes->{
  3.515516275046875*^9, {3.515517005828125*^9, 3.5155170369375*^9}, {
   3.516382766140625*^9, 3.5163827781875*^9}, 3.5164746452317157`*^9, 
   3.5164747223264523`*^9, 3.516474922157135*^9, 3.516475235614272*^9, 
   3.6482238696290092`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["n", "b"], "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.515517029765625*^9, 3.5155170931875*^9}, {
  3.5164746513099184`*^9, 3.516474652841188*^9}, {3.5164747126075783`*^9, 
  3.5164747182639008`*^9}, {3.5164747527018414`*^9, 3.516474761139449*^9}, {
  3.516475263239626*^9, 3.5164752722241163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b\[Dagger]", "[", "a", "]"}], "**", 
  RowBox[{"b", "[", "a", "]"}]}]], "Output",
 CellChangeTimes->{{3.515517033609375*^9, 3.515517093640625*^9}, 
   3.5164746476379967`*^9, {3.516474718701406*^9, 3.516474723763971*^9}, {
   3.516474753951857*^9, 3.5164747618894587`*^9}, 3.5164749229696455`*^9, 
   3.51647505850263*^9, 3.516475272552245*^9, 3.648223869679434*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["n", "b"], "[", "a", "]"}], ",", 
   RowBox[{"b\[Dagger]", "[", "a", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5164752770210524`*^9, 3.516475295396288*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5164752886774516`*^9, 3.5164752960056705`*^9}, 
   3.648223869728168*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["NCcross",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.527172515944523*^9, 3.527172522771186*^9}, {
   3.5274697377496233`*^9, 3.527469737941743*^9}}],

Cell[BoxData[
 StyleBox["\<\"Non Commutative cross product of two 3dimensional vectors \
retaining the order of the operators.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5274697429810953`*^9},
 CellTags->"Info3527444542-7055344"],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell[TextData[{
 "As an example consider the orbital angular momentum operator ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["L", "\[RightVector]"], TraditionalForm]]],
 "  and a further cross product with the position vector ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]]],
 ". Note that ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "\[RightVector]"], TraditionalForm]],
  CellChangeTimes->{{3.527694226917555*^9, 3.5276942269194202`*^9}, {
   3.5276943032503033`*^9, 3.527694315027096*^9}}],
 " need to be specified with an argument, arbitrarily chosen here to be i."
}], "Text",
 CellChangeTimes->{{3.527692028746903*^9, 3.5276920676947117`*^9}, {
   3.52769211524186*^9, 3.5276922669563503`*^9}, {3.527692512219768*^9, 
   3.527692525079916*^9}, {3.527694132053706*^9, 3.5276942197033777`*^9}, 
   3.5276943952634563`*^9, {3.527703309722287*^9, 3.527703369052785*^9}, {
   3.5532577957646427`*^9, 3.553257909691427*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["L", "\[RightVector]"], "=", 
  RowBox[{"NCcross", "[", 
   RowBox[{
    RowBox[{
     OverscriptBox["q", "\[RightVector]"], "[", "i", "]"}], ",", 
    RowBox[{
     OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.527694335049178*^9, 3.527694356562634*^9}, {
  3.553255759491473*^9, 3.5532557596596813`*^9}, {3.553257645760289*^9, 
  3.553257657334044*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "x"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"1", ",", "z"}], "]"}]}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5276943574507847`*^9, 3.553255760111664*^9, 
  3.553257626924748*^9, 3.553257658324256*^9, 3.553257912276239*^9, 
  3.648223869801962*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v1", "=", 
  RowBox[{"NCcross", "[", 
   RowBox[{
    RowBox[{
     OverscriptBox["q", "\[RightVector]"], "[", "i", "]"}], ",", 
    OverscriptBox["L", "\[RightVector]"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5276922740313683`*^9, 3.527692346722972*^9}, {
  3.5276924514848013`*^9, 3.527692509083839*^9}, {3.527694375847547*^9, 
  3.527694384350206*^9}, {3.55325576833193*^9, 3.5532557694273148`*^9}, {
  3.553257666799622*^9, 3.553257668527532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"1", ",", "y"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"1", ",", "x"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"1", ",", "x"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"1", ",", "z"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "x"}], "]"}], "**", 
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"q", "[", 
          RowBox[{"1", ",", "y"}], "]"}], "**", 
         RowBox[{"p", "[", 
          RowBox[{"1", ",", "x"}], "]"}]}]}], ")"}]}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"1", ",", "z"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"1", ",", "y"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "z"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"1", ",", "x"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"1", ",", "z"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"q", "[", 
         RowBox[{"1", ",", "z"}], "]"}], "**", 
        RowBox[{"p", "[", 
         RowBox[{"1", ",", "y"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "z"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.527692479014678*^9, 3.5276925014560413`*^9}, 
   3.527694385221098*^9, {3.553255762404763*^9, 3.553255769952032*^9}, {
   3.553257663837254*^9, 3.553257669842657*^9}, 3.5532579140973043`*^9, 
   3.648223869846644*^9}]
}, Open  ]],

Cell[TextData[{
 "Here we see that the non commutative nature is redundant in defining ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox["L", "\[RightVector]"], " ", "as", " ", "such"}], ",", " ", 
    RowBox[{"since", " ", "the", " ", "canonical", " ", "pairs", " ", 
     RowBox[{"q", "[", "x", "]"}], " ", "and", " ", 
     RowBox[{"p", "[", "x", "]"}], " ", "are", " ", "kept", " ", "away"}]}], 
   TraditionalForm]]],
 " from each other already. However, in the next cross product, it is \
relevant since the canonical pairs are no longer separated. This function is \
used in the Runge Lenz vector definition as an example. \nFurther note: if \
one wants a neater answer with negative signs pulled out, we can map the \
DiracQ function SimplifyQ to each component of the output."
}], "Text",
 CellChangeTimes->{{3.527693315882999*^9, 3.527693627804246*^9}, {
  3.553257919517158*^9, 3.553257973379382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyQ", "/@", "v1"}]], "Input",
 CellChangeTimes->{{3.553257727077162*^9, 3.55325776943712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "y"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "y"}], "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "z"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "z"}], "]"}], "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"p", "[", 
       RowBox[{"1", ",", "y"}], "]"}]}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "x"}], "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "z"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "y"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "z"}], "]"}], "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"p", "[", 
       RowBox[{"1", ",", "z"}], "]"}]}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "x"}], "]"}], "2"]}], "-", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "z"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"q", "[", 
       RowBox[{"1", ",", "y"}], "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "x"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"1", ",", "y"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "y"}], "]"}], " ", 
     RowBox[{"q", "[", 
      RowBox[{"1", ",", "z"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.553257748345942*^9, 3.5532577699783173`*^9}, 
   3.553257975439399*^9, 3.648223869897046*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["OperatorProduct", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9}],

Cell["\<\
OperatorProduct is the function through which the products of symbols are \
defined. OperatorProduct is used only when creating additional operators. For \
examples of the usage of OperatorProduct see \
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"AddOperator", "[", "\[Theta]", "]"}]}]], "Input",
 CellChangeTimes->{3.51534898675*^9}],

Cell[BoxData["\<\"Please enter all neccessary basic commutation and \
anticommutation relations. For help type ?AddOperator\"\>"], "Print",
 CellChangeTimes->{
  3.51534898825*^9, 3.51535115475*^9, {3.5158644938125*^9, 
   3.5158645073125*^9}, 3.516475528477396*^9, {3.5164756800887117`*^9, 
   3.516475693620135*^9}, 3.5165525179375*^9, 3.516554693890625*^9, 
   3.51655481565625*^9, 3.516557162*^9, 3.516557725*^9, 3.516557787796875*^9, 
   3.516557848328125*^9, 3.5165579635*^9, 3.516558044375*^9, {
   3.51655819571875*^9, 3.516558221109375*^9}, 3.516558492921875*^9, 
   3.648223869936348*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Operators"], "Input",
 CellChangeTimes->{{3.5164756845262685`*^9, 3.5164756855575314`*^9}}],

Cell[BoxData[
 RowBox[{"{", "\[Theta]", "}"}]], "Output",
 CellChangeTimes->{{3.516475685963787*^9, 3.5164756951670294`*^9}, 
   3.516552518640625*^9, 3.51655259921875*^9, 3.516552740984375*^9, 
   3.516554694953125*^9, 3.516554816265625*^9, 3.51655487175*^9, 
   3.51655716275*^9, 3.516558193109375*^9, 3.5165584941875*^9, 
   3.6482238699698477`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OperatorProduct", "[", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "i_", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "j_", "]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Delta]", "[", 
       RowBox[{"i", ",", "j"}], "]"}]}], ")"}], 
    RowBox[{"\[Theta]", "[", "i", "]"}]}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.51534894678125*^9, 3.515348995015625*^9}, {
  3.51534904640625*^9, 3.51534909640625*^9}, {3.516475534477473*^9, 
  3.516475576743639*^9}, {3.51655490034375*^9, 3.516554900515625*^9}, {
  3.516558216875*^9, 3.516558217140625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"\[Theta]", "[", "i", "]"}], ",", 
   RowBox[{"\[Theta]", "[", "j", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516558500203125*^9, 3.516558512953125*^9}}],

Cell[BoxData[
 RowBox[{"\[Theta]", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.51655851328125*^9, 3.64822387001757*^9}]
}, Open  ]],

Cell["\<\
Any type of OperatorProduct rule or operator symbol can be used.\
\>", "Text",
 CellChangeTimes->{{3.517338656375*^9, 3.517338694328125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddOperator", "[", "u", "]"}]], "Input",
 CellChangeTimes->{{3.517082665188653*^9, 3.517082666043427*^9}, {
  3.517082787207583*^9, 3.517082787791547*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData["\<\"Please enter all neccessary basic commutation and \
anticommutation relations. For help type ?AddOperator\"\>"], "Print",
 CellChangeTimes->{3.517082708121395*^9, 3.5170828127063828`*^9, 
  3.517338678953125*^9, 3.648223870052603*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"OperatorProduct", "[", 
   RowBox[{
    RowBox[{"u", "[", "i_", "]"}], ",", 
    RowBox[{"u", "[", "j_", "]"}]}], "]"}], ":=", 
  RowBox[{"I", " ", 
   RowBox[{"u", "[", 
    RowBox[{"i", "+", "j"}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.51534894678125*^9, 3.515348995015625*^9}, {
   3.51534904640625*^9, 3.51534909640625*^9}, {3.516475534477473*^9, 
   3.516475576743639*^9}, {3.51655490034375*^9, 3.516554900515625*^9}, {
   3.516558216875*^9, 3.516558217140625*^9}, {3.517082654494746*^9, 
   3.517082716863407*^9}, {3.517082755157902*^9, 3.517082796815816*^9}, 
   3.517082850242485*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"u", "[", "1", "]"}], ",", 
   RowBox[{"u", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516558500203125*^9, 3.516558512953125*^9}, {
  3.517082681007539*^9, 3.5170826849557047`*^9}, {3.517082728167799*^9, 
  3.517082739146781*^9}, {3.517082799628681*^9, 3.517082803227785*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  RowBox[{"u", "[", "3", "]"}]}]], "Output",
 CellChangeTimes->{3.517338681640625*^9, 3.6482238703367*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Operators (command)", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}}],

Cell["\<\
Operators is the list of symbols that are currently being recognized as \
operators.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]) and Bosonic Annhilation and Creation Operators (b and b\
\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, 
   3.516560634078125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", "Operators"}]], "Input",
 CellChangeTimes->{
  3.51534898675*^9, {3.516560359296875*^9, 3.5165603604375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Theta]", ",", "u"}], "}"}]], "Output",
 CellChangeTimes->{{3.51656036103125*^9, 3.516560375921875*^9}, 
   3.648223870386648*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Organize", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}}],

Cell["\<\
Organize is the function that enables the DiracQ package to understand and \
manipulate user input. Organize takes a mathematical expression as input and \
yields a nested list that contains the atoms of the input ordered according \
to their properties. Numbers, summed indices, c numbers, and q numbers are \
separated into groups. Each term of the input separated by plus sign \
constitutes a separate list of items in the output. For more information see \
the Explanation of Form Appendix in the DiracQ Writeup notebook.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}}],

Cell["\<\
Below is a diagram showing in general how input is decomposed by the organize \
function. # indicates any number as recognized by mathematica, c# is a \
nonnumerical symbol that is not recognized as an operator, q# is any \
noncommutative symbol, or operator, as recognized by the DiracQ package, and \
index indicates a nonnumerical index over which an expression is being summed.\
\>", "Text",
 CellChangeTimes->{{3.516560949234375*^9, 3.516560987421875*^9}, {
  3.51656103434375*^9, 3.516561161546875*^9}}],

Cell[BoxData[{
 RowBox[{"Organize", "[", 
  RowBox[{
   RowBox[{"(", "#", ")"}], " ", 
   RowBox[{
    UnderscriptBox["\[Sum]", "index"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"c", " ", "#"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"q", " ", "#"}], ")"}]}]}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"{", "index", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", " ", "#"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", " ", "#"}], "}"}]}], "}"}], "}"}]}], "\n"}], "\n", 
 RowBox[{"Organize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     SubscriptBox["#", "1"], ")"}], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      SubscriptBox["index", "1"]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", " ", 
        SubscriptBox["#", "1"]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"q", " ", 
        SubscriptBox["#", "1"]}], ")"}]}]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     SubscriptBox["#", "2"], ")"}], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", 
      SubscriptBox["index", "2"]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", " ", 
        SubscriptBox["#", "2"]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"q", " ", 
        SubscriptBox["#", "2"]}], ")"}]}]}]}]}], "]"}], "\n", 
 RowBox[{"=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["#", "1"], ",", 
      RowBox[{"{", 
       SubscriptBox["index", "1"], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", " ", 
        SubscriptBox["#", "1"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", " ", 
        SubscriptBox["#", "1"]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["#", "2"], ",", 
      RowBox[{"{", 
       SubscriptBox["index", "2"], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", " ", 
        SubscriptBox["#", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", " ", 
        SubscriptBox["#", "2"]}], "}"}]}], "}"}]}], "}"}]}]}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.516560924640625*^9, 3.516560940625*^9}},
 TextAlignment->Center],

Cell["\<\
Below is an example of the organize function containing Fermionic annhilation \
and creation operators\
\>", "Text",
 CellChangeTimes->{{3.516561165796875*^9, 3.516561214875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Organize", "[", 
  RowBox[{
   RowBox[{"5", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     RowBox[{
      RowBox[{"a", "[", "i", "]"}], " ", 
      RowBox[{"f", "[", "i", "]"}]}]}]}], "+", 
   RowBox[{"2", 
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{
      RowBox[{"b", "[", "j", "]"}], 
      RowBox[{"f\[Dagger]", "[", "j", "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516561221578125*^9, 3.516561261453125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "[", "0", "]"}], " ", 
       RowBox[{"f\[Dagger]", "[", "0", "]"}]}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[ImaginaryI]"}], 
      SqrtBox["2"]], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", "1", "]"}], " ", 
        RowBox[{"p", "[", "1", "]"}]}], 
       RowBox[{
        SqrtBox[
         FractionBox[
          RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", "\[HBar]"}]], 
      "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", 
      SqrtBox["2"]], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"f", "[", "1", "]"}], " ", 
       RowBox[{"q", "[", "1", "]"}]}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.51656126403125*^9, 3.648223870899867*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["OrganizedExpression", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, {3.51656129415625*^9, 3.51656129634375*^9}}],

Cell["\<\
OrganizedExpression is an option of several DiracQ functions which allows a \
user to input a preorganized expression into a function which normally \
accepts standard form input. This is normally done in the interest of time \
saving. To use preorganized input include the option setting \
OrganizedExpression -> True. This function is mainly used within the package \
when one function operates within another function, but it may be of use to \
users who are dealing with long calculations. See Standard OrderQ for \
information on the use of the StandardOrderQ function.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.51656130934375*^9, {3.516561347625*^9, 
   3.516561438296875*^9}, {3.5170834792816887`*^9, 3.517083504492568*^9}, {
   3.517338707953125*^9, 3.51733874796875*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger]) and Bosonic Annhilation and Creation Operators (b and b\
\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.516561547125*^9, 
  3.51656156634375*^9}}],

Cell["SimplifyQ normally excepts standard input", "Text",
 CellChangeTimes->{{3.516561454109375*^9, 3.516561475015625*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{"f", "[", "i", "]"}], "**", 
    RowBox[{"b", "[", "i", "]"}], "**", 
    RowBox[{"f", "[", "j", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"Organize", "[", "A", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.516561519015625*^9, 3.516561532390625*^9}, {
   3.516561584640625*^9, 3.516561592640625*^9}, 3.517338821703125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardOrderQ", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.516561481296875*^9, 3.5165615376875*^9}, {
  3.51656164403125*^9, 3.51656164746875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "1", "]"}], " ", 
  RowBox[{"f", "[", "0", "]"}], " ", 
  RowBox[{"f", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{{3.516561509734375*^9, 3.516561538578125*^9}, 
   3.5165615751875*^9, 3.5165616481875*^9, 3.517338830984375*^9, 
   3.648223870954297*^9}]
}, Open  ]],

Cell["\<\
When organized input is used with StandardOrderQ it remains unchanged\
\>", "Text",
 CellChangeTimes->{{3.516561680078125*^9, 3.51656170928125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardOrderQ", "[", "B", "]"}]], "Input",
 CellChangeTimes->{{3.516561604109375*^9, 3.516561608828125*^9}, {
  3.516561651078125*^9, 3.51656165503125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "[", "1", "]"}], " ", 
      RowBox[{"f", "[", "0", "]"}], " ", 
      RowBox[{"f", "[", "1", "]"}]}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5165616091875*^9, 3.5165616555*^9, 3.517338833359375*^9, 
  3.648223870985221*^9}]
}, Open  ]],

Cell["\<\
When the OrganizedExpression option is set to True we see that the correct \
answer is obtained, but that in remains in organized form.\
\>", "Text",
 CellChangeTimes->{{3.51656171334375*^9, 3.516561752453125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardOrderQ", "[", 
  RowBox[{"B", ",", 
   RowBox[{"OrganizedExpression", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516561619109375*^9, 3.516561663453125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "[", "1", "]"}], " ", 
      RowBox[{"f", "[", "0", "]"}], " ", 
      RowBox[{"f", "[", "1", "]"}]}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.516561637140625*^9, 3.51656166709375*^9}, 
   3.517338835375*^9, 3.6482238710202913`*^9}]
}, Open  ]],

Cell["\<\
If we use the Humanize function to return it to standard form we see readily \
that the manipulation has been performed.\
\>", "Text",
 CellChangeTimes->{{3.516561782875*^9, 3.516561785296875*^9}, {
  3.516562248328125*^9, 3.516562283375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Humanize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.516561764453125*^9, 3.516561770265625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "1", "]"}], " ", 
  RowBox[{"f", "[", "0", "]"}], " ", 
  RowBox[{"f", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.51656177075*^9, 3.51733883984375*^9, 
  3.648223871052745*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["OrganizedProduct",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5271739646179123`*^9, 
   3.527173972929747*^9}}],

Cell[BoxData[
 StyleBox["\<\"OrganizedProduct is a function used within the package that is \
not relevant to most users. OranizedProduct takes organized input and \
simplifies the operators by evaluating products if possible. Output is also \
organized.\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.527469674438837*^9, {3.5276937270993853`*^9, 3.5276937316632423`*^9}},
 CellTags->"Info3527444474-7055344"],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
OrganizedProduct is  used inside the package in certain simplifications, but \
is of little use to most users who will find Organize to achieve the goal of \
rewriting input operators in a systematically neater form. \
\>", "Text",
 CellChangeTimes->{{3.527693753668695*^9, 3.52769387719382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrganizedProduct", "[", 
  RowBox[{"Organize", "[", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
      ")"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.52747014130134*^9, 3.527470198397998*^9}, {
  3.527470272668742*^9, 3.527470294302853*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
      RowBox[{"p", "[", 
       RowBox[{"1", ",", "z"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"q", "[", 
        RowBox[{"1", ",", "y"}], "]"}], "2"]}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.527470151987198*^9, 3.527470199259562*^9}, {
   3.5274702787587557`*^9, 3.527470295179716*^9}, 3.527693690852838*^9, 
   3.6482238711040907`*^9}]
}, Open  ]],

Cell["\<\
If we drop the initial Organize above,  we get errors. With Organize as \
shown, it simply regurgitates the input and so is redundant- as mentioned \
above.\
\>", "Text",
 CellChangeTimes->{{3.5276939429495897`*^9, 3.527694014523254*^9}, {
  3.527703210474547*^9, 3.527703225377461*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["OrganizeQ",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5271739646179123`*^9, 
   3.527173999969606*^9}, {3.527174737010483*^9, 3.52717474345501*^9}, 
   3.527174782800356*^9}],

Cell[BoxData[
 StyleBox["\<\"OrganizeQ is a function used within the package that is not \
relevant to most users. OrganizeQ takes organized input and rearranges the \
operators according to a standardized order. OrganizeQ is a subfunction of \
the FullOrganize function. Output is also organized.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.527469701127964*^9},
 CellTags->"Info3527444501-7055344"],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
OrganizeQ is  used inside the package in certain simplifications, but is of \
little use to most users who will find Organize to achieve the goal of \
rewriting input operators in a systematically neater form.  \
\>", "Text",
 CellChangeTimes->{{3.527693753668695*^9, 3.527693909593474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OrganizeQ", "[", 
  RowBox[{"Organize", "[", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
      ")"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"q", "[", 
      RowBox[{"i", ",", "y"}], "]"}], "**", 
     RowBox[{"p", "[", 
      RowBox[{"i", ",", "z"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.52747014130134*^9, 3.527470198397998*^9}, {
  3.527470272668742*^9, 3.527470294302853*^9}, {3.527693928306939*^9, 
  3.5276939312976*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
      RowBox[{"p", "[", 
       RowBox[{"1", ",", "z"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"q", "[", 
        RowBox[{"1", ",", "y"}], "]"}], "2"]}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.527470224024426*^9, 3.5274702361566057`*^9}, 
   3.527693720474951*^9, 3.527693932381351*^9, 3.648223871232622*^9}]
}, Open  ]],

Cell["\<\
If we drop the initial Organize above, we get errors. With Organize as shown, \
it simply regurgitates the input and so is redundant- as mentioned above.\
\>", "Text",
 CellChangeTimes->{{3.5276939429495897`*^9, 3.527694014523254*^9}, {
  3.527703245515913*^9, 3.52770325193981*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["p", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9}],

Cell[TextData[{
 "p is the canonical momentum operator. This operator can be called with one \
argument, assumed  to be the particle number or the  site index. If two \
arguments are given,  the second argument will be taken to be coordinate \
direction. Also included is the 3 dimensional canonical momentum vector, \
represented by OverVector[p], or ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "\[RightVector]"], TraditionalForm]]]
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.517083831375326*^9, 3.5170838482261057`*^9}, {
   3.517084350782227*^9, 3.517084373616872*^9}, {3.517408889823228*^9, 
   3.517408907595883*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", "i", "]"}], ",", 
   RowBox[{"p", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, 
   3.648223871271002*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562629578125*^9, 3.516562646109375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.516562639046875*^9, 3.51656264859375*^9}, 
   3.6482238713021717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5165626503125*^9, 3.5165626613125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51656266196875*^9, 3.648223871355341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.516562739984375*^9, 3.516562749296875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "y"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.51656275009375*^9, 3.6482238714047537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"OverVector", "[", "p", "]"}], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.516562667640625*^9, 3.51656273240625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "y"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.51656272528125*^9, 3.5165627334375*^9}, 
   3.648223871455029*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["PositionQ",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.51656278875*^9, 
   3.516562790671875*^9}, {3.517773696359375*^9, 3.517773699890625*^9}, {
   3.517774102625*^9, 3.517774103203125*^9}, {3.51777419409375*^9, 
   3.5177741954375*^9}}],

Cell[BoxData[
 StyleBox["\<\"PositionQ[expr, pattern] gives a list of the positions of an \
operator matching pattern appear in expr. The position given is the position \
of the operator relative to other operators in expr only.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.527694417266872*^9},
 CellTags->"Info3527669217-7055344"],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (p \
and q).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, 3.51656444834375*^9, {3.517773916296875*^9, 
   3.517773933375*^9}}],

Cell["\<\
The output below shows that in the first term of the expression p[i, z] is \
the second operator and in the second term of the expression p[i,z] is the \
third operator. \
\>", "Text",
 CellChangeTimes->{{3.51777424915625*^9, 3.5177743349375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositionQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}]}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}]}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
  3.516564386109375*^9, 3.516564389921875*^9}, {3.516564451421875*^9, 
  3.516564456109375*^9}, {3.51777400996875*^9, 3.5177740889375*^9}, {
  3.51777412771875*^9, 3.517774145859375*^9}, {3.517774228640625*^9, 
  3.517774242890625*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, 
   3.516564456796875*^9, 3.5165659195625*^9, 3.516643054765625*^9, {
   3.51777406365625*^9, 3.517774090203125*^9}, 3.5177741480625*^9, 
   3.517774244640625*^9, 3.648223871505698*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["ProductQ", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.51656278875*^9, 
   3.516562790671875*^9}}],

Cell["\<\
ProductQ gives the product of two expressions involving terms that are \
noncommutative objects. ProductQ should be used in place of the standard \
Mathematica function NonCommutativeMultiply for combining expressions. \
ProductQ can be called as a function with two arguments or as the CircleTimes \
symbol \[EscapeKey]c*\[EscapeKey] used between two expressions. Operator \
product definitions will be applied by default. Settings are specified \
through the SetSession function.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, 3.51656279875*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
\tProductQ is far more useful for most quantum applications than \
NonCommutativeMultiply. However, this does not mean that should always be \
used in place of NonCommutativeMultiply. NCM is useful to seperate terms that \
must not be reorganized by Mathematica' s sorting. ProductQ is useful for \
combining larger expressions and appyling the product definitions of \
operators. The default output is ordered according to standard ordering.\
\>", "Text",
 CellChangeTimes->{{3.565878585702672*^9, 3.5658786339327393`*^9}, 
   3.5658992585218887`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{
     RowBox[{"t", "[", "i", "]"}], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"i", ",", "x"}], "]"}]}]}]}]}], ";"}], "\[LineSeparator]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"k", ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.56587846976251*^9, 3.565878474267516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "\[CircleTimes]", "B"}]], "Input",
 CellChangeTimes->{{3.565878477682521*^9, 3.5658784854825315`*^9}}],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "1"], 
  RowBox[{
   RowBox[{"t", "[", "1", "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"k", ",", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.5658784859025326`*^9, 3.5658784949975452`*^9}, 
   3.6482238715692253`*^9}]
}, Open  ]],

Cell["\<\
This function has built in useful properties such as the Pauli principle, so \
that the square of a destruction or creation operator for Fermions vanishes. \
In the DiracQ Palette activate Fermionic Annhilation and Creation Operators \
(f and f\[Dagger])\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, 3.51656444834375*^9, {3.527694720783575*^9, 
   3.527694759707767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"f", "[", "i", "]"}], ",", 
   RowBox[{"f", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
  3.516564386109375*^9, 3.516564389921875*^9}, {3.516564451421875*^9, 
  3.516564456109375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, 
   3.516564456796875*^9, 3.5165659195625*^9, 3.516643054765625*^9, 
   3.527694650680811*^9, 3.648223871601799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "i", "]"}], "\[CircleTimes]", 
  RowBox[{"f", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{{3.51656446178125*^9, 3.5165644680625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51656447409375*^9, 3.516565921609375*^9, 
  3.516643056125*^9, 3.648223871635208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"f", "[", "j", "]"}], ",", 
   RowBox[{"f", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51656459496875*^9, 3.516564610046875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "0", "]"}], " ", 
  RowBox[{"f", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.516564610953125*^9, 3.516565922375*^9, 
  3.5166430573125*^9, 3.648223871669169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", "i", "]"}], " ", 
    RowBox[{
     RowBox[{"f", "[", "i", "]"}], "**", 
     RowBox[{"f\[Dagger]", "[", "i", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"v", "[", "j", "]"}], " ", 
    RowBox[{"f", "[", "k", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516564476765625*^9, 3.516564534890625*^9}, {
  3.516564572296875*^9, 3.516564590625*^9}, {3.516564661421875*^9, 
  3.516564668453125*^9}, {3.516565960578125*^9, 3.516565967328125*^9}, {
  3.5170840299746027`*^9, 3.517084035137343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], " ", 
    RowBox[{"f", "[", "k", "]"}], " ", 
    RowBox[{"f\[Dagger]", "[", "1", "]"}], " ", 
    RowBox[{"v", "[", "0", "]"}]}], ")"}], "**", 
  RowBox[{"u", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{{3.517083969585593*^9, 3.517083977110384*^9}, {
   3.517084017195641*^9, 3.517084035836396*^9}, 3.648223871703158*^9}]
}, Open  ]],

Cell["\<\
In the first example a simple NonCommutativeMultiply (i.e.  **)  gives the \
same result as the ProductQ.  In the last example, the power of ProductQ is \
seen, it pulls apart the c-number parts and then applies all given relations \
to the q-number part, giving an easy to  read result. \
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, 3.51656279875*^9, {3.517084137760007*^9, 
   3.517084312709281*^9}},
 Background->RGBColor[1., 1., 0.85]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["PushOperatorLeft",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.51656278875*^9, 
   3.516562790671875*^9}, {3.517773696359375*^9, 3.517773699890625*^9}, {
   3.517774102625*^9, 3.517774103203125*^9}}],

Cell["\<\
PushOperatorRight[expr,pattern] will move the operator matching pattern to \
the left of all other operators in every term in expr. Commutators are \
accounted for.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, 3.51656279875*^9, {3.517773897796875*^9, 
   3.5177739008125*^9}, {3.517774105921875*^9, 3.5177741065*^9}, 
   3.565899578994219*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
Sometimes the order of operators output by the package is not appropriate for \
a desired manipulation. PushOperatorLeft provides a powerful and convenient \
way to move a given operator to the left of all other operators in an \
expression, while picking up the commutator terms obtained in the reordering.\
\>", "Text",
 CellChangeTimes->{{3.517773935234375*^9, 3.517774003703125*^9}, {
  3.51777411428125*^9, 3.51777412215625*^9}, {3.5274698056106987`*^9, 
  3.527469837254183*^9}, {3.527694817219921*^9, 3.5276948406522493`*^9}}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (p \
and q).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, 3.51656444834375*^9, {3.517773916296875*^9, 
   3.517773933375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PushOperatorLeft", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}]}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
  3.516564386109375*^9, 3.516564389921875*^9}, {3.516564451421875*^9, 
  3.516564456109375*^9}, {3.51777400996875*^9, 3.5177740889375*^9}, {
  3.51777412771875*^9, 3.517774145859375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"q", "[", 
     RowBox[{"1", ",", "y"}], "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"q", "[", 
     RowBox[{"1", ",", "z"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, 
   3.516564456796875*^9, 3.5165659195625*^9, 3.516643054765625*^9, {
   3.51777406365625*^9, 3.517774090203125*^9}, 3.5177741480625*^9, 
   3.52746978300799*^9, 3.648223871754327*^9}]
}, Open  ]],

Cell["\<\
Here the operator p[i,z] is located in the expression and pushed all the way \
to the left.\
\>", "Text",
 CellChangeTimes->{{3.5274699284217453`*^9, 3.527469972531734*^9}, {
  3.527470007969322*^9, 3.527470010827136*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["PushOperatorRight",
 FontColor->GrayLevel[0]]], "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.51656278875*^9, 
   3.516562790671875*^9}, {3.517773696359375*^9, 3.517773699890625*^9}}],

Cell["\<\
PushOperatorRight[expr,pattern] will move the operator matching pattern to \
the right of all other operators in every term in expr. Commutators are \
accounted for.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, 3.51656279875*^9, {3.517773897796875*^9, 
   3.5177739008125*^9}, 3.565899571446787*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
This is provided as an alternative to PushOperatorLeft. Sometimes the order \
of operators output by the package is not correct for a desired manipulation. \
PushOperatorRight  provides a powerful and convenient way to move a given \
operator to the right of all other operators in an expression.\
\>", "Text",
 CellChangeTimes->{{3.517773935234375*^9, 3.517774003703125*^9}, {
  3.527694885597844*^9, 3.527694944952286*^9}}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (p \
and q).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, 3.51656444834375*^9, {3.517773916296875*^9, 
   3.517773933375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PushOperatorRight", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "y"}], "]"}]}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]"}], 
       ")"}], "**", 
      RowBox[{"p", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}], "**", 
      RowBox[{"q", "[", 
       RowBox[{"i", ",", "z"}], "]"}]}]}]}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
  3.516564386109375*^9, 3.516564389921875*^9}, {3.516564451421875*^9, 
  3.516564456109375*^9}, {3.51777400996875*^9, 3.5177740889375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"q", "[", 
     RowBox[{"1", ",", "y"}], "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", "2"], " ", "Z", " ", "\[HBar]", " ", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"q", "[", 
     RowBox[{"1", ",", "z"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, 
   3.516564456796875*^9, 3.5165659195625*^9, 3.516643054765625*^9, {
   3.51777406365625*^9, 3.517774090203125*^9}, 3.527470033264124*^9, 
   3.648223871804297*^9}]
}, Open  ]],

Cell["Here the operator p[i,z] is pushed all the way to the right.", "Text",
 CellChangeTimes->{{3.527470042248893*^9, 3.5274700634527884`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["q", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}}],

Cell[TextData[{
 "q is the canonical position operator. This operator can be called with one \
argument, assumed  to be the particle number or the  site index. If two \
arguments are given,  the second argument will be taken to be coordinate \
direction.  Also included is the 3 dimensional canonical position vector, \
represented by OverVector[p], or ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]]],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.517084389132505*^9, 3.517084393666572*^9}, {
   3.5174089260247*^9, 3.517408939693421*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", "i", "]"}], ",", 
   RowBox[{"p", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, {
   3.5166431745625*^9, 3.516643179484375*^9}, 3.648223871837887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562629578125*^9, 3.516562646109375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.516562639046875*^9, 3.51656264859375*^9}, 
   3.516643180390625*^9, 3.648223871889208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5165626503125*^9, 3.5165626613125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51656266196875*^9, 3.516643181078125*^9, 
  3.648223871939481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["q", "\[RightVector]"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.516562739984375*^9, 3.516562749296875*^9}, {
  3.5166431854375*^9, 3.516643186625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"q", "[", 
    RowBox[{"1", ",", "y"}], "]"}], ",", 
   RowBox[{"q", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.51656275009375*^9, {3.51664318171875*^9, 3.51664318815625*^9}, 
   3.648223871988915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"OverVector", "[", "q", "]"}], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.516562667640625*^9, 3.51656273240625*^9}, {
  3.51664319171875*^9, 3.5166431918125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"q", "[", 
    RowBox[{"1", ",", "y"}], "]"}], ",", 
   RowBox[{"q", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.51656272528125*^9, 3.5165627334375*^9}, 
   3.516643192265625*^9, 3.648223872039033*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["QCoefficient", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.516645018265625*^9, 3.5166450210625*^9}}],

Cell[TextData[{
 "QCoeffficient[expression, form]  is the DiracQ equivalent of the function \
Coefficient in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". It   scans the \[OpenCurlyDoubleQuote]expression\[CloseCurlyDoubleQuote] \
for terms containing a string of operators that match \
\[OpenCurlyDoubleQuote]form\[CloseCurlyDoubleQuote].  It returns the c-number \
coefficient, with \[OpenCurlyDoubleQuote]form\[CloseCurlyDoubleQuote] being a \
q-number pattern.  If several terms are found the output will be a sum of \
terms. Only exact matches of form are found. (A series of which \
\[OpenCurlyDoubleQuote]form\[CloseCurlyDoubleQuote] is a subpart will not be \
included)."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, 3.516643271890625*^9, {3.51664335284375*^9, 
   3.51664335303125*^9}, {3.517084470135625*^9, 3.517084563035355*^9}, {
   3.517088951325754*^9, 3.517088975352977*^9}, {3.5173980203126383`*^9, 
   3.517398032142617*^9}, 3.565900938947004*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9, 3.5173390009375*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p) and Pauli Spin Matrices (\[Sigma]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, {3.5166449208125*^9, 3.516644937921875*^9}, 
   3.5173390009375*^9}],

Cell["\<\
QCoefficient will yield the coefficient of the operators requested.\
\>", "Text",
 CellChangeTimes->{{3.51664428246875*^9, 3.516644322171875*^9}, 
   3.5173390009375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QCoefficient", "[", 
  RowBox[{
   RowBox[{"4", 
    RowBox[{"a", "[", "i", "]"}], 
    RowBox[{
     RowBox[{"p", "[", "i", "]"}], "**", 
     RowBox[{"q", "[", "i", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"q", "[", "i", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
   3.516643384609375*^9, 3.51664341790625*^9}, {3.51664346496875*^9, 
   3.5166434671875*^9}, {3.516643509265625*^9, 3.516643516078125*^9}, {
   3.516643742421875*^9, 3.516643754765625*^9}, {3.51664379503125*^9, 
   3.516643838484375*^9}, {3.516644254890625*^9, 3.516644264640625*^9}, 
   3.5173390009375*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SqrtBox["2"], " ", 
    SuperscriptBox[
     RowBox[{"p", "[", "1", "]"}], "2"], " ", 
    RowBox[{"q", "[", "1", "]"}]}], 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", "\[HBar]"}]], "+", 
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
   RowBox[{"p", "[", "1", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"q", "[", "1", "]"}], "2"]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, {
   3.5166431745625*^9, 3.516643179484375*^9}, 3.516643416046875*^9, 
   3.516643467625*^9, {3.516643757484375*^9, 3.5166438390625*^9}, 
   3.516644212453125*^9, {3.516644265265625*^9, 3.516644273265625*^9}, 
   3.517338902265625*^9, 3.5173390009375*^9, 3.6482238720892143`*^9}],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"a", "[", "i", "]"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, {
   3.5166431745625*^9, 3.516643179484375*^9}, 3.516643416046875*^9, 
   3.516643467625*^9, {3.516643757484375*^9, 3.5166438390625*^9}, 
   3.516644212453125*^9, {3.516644265265625*^9, 3.516644273265625*^9}, 
   3.517338902265625*^9, 3.5173390009375*^9}]
}, Open  ]],

Cell["\<\
QCoefficient can be used to scan more complicated input involving many terms \
as well.\
\>", "Text",
 CellChangeTimes->{{3.516644343890625*^9, 3.516644369703125*^9}, 
   3.5173390009375*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Term1", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"a", "+", "b"}], "2"], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"a", "-", "b"}], "2"], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"1", ",", "z"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"3", ",", "z"}], "]"}]}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"c", "+", "d"}], "2"], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"1", ",", "x"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"3", ",", "x"}], "]"}]}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"c", "-", "d"}], "2"], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"1", ",", "y"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"3", ",", "y"}], "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Term2", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"a", "'"}], "+", 
      RowBox[{"b", "'"}]}], "2"], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", "'"}], "-", 
       RowBox[{"b", "'"}]}], "2"], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"2", ",", "z"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"3", ",", "z"}], "]"}]}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"c", "'"}], "+", 
       RowBox[{"d", "'"}]}], "2"], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"2", ",", "x"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"3", ",", "x"}], "]"}]}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"c", "'"}], "-", 
       RowBox[{"d", "'"}]}], "2"], 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"2", ",", "y"}], "]"}], "**", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"3", ",", "y"}], "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4808792506875*^9, 3.480879382375*^9}, {
   3.480879489328125*^9, 3.480879489734375*^9}, {3.480879723359375*^9, 
   3.480879728734375*^9}, 3.48148074409375*^9, {3.481490731234375*^9, 
   3.481490849265625*^9}, {3.4814910325625*^9, 3.481491036890625*^9}, {
   3.481491325265625*^9, 3.481491366015625*^9}, {3.481491569875*^9, 
   3.48149157071875*^9}, {3.4814922966875*^9, 3.481492399734375*^9}, {
   3.4816481189375*^9, 3.481648143953125*^9}, {3.4833036773125*^9, 
   3.4833037335*^9}, 3.4834619284375*^9, {3.48433549575*^9, 
   3.484335524859375*^9}, 3.4882208830932083`*^9, {3.491935083771399*^9, 
   3.491935085925378*^9}, {3.516643642546875*^9, 3.516643654765625*^9}, {
   3.516644380234375*^9, 3.516644420125*^9}, 3.5173390009375*^9},
 FontFamily->"Batang"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"product", "=", 
   RowBox[{"Term1", "\[CircleTimes]", "Term2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "product", "]"}]}], "Input",
 CellChangeTimes->{{3.48131508190625*^9, 3.481315110828125*^9}, 
   3.481315178375*^9, {3.481464232578125*^9, 3.48146423375*^9}, {
   3.48146481253125*^9, 3.48146481321875*^9}, 3.48148074409375*^9, {
   3.48149059275*^9, 3.481490648734375*^9}, {3.4814907199375*^9, 
   3.48149072078125*^9}, 3.481490803953125*^9, {3.481490982640625*^9, 
   3.48149100590625*^9}, {3.481491046*^9, 3.481491049640625*^9}, {
   3.48149158234375*^9, 3.48149159790625*^9}, {3.481492437359375*^9, 
   3.48149246359375*^9}, {3.48164799421875*^9, 3.481647998796875*^9}, 
   3.4834619284375*^9, {3.48382326021875*^9, 3.483823262515625*^9}, {
   3.4838249889375*^9, 3.483824991828125*^9}, 3.483825467078125*^9, {
   3.48433555446875*^9, 3.484335567484375*^9}, 3.488220883114931*^9, {
   3.488220913238639*^9, 3.488220935820991*^9}, {3.516643660453125*^9, 
   3.516643724265625*^9}, {3.51664495778125*^9, 3.51664496528125*^9}, 
   3.5173390009375*^9},
 FontFamily->"Batang"],

Cell[BoxData["64"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.51664496659375*^9, {3.517338904484375*^9, 3.51733892140625*^9}, 
   3.5173390009375*^9, 3.648223872429722*^9}],

Cell[BoxData["64"], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.51664496659375*^9, {3.517338904484375*^9, 3.51733892140625*^9}, 
   3.5173390009375*^9}]
}, Open  ]],

Cell["\<\
We can scan product and find the coefficients of all of the terms that \
contain a single string of operators. For short output this can be done \
manually but becomes difficult with longer output. We see here that the \
expression product is quite long and contains for terms with the string of \
operators listed. The result of QCoefficient of q is therefore a sum of all \
these coefficients.\
\>", "Text",
 CellChangeTimes->{{3.5166445105*^9, 3.516644578875*^9}, {3.5166449454375*^9, 
   3.516645010125*^9}, 3.5173390009375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QCoefficient", "[", 
  RowBox[{"product", ",", 
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"1", ",", "x"}], "]"}], "**", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"2", ",", "y"}], "]"}], "**", 
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "z"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516562608078125*^9, 3.516562626953125*^9}, {
   3.516643384609375*^9, 3.51664341790625*^9}, {3.51664346496875*^9, 
   3.5166434671875*^9}, {3.516643509265625*^9, 3.516643516078125*^9}, {
   3.516643742421875*^9, 3.516643754765625*^9}, {3.51664379503125*^9, 
   3.516643838484375*^9}, {3.516644426796875*^9, 3.516644427875*^9}, {
   3.51664458590625*^9, 3.516644592515625*^9}, {3.516644876125*^9, 
   3.516644893390625*^9}, 3.517338966796875*^9, 3.5173390009375*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "z"}], "]"}], "2"]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["p", "\[Prime]",
             MultilineFunction->None], "[", "#1", "]"}]}], 
          RowBox[{"m", " ", "\[Omega]"}]], "+", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]",
           MultilineFunction->None], "[", "#1", "]"}]}], ")"}]}], 
      SqrtBox["2"]], "&"}], ")"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "z"}], "]"}], "2"]}], "+", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["b", "\[Prime]",
     MultilineFunction->None]}], "4"], "+", 
  FractionBox[
   RowBox[{"b", " ", 
    SuperscriptBox["b", "\[Prime]",
     MultilineFunction->None]}], "4"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "z"}], "]"}], "2"], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "z"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "z"}], "]"}], "2"], " ", 
   SuperscriptBox["b", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "x"}], "]"}], "2"], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "x"}], "]"}], "2"], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "y"}], "]"}], "2"], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "y"}], "]"}], "2"], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "x"}], "]"}], "2"], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "x"}], "]"}], "2"], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "c", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "y"}], "]"}], "2"], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "d", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Sigma]", "[", 
     RowBox[{"3", ",", "y"}], "]"}], "2"], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "x"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "a", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "b", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "z"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"2", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "y"}], "]"}], " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"3", ",", "z"}], "]"}], " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, {
   3.5166431745625*^9, 3.516643179484375*^9}, 3.516643416046875*^9, 
   3.516643467625*^9, {3.516643757484375*^9, 3.5166438390625*^9}, 
   3.516644212453125*^9, 3.516644593015625*^9, {3.5166448675625*^9, 
   3.51664489428125*^9}, {3.51733890575*^9, 3.517338923265625*^9}, 
   3.517338968078125*^9, 3.5173390009375*^9, 3.648223872539192*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "c", " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "d", " ", 
   SuperscriptBox["c", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "c", " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", "d", " ", 
   SuperscriptBox["d", "\[Prime]",
    MultilineFunction->None]}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.51656261696875*^9, 3.51656262753125*^9}, {
   3.5166431745625*^9, 3.516643179484375*^9}, 3.516643416046875*^9, 
   3.516643467625*^9, {3.516643757484375*^9, 3.5166438390625*^9}, 
   3.516644212453125*^9, 3.516644593015625*^9, {3.5166448675625*^9, 
   3.51664489428125*^9}, {3.51733890575*^9, 3.517338923265625*^9}, 
   3.517338968078125*^9, 3.5173390009375*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["SecondaryOperators", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}}],

Cell[TextData[{
 "SecondaryOperators of all the active composite operators, that is, all of \
the active operators that are combinations of more basic operators. The \
default list is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["n", "f"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "b"], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "Plus"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "Minus"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["J", "Plus"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["J", "Minus"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", "\[RightVector]"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["q", "\[RightVector]"], TraditionalForm]]],
 "}"
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}}],

Cell[CellGroupData[{

Cell[BoxData["SecondaryOperators"], "Input",
 CellChangeTimes->{{3.516645349171875*^9, 3.516645353046875*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.516645353625*^9, 3.516645367265625*^9}, 
   3.648223872571814*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["SimplifyQ", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516645434484375*^9, 3.516645436421875*^9}}],

Cell["\<\
SimplifyQ is analogous to the existing Mathematica Simplify function for \
expressions that contain noncommutative objects. All output of DiracQ \
function such as Commutator or ProductQ is already simplified in the manner \
performed by this function. This function is primarily used to simplify \
expressions that have either never been input into a DiracQ function or have \
been manipulated by the user and need to be simplified. \
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.516645443875*^9, 
   3.516645493859375*^9}, {3.51664563203125*^9, 3.5166457295625*^9}, {
   3.51664581859375*^9, 3.51664582146875*^9}, 3.51698581040625*^9},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}}],

Cell["\<\
The following expression \[OpenCurlyDoubleQuote]term1\[CloseCurlyDoubleQuote] \
from  a harmonic oscillator problem was generated: \
\>", "Text",
 CellChangeTimes->{{3.51698619034375*^9, 3.516986211140625*^9}, {
  3.517398215307768*^9, 3.5173982229326572`*^9}, {3.51739833886518*^9, 
  3.517398341542046*^9}, {3.517409011077029*^9, 3.517409016176676*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"term1", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SqrtBox[
       FractionBox[
        RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], "**", 
      RowBox[{"q", "[", "i", "]"}]}], 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SqrtBox[
          FractionBox[
           RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", "\[HBar]"}]], "**", 
       RowBox[{"p", "[", "i", "]"}]}]}], 
     SqrtBox["2"]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.51698622075*^9, 3.516986224328125*^9}}],

Cell["\<\
Performing further manipulations on this expression by hand enables us to \
pull out a common factor and subtracting the original expression we form a \
new expression \[OpenCurlyDoubleQuote]term2\[CloseCurlyDoubleQuote]  that \
should evaluate to zero.\
\>", "Text",
 CellChangeTimes->{{3.516986294140625*^9, 3.5169863331875*^9}, {
  3.5173982511057262`*^9, 3.517398373819214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"term2", "=", 
  RowBox[{"term1", "-", 
   FractionBox[
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"p", "[", "i", "]"}]}], 
         RowBox[{"m", " ", "\[Omega]"}]]}], "+", 
       RowBox[{"q", "[", "i", "]"}]}], ")"}]}], 
    SqrtBox["2"]]}]}]], "Input",
 CellChangeTimes->{{3.516986263921875*^9, 3.516986270328125*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], "**", 
    RowBox[{"q", "[", "1", "]"}]}], 
   SqrtBox["2"]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", "\[HBar]"}]], "**", 
     RowBox[{"p", "[", "1", "]"}]}]}], 
   SqrtBox["2"]], "-", 
  FractionBox[
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"p", "[", "1", "]"}]}], 
        RowBox[{"m", " ", "\[Omega]"}]]}], "+", 
      RowBox[{"q", "[", "1", "]"}]}], ")"}]}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.516986270953125*^9, 3.516986639*^9, 3.648223872655869*^9}
  ]
}, Open  ]],

Cell["\<\
This expression can be simplified using SimplifyQ since it does  a full book \
keeping of all terms within the expression.\
\>", "Text",
 CellChangeTimes->{{3.51698657571875*^9, 3.5169866204375*^9}, 
   3.5173981489800653`*^9, {3.5173984424905853`*^9, 3.51739845400952*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyQ", "[", "term2", "]"}]], "Input",
 CellChangeTimes->{{3.516985825078125*^9, 3.516985895546875*^9}, {
  3.51698627659375*^9, 3.5169862771875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51698589784375*^9, 3.516986278015625*^9, 
  3.51698664021875*^9, 3.64822387271084*^9}]
}, Open  ]],

Cell["\<\
On the other hand, the standard Mathematica function \
\[OpenCurlyDoubleQuote]Simplify\[CloseCurlyDoubleQuote] does not  simplify \
this function fully. \
\>", "Text",
 CellChangeTimes->{{3.517398151935851*^9, 3.517398199723378*^9}, {
  3.5173983921239033`*^9, 3.517398464730246*^9}, {3.517409067416801*^9, 
  3.517409074513205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "term2", "]"}]], "Input",
 CellChangeTimes->{{3.51698628034375*^9, 3.516986285359375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"m", " ", "\[Omega]", " ", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], "**", 
     RowBox[{"q", "[", "1", "]"}]}]}], "-", 
   RowBox[{"\[ImaginaryI]", " ", "m", " ", "\[Omega]", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", "\[HBar]"}]], "**", 
     RowBox[{"p", "[", "1", "]"}]}]}], "+", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{"m", " ", "\[Omega]"}], "\[HBar]"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"p", "[", "1", "]"}]}], "-", 
      RowBox[{"m", " ", "\[Omega]", " ", 
       RowBox[{"q", "[", "1", "]"}]}]}], ")"}]}]}], 
  RowBox[{
   SqrtBox["2"], " ", "m", " ", "\[Omega]"}]]], "Output",
 CellChangeTimes->{3.516986285796875*^9, 3.51698664134375*^9, 
  3.6482238727794228`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["StandardOrderQ", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}}],

Cell["\<\
StandardOrderQ will order the operators of an expression according to \
operator type, operator species, and site index respectively. Furthermore \
this function will place creation operators to the left of annihiliation \
operators of the same type, accounting for the commutator of the two \
operators.Operator product definitions are applied by default, and can be \
turned off by specifying ApplyDefinition -> False.Operators are sorted in the \
following order : {Bra, b\[Dagger], b, f\[Dagger], f, J, X, \[Sigma], p, q, \
Ket}. This function can be used to partially simplify functions but is not as \
extensive as the SimplifyQ function.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p), Fermionic Creation and Annihilation operators (f and f\[Dagger]), and \
Bosonic Creation and Annihilation operators (b and b\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"term1", "=", 
   RowBox[{
    RowBox[{"q", "[", "j", "]"}], "**", 
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"f", "[", "k", "]"}], "**", 
    RowBox[{"f\[Dagger]", "[", "k", "]"}], "**", 
    RowBox[{"f", "[", "j", "]"}], "**", 
    RowBox[{"b", "[", "i", "]"}], "**", 
    RowBox[{"b\[Dagger]", "[", "i", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.516987102390625*^9, 3.516987169359375*^9}}],

Cell["\<\
StandardOrderQ will reorder the operators in the expression above, accounting \
for the commutators of the two operators.\
\>", "Text",
 CellChangeTimes->{{3.516987201875*^9, 3.5169872540625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardOrderQ", "[", "term1", "]"}]], "Input",
 CellChangeTimes->{{3.516987072078125*^9, 3.516987101265625*^9}, {
  3.5169871723125*^9, 3.516987174609375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "1", "]"}], " ", 
  RowBox[{"b\[Dagger]", "[", "1", "]"}], " ", 
  RowBox[{"f", "[", "0", "]"}], " ", 
  RowBox[{"f", "[", "k", "]"}], " ", 
  RowBox[{"f\[Dagger]", "[", "k", "]"}], " ", 
  RowBox[{"p", "[", "1", "]"}], " ", 
  RowBox[{"q", "[", "0", "]"}]}]], "Output",
 CellChangeTimes->{
  3.51698717503125*^9, {3.517339042546875*^9, 3.5173390529375*^9}, 
   3.648223872836296*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["TakeCPart", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}}],

Cell["\<\
TakeCPart will scan input and return the \[OpenCurlyDoubleQuote]c\
\[CloseCurlyDoubleQuote] number terms (numbers and other constants). The \
output is returned as a list. Each entry in the list is the \
\[OpenCurlyDoubleQuote]c\[CloseCurlyDoubleQuote] number component of a single \
term found within the input expression, where terms are taken as components \
seperated by addition.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.517088783070368*^9, 3.517088813216216*^9}, 
   3.5173390645625*^9, {3.5174091038675213`*^9, 3.517409119851007*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate only the Canonical Position and Momentum \
Operators (q and p). We have deliberately turned off the Boson operators \
b[i], so that they are part of the c-number answer. Turning them on as Bosons \
would group them with the q-number parts in correct order.\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}, {3.5170888280429373`*^9, 
  3.517088911756032*^9}, {3.517409193923048*^9, 3.517409198410598*^9}}],

Cell["TakeCPart will yield the C numbers of the input.", "Text",
 CellChangeTimes->{{3.5169875234375*^9, 3.51698756434375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeCPart", "[", 
  RowBox[{"5", " ", "a", " ", 
   RowBox[{
    RowBox[{"b", "[", "i", "]"}], "**", 
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"\[Theta]", "[", "i", "]"}], "**", 
    RowBox[{"q", "[", "i", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516987566109375*^9, 3.516987614265625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", " ", "a", " ", 
   RowBox[{"b", "[", "1", "]"}], " ", 
   RowBox[{"p", "[", "1", "]"}], " ", 
   RowBox[{"q", "[", "1", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5169876148125*^9, 3.6482238728698072`*^9}]
}, Open  ]],

Cell["\<\
If the input expression contains terms seperated by addition then TakeCPart \
will yield a list of C numbers of each term in the expression.\
\>", "Text",
 CellChangeTimes->{{3.51698762384375*^9, 3.51698766640625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeCPart", "[", 
  RowBox[{
   RowBox[{"5", " ", "a", " ", 
    RowBox[{
     RowBox[{"b", "[", "i", "]"}], "**", 
     RowBox[{"p", "[", "i", "]"}], "**", 
     RowBox[{"\[Theta]", "[", "i", "]"}], "**", 
     RowBox[{"q", "[", "i", "]"}]}]}], "+", 
   RowBox[{"3", 
    RowBox[{
     RowBox[{"j", "[", "i", "]"}], "**", 
     RowBox[{"p", "[", "i", "]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5169876680625*^9, 3.51698768865625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"3", " ", 
    RowBox[{"0", "[", "1", "]"}], " ", 
    RowBox[{"p", "[", "1", "]"}]}], ",", 
   RowBox[{"5", " ", "a", " ", 
    RowBox[{"b", "[", "1", "]"}], " ", 
    RowBox[{"p", "[", "1", "]"}], " ", 
    RowBox[{"q", "[", "1", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.516987689171875*^9, 3.648223872907178*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["TakeQPart", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}}],

Cell["\<\
TakeQPart will scan input and return the  Q number parts (operators). Output \
is returned as a list. Each entry in the list is the Q number component of a \
single term found within the input expression, where terms are taken as \
components seperated by addition.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.5170889948744907`*^9, 3.5170890059636087`*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}}],

Cell["TakeQPart will yield the Q numbers of the input.", "Text",
 CellChangeTimes->{{3.5169875234375*^9, 3.51698756434375*^9}, {
  3.516987737234375*^9, 3.5169877381875*^9}, {3.516987777921875*^9, 
  3.51698777834375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeQPart", "[", 
  RowBox[{"5", " ", "a", " ", 
   RowBox[{
    RowBox[{"b", "[", "i", "]"}], "**", 
    RowBox[{"p", "[", "i", "]"}], "**", 
    RowBox[{"\[Theta]", "[", "i", "]"}], "**", 
    RowBox[{"q", "[", "i", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516987566109375*^9, 3.516987614265625*^9}, {
  3.51698776503125*^9, 3.51698776540625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Theta]", "[", "1", "]"}], "}"}]], "Output",
 CellChangeTimes->{3.5169876148125*^9, 3.51698776590625*^9, 
  3.648223872957532*^9}]
}, Open  ]],

Cell["\<\
If the input expression contains terms seperated by addition then TakeQPart \
will yield a list of Q numbers of each term in the expression.\
\>", "Text",
 CellChangeTimes->{{3.51698762384375*^9, 3.51698766640625*^9}, {
  3.516987774265625*^9, 3.516987782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeQPart", "[", 
  RowBox[{
   RowBox[{"5", " ", "a", " ", 
    RowBox[{
     RowBox[{"b", "[", "i", "]"}], "**", 
     RowBox[{"p", "[", "i", "]"}], "**", 
     RowBox[{"\[Theta]", "[", "i", "]"}], "**", 
     RowBox[{"q", "[", "i", "]"}]}]}], "+", 
   RowBox[{"3", 
    RowBox[{
     RowBox[{"j", "[", "i", "]"}], "**", 
     RowBox[{"p", "[", "i", "]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5169876680625*^9, 3.51698768865625*^9}, {
  3.516987770140625*^9, 3.516987770578125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"\[Theta]", "[", "1", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.516987689171875*^9, 3.516987771234375*^9, 
  3.64822387300677*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["TakeSummand", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}}],

Cell["\<\
TakeSummand will return the summand of an input expression of the form \
Sum[Summand, Index (Indices)]. Input of other forms will yield error messages.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.517089042304562*^9, 
   3.517089073194936*^9}, {3.51733910290625*^9, 3.517339109609375*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Canonical Position and Momentum Operators (q \
and p).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}}],

Cell["TakeSummand will yield only the summand of a sum.", "Text",
 CellChangeTimes->{{3.5169875234375*^9, 3.51698756434375*^9}, {
  3.516987737234375*^9, 3.5169877381875*^9}, {3.516987777921875*^9, 
  3.51698777834375*^9}, {3.516987922640625*^9, 3.516987962609375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeSummand", "[", 
  RowBox[{"5", 
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], 
    RowBox[{"p", "[", "i", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516987566109375*^9, 3.516987614265625*^9}, {
  3.51698776503125*^9, 3.51698776540625*^9}, {3.516987858546875*^9, 
  3.516987906453125*^9}}],

Cell[BoxData[
 RowBox[{"5", " ", 
  RowBox[{"p", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{
  3.5169876148125*^9, 3.51698776590625*^9, {3.516987876359375*^9, 
   3.516987907203125*^9}, 3.6482238730576153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeSummand", "[", 
  RowBox[{"5", 
   RowBox[{
    UnderscriptBox["\[Sum]", "i"], " ", 
    RowBox[{
     UnderscriptBox["\[Sum]", "j"], 
     RowBox[{
      RowBox[{"p", "[", "i", "]"}], "**", 
      RowBox[{"q", "[", "i", "]"}], "**", 
      RowBox[{"q", "[", "i", "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516987566109375*^9, 3.516987614265625*^9}, {
  3.51698776503125*^9, 3.51698776540625*^9}, {3.516987858546875*^9, 
  3.516987906453125*^9}, {3.5170891093865232`*^9, 3.517089124035242*^9}}],

Cell[BoxData[
 RowBox[{"5", " ", 
  RowBox[{"p", "[", "1", "]"}], " ", 
  SuperscriptBox[
   RowBox[{"q", "[", "1", "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.5169876148125*^9, 3.51698776590625*^9, {3.516987876359375*^9, 
   3.516987907203125*^9}, {3.517089101392898*^9, 3.5170891254390087`*^9}, 
   3.648223873127613*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vacuum", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}}],

Cell["\<\
Vacuum is the symbol used to represent the vacuum state. In general different \
operators are taken to act on different basis and therefore Vacuum represents \
the direct product of the vacuum state of several different basis.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Fermionic Creation and Annihilation operators \
(f and f\[Dagger]).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
  3.516988045859375*^9}}],

Cell["\<\
The Vacuum state can take the form of either a Bra or a Ket vector.\
\>", "Text",
 CellChangeTimes->{{3.5169875234375*^9, 3.51698756434375*^9}, {
  3.516987737234375*^9, 3.5169877381875*^9}, {3.516987777921875*^9, 
  3.51698777834375*^9}, {3.516987922640625*^9, 3.516987962609375*^9}, {
  3.516988065015625*^9, 3.516988094796875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "i", "]"}], "\[CircleTimes]", 
  RowBox[{"Ket", "[", "Vacuum", "]"}]}]], "Input",
 CellChangeTimes->{{3.516988100625*^9, 3.51698812953125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51698813046875*^9, 3.648223873422316*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Bra", "[", "Vacuum", "]"}], "\[CircleTimes]", 
  RowBox[{"f\[Dagger]", "[", "i", "]"}]}]], "Input",
 CellChangeTimes->{{3.516988134921875*^9, 3.51698815146875*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.516988148265625*^9, 3.5169881521875*^9}, 
   3.6482238734579973`*^9}]
}, Open  ]],

Cell["Operators of any type can act on the vacuum state.", "Text",
 CellChangeTimes->{{3.51698816634375*^9, 3.516988182921875*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["x", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}}],

Cell["\<\
x is used to represent the x coordinate direction in several of the operators \
in the DiracQ package.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Pauli Spin Matrices (\[Sigma]), Canonical \
Position and Momentum Operators (q and p), and Canonical Spin Matrices (J).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
  3.516988045859375*^9}, {3.516989057859375*^9, 3.5169891146875*^9}}],

Cell["\<\
x is used by the Pauli Spin Matrices and the Canonical Spin Matrices.\
\>", "Text",
 CellChangeTimes->{{3.51698913365625*^9, 3.5169891723125*^9}, {
  3.516989241546875*^9, 3.516989249703125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51698917471875*^9, 3.51698920603125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5169891889375*^9, 3.51698920671875*^9}, 
   3.516989272640625*^9, 3.648223873507613*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516989260984375*^9, 3.51698926415625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.516989264515625*^9, 3.648223873557699*^9}]
}, Open  ]],

Cell["\<\
x is also used to represent coordinate direction of Position and Momentum \
operators.\
\>", "Text",
 CellChangeTimes->{{3.516989212*^9, 3.5169892348125*^9}, {
  3.516989279859375*^9, 3.516989295578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.51698929871875*^9, 3.5169893093125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "y"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.516989310171875*^9, 3.648223873589807*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["X", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}, {3.51698940934375*^9, 
   3.51698940984375*^9}}],

Cell[TextData[{
 "X is the Hubbard projection operator, three arguments are required  for its \
definition. At a given site \[OpenCurlyDoubleQuote]i\[CloseCurlyDoubleQuote] \
the X[i,j,k]  is the projection operator |j> < k|, where the ket |j> runs \
over the four possibilities of electron occupation at the  given site \
\[OpenCurlyDoubleQuote]i\[CloseCurlyDoubleQuote], namely   |0> , |\[UpArrow]> \
 , |\[DownArrow]>   and |\[UpArrow]\[DownArrow]>. These four states are \
assigned the \[OpenCurlyDoubleQuote]j\[CloseCurlyDoubleQuote] values \
j=0,1,-1, 2 respectively.    States with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["j", "2"], "+", 
     SuperscriptBox["k", "2"]}], " ", "=", 
    RowBox[{"odd", " ", "integer"}]}], TraditionalForm]]],
 " are Fermi like and with  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["j", "2"], "+", 
     SuperscriptBox["k", "2"]}], " ", "=", 
    RowBox[{"even", "  ", "integer"}]}], TraditionalForm]]],
 " are Boson like.  We strongly  recommend prescribing numerical values \
rather than symbolic values to the two indices \[OpenCurlyDoubleQuote]j\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]k\[CloseCurlyDoubleQuote] \
since the ",
 "built in",
 " properties of (anti)-commutation are only valid in these cases.  "
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989380234375*^9}, {3.517089230158021*^9, 
   3.517089350823351*^9}, {3.517089498235757*^9, 3.517089596142543*^9}, {
   3.5173391354375*^9, 3.51733913671875*^9}, {3.5173408603277473`*^9, 
   3.5173409243090687`*^9}, {3.517340963605616*^9, 3.5173410420920258`*^9}, {
   3.5173410781560583`*^9, 3.517341139342216*^9}, {3.517400733635215*^9, 
   3.5174008039800577`*^9}, {3.51740083919363*^9, 3.517401025831703*^9}, {
   3.517401093161762*^9, 3.51740140713008*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["In the DiracQ Palette activate Hubbard Operators (X).", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
  3.516988045859375*^9}, {3.516989057859375*^9, 3.5169891146875*^9}, {
  3.51698942696875*^9, 3.516989434734375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "Hubbard", " ", "Operator", " ", "is", " ", "defined", " ", 
   "as", " ", 
   RowBox[{"follows", ":", " ", 
    SubsuperscriptBox["X", "i", 
     RowBox[{"j", " ", "k"}]]}]}], "=", 
  RowBox[{"\[LeftBracketingBar]", 
   RowBox[{"j", " ", ">", "<", 
    RowBox[{"k", " ", "\[LeftBracketingBar]"}]}]}]}]], "Text",
 CellChangeTimes->{{3.51698943671875*^9, 3.516989452421875*^9}, {
   3.516989492453125*^9, 3.516989493171875*^9}, 3.51698953928125*^9, {
   3.517401437147827*^9, 3.5174014876024714`*^9}, {3.517401537039419*^9, 
   3.517401546689389*^9}},
 FontFamily->"Times New Roman"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProductQ", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "a", ",", "d"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "d", ",", "c"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51733921625*^9, 3.517339226921875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "[", 
   RowBox[{"1", ",", "a", ",", "d"}], "]"}], " ", 
  RowBox[{"X", "[", 
   RowBox[{"1", ",", "d", ",", "c"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.517339227234375*^9, 3.51733924109375*^9}, 
   3.648223873641492*^9}]
}, Open  ]],

Cell["\<\
At a single site \[OpenCurlyDoubleQuote]i\[CloseCurlyDoubleQuote],  if \
required we can possibly  override the recommendation of numerical values, \
and  use symbolic values for the state labels.\
\>", "Text",
 CellChangeTimes->{{3.517401863446651*^9, 3.517401988804007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "j", ",", "k"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "l", ",", "m"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516989554859375*^9, 3.5169895975*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.516989586390625*^9, 3.516989600078125*^9}, 
   3.648223873690943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "a", ",", "d"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "d", ",", "c"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517089359978738*^9, 3.517089410541737*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"X", "[", 
   RowBox[{"1", ",", "a", ",", "d"}], "]"}], " ", 
  RowBox[{"X", "[", 
   RowBox[{"1", ",", "d", ",", "c"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.517089395919879*^9, 3.517089430418647*^9}, 
   3.517339149578125*^9, {3.517339187015625*^9, 3.517339192375*^9}, 
   3.517339239796875*^9, 3.648223873740713*^9}]
}, Open  ]],

Cell["\<\
At  different  sites \[OpenCurlyDoubleQuote]i,j\[CloseCurlyDoubleQuote],   \
the use  of numerical values is mandatory to get correct answers.\
\>", "Text",
 CellChangeTimes->{{3.517401863446651*^9, 3.517402046032802*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "1", ",", "1"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"j", ",", "2", ",", "0"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517241109187026*^9, 3.517241225903174*^9}, {
  3.517401692334337*^9, 3.5174016964374104`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.517241165102404*^9, 3.5172412267348223`*^9}, {
   3.517401685761855*^9, 3.51740169812715*^9}, 3.648223873791864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "1", ",", "1"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"j", ",", "2", ",", "0"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517241109187026*^9, 3.517241225903174*^9}, {
  3.517401692334337*^9, 3.5174016964374104`*^9}, {3.517401764131176*^9, 
  3.517401765119443*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"X", "[", 
   RowBox[{"0", ",", "2", ",", "0"}], "]"}], " ", 
  RowBox[{"X", "[", 
   RowBox[{"1", ",", "1", ",", "1"}], "]"}]}]], "Output",
 CellChangeTimes->{3.5174017657654257`*^9, 3.648223873858039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "1", ",", "0"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"j", ",", "2", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517241109187026*^9, 3.517241225903174*^9}, {
  3.517401692334337*^9, 3.517401741145165*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.517401720255969*^9, 3.5174017417334414`*^9}, 
   3.6482238739080257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AntiCommutator", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"i", ",", "1", ",", "0"}], "]"}], ",", 
   RowBox[{"X", "[", 
    RowBox[{"j", ",", "2", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.517241109187026*^9, 3.517241225903174*^9}, {
  3.517401692334337*^9, 3.5174017504609213`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"X", "[", 
   RowBox[{"0", ",", "2", ",", 
    RowBox[{"-", "1"}]}], "]"}], " ", 
  RowBox[{"X", "[", 
   RowBox[{"1", ",", "1", ",", "0"}], "]"}]}]], "Output",
 CellChangeTimes->{3.517401751710944*^9, 3.648223873957653*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["y", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}}],

Cell["\<\
y is used to represent the y coordinate direction in several of the operators \
in the DiracQ package.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989353625*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Pauli Spin Matrices (\[Sigma]), Canonical \
Position and Momentum Operators (q and p), and Canonical Spin Matrices (J).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
  3.516988045859375*^9}, {3.516989057859375*^9, 3.5169891146875*^9}}],

Cell["\<\
y is used by the Pauli Spin Matrices and the Canonical Spin Matrices.\
\>", "Text",
 CellChangeTimes->{{3.51698913365625*^9, 3.5169891723125*^9}, {
  3.516989241546875*^9, 3.516989249703125*^9}, {3.516989356421875*^9, 
  3.516989357984375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51698917471875*^9, 3.51698920603125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5169891889375*^9, 3.51698920671875*^9}, 
   3.516989272640625*^9, 3.51698936284375*^9, 3.6482238740083637`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516989260984375*^9, 3.51698926415625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.516989264515625*^9, 3.516989363453125*^9, 
  3.648223874057729*^9}]
}, Open  ]],

Cell["\<\
x is also used to represent coordinate direction of Position and Momentum \
operators.\
\>", "Text",
 CellChangeTimes->{{3.516989212*^9, 3.5169892348125*^9}, {
  3.516989279859375*^9, 3.516989295578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.51698929871875*^9, 3.5169893093125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "y"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.516989310171875*^9, 3.51698936434375*^9, 
  3.6482238741085157`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["z", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}, {3.516989620015625*^9, 
   3.51698962009375*^9}}],

Cell["\<\
z is used to represent the z coordinate direction in several of the operators \
in the DiracQ package.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989353625*^9}, {3.51698962365625*^9, 
   3.516989625859375*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["\<\
In the DiracQ Palette activate Pauli Spin Matrices (\[Sigma]), Canonical \
Position and Momentum Operators (q and p), and Canonical Spin Matrices (J).\
\>", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
  3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
  3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
  3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
  3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
  3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
  3.516988045859375*^9}, {3.516989057859375*^9, 3.5169891146875*^9}}],

Cell["\<\
z is used by the Pauli Spin Matrices and the Canonical Spin Matrices.\
\>", "Text",
 CellChangeTimes->{{3.51698913365625*^9, 3.5169891723125*^9}, {
  3.516989241546875*^9, 3.516989249703125*^9}, {3.516989356421875*^9, 
  3.516989357984375*^9}, {3.516989629765625*^9, 3.516989629890625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51698917471875*^9, 3.51698920603125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.5169891889375*^9, 3.51698920671875*^9}, 
   3.516989272640625*^9, 3.51698936284375*^9, {3.516989633296875*^9, 
   3.5169896378125*^9}, 3.6482238741575127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"J", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516989260984375*^9, 3.51698926415625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.516989264515625*^9, 3.516989363453125*^9, 
  3.64822387420505*^9}]
}, Open  ]],

Cell["\<\
x is also used to represent coordinate direction of Position and Momentum \
operators.\
\>", "Text",
 CellChangeTimes->{{3.516989212*^9, 3.5169892348125*^9}, {
  3.516989279859375*^9, 3.516989295578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["p", "\[RightVector]"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.51698929871875*^9, 3.5169893093125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "y"}], "]"}], ",", 
   RowBox[{"p", "[", 
    RowBox[{"1", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.516989310171875*^9, 3.51698936434375*^9, 
  3.648223874239314*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Delta]", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}, {3.516989620015625*^9, 
   3.51698962009375*^9}, {3.516989678515625*^9, 3.516989679671875*^9}}],

Cell[TextData[{
 "\[Delta] is the Kronecker delta. This function accepts two arguments and is \
equal to one if the arguments are equal, 0 if they are unequal, and will \
remain unevaluated if the arguments one or both of the arguments have not \
been assigned values. This function is similar to the standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function KroneckerDelta but is different in some ways. If the option \
Evaluation is set to identical than the function will be equal to 0 unless \
the two arguments are identical."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989353625*^9}, {3.51698962365625*^9, 
   3.516989625859375*^9}, 3.516989687328125*^9, {3.516989743109375*^9, 
   3.516989790078125*^9}, {3.516989822625*^9, 3.5169898505625*^9}, {
   3.516989888828125*^9, 3.51699002028125*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["In the DiracQ Palette activate Pauli Spin Matrices (\[Sigma]).", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
   3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
   3.516988045859375*^9}, {3.516989057859375*^9, 3.5169891146875*^9}, 
   3.516990031015625*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.516990067046875*^9, 3.5169900703125*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.51699007103125*^9, 3.6482238742736683`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.516990072515625*^9, 3.516990076078125*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51699007653125*^9, 3.648223874305655*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j"}], "]"}]], "Input",
 CellChangeTimes->{{3.51699007821875*^9, 3.516990081984375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51699008265625*^9, 3.648223874338296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "[", 
  RowBox[{"i", ",", "j", ",", 
   RowBox[{"Evaluation", "\[Rule]", "Identical"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516990093796875*^9, 3.516990108515625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51699010921875*^9, 3.648223874375257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifyQ", "[", 
  RowBox[{
   UnderscriptBox["\[Sum]", "i"], 
   RowBox[{
    RowBox[{"\[Delta]", "[", 
     RowBox[{"i", ",", "j"}], "]"}], " ", "i"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.5169901151875*^9, 3.516990146078125*^9}, {
  3.516990182484375*^9, 3.51699022275*^9}, {3.5169908386875*^9, 
  3.5169908695*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.516990131921875*^9, 3.516990136234375*^9}, {
   3.51699018609375*^9, 3.516990223265625*^9}, {3.516990841671875*^9, 
   3.516990870078125*^9}, 3.648223874432837*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Epsilon]", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}, {3.516989620015625*^9, 
   3.51698962009375*^9}, {3.516989678515625*^9, 3.516989679671875*^9}, {
   3.516991355265625*^9, 3.516991355859375*^9}}],

Cell["\<\
\[Epsilon] is the Levi - Civita completely antisymmetric symbol with three \
arguments. In this package the \[Epsilon] is only used for coordinate \
directions x, y, z. Any permutation of these symbols that follows from the \
right hand rule will yield one, any permutation opposite to the right hand \
rule yields - 1, and any argument that involves repeated symbols will yield \
zero.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989353625*^9}, {3.51698962365625*^9, 
   3.516989625859375*^9}, 3.516989687328125*^9, {3.516989743109375*^9, 
   3.516989790078125*^9}, {3.516989822625*^9, 3.5169898505625*^9}, {
   3.516989888828125*^9, 3.51699002028125*^9}, {3.51699092528125*^9, 
   3.51699092678125*^9}, {3.5174093943009777`*^9, 3.517409416819981*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "[", 
  RowBox[{"x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
   3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
   3.516988045859375*^9}, {3.516989057859375*^9, 3.5169891146875*^9}, 
   3.516990031015625*^9, {3.516991369640625*^9, 3.516991378296875*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.51699138353125*^9, 3.648223874466201*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "[", 
  RowBox[{"x", ",", "z", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.516991385375*^9, 3.516991389828125*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.516991390515625*^9, 3.648223874508718*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Epsilon]", "[", 
  RowBox[{"y", ",", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.51699139265625*^9, 3.516991402484375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.516991403359375*^9, 3.648223874559164*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Sigma]", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}, {3.516989620015625*^9, 
   3.51698962009375*^9}, {3.516989678515625*^9, 3.516989679671875*^9}, {
   3.51699143415625*^9, 3.516991436140625*^9}}],

Cell[TextData[{
 "\[Sigma] is the Pauli spin matrix. This operator requires two arguments. \
The first is site index and the second is coordinate direction. An optional \
third argument is used to denote different spin species. Also included are \
the Pauli raising and lowering operators, denoted by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "Plus"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "Minus"], TraditionalForm]]],
 " respectively. The raising and lowering operators require only one argument \
corresponding to site. A second argument will be taken to represent spin \
species."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989353625*^9}, {3.51698962365625*^9, 
   3.516989625859375*^9}, 3.516989687328125*^9, {3.516989743109375*^9, 
   3.516989790078125*^9}, {3.516989822625*^9, 3.5169898505625*^9}, {
   3.516989888828125*^9, 3.51699002028125*^9}, {3.516991432546875*^9, 
   3.51699146084375*^9}},
 Background->RGBColor[1., 1., 0.85]],

Cell[CellGroupData[{

Cell["Example", "Subsection",
 CellChangeTimes->{{3.515352057421875*^9, 3.51535206065625*^9}, 
   3.51551662028125*^9}],

Cell["In the DiracQ Palette activate Pauli Spin Matrices (\[Sigma]).", "Text",
 CellChangeTimes->{{3.51535207103125*^9, 3.51535209990625*^9}, {
   3.515516942125*^9, 3.515516948234375*^9}, {3.516475073471572*^9, 
   3.5164750875186267`*^9}, {3.51647522100471*^9, 3.516475255208273*^9}, {
   3.51656063184375*^9, 3.516560632140625*^9}, {3.51656256403125*^9, 
   3.516562585234375*^9}, {3.516987262359375*^9, 3.516987316609375*^9}, {
   3.516987520046875*^9, 3.5169875209375*^9}, {3.51698801325*^9, 
   3.516988045859375*^9}, {3.516989057859375*^9, 3.5169891146875*^9}, 
   3.516990031015625*^9}],

Cell["\<\
The Pauli Spin Matrices obey the familiar algebraic relations.\
\>", "Text",
 CellChangeTimes->{{3.516992467375*^9, 3.516992509828125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "x"}], "]"}], ",", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.516992432703125*^9, 3.51699245509375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.51699245584375*^9, 3.648223874609075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", "x"}], "]"}], "\[CircleTimes]", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"i", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.516992512234375*^9, 3.51699252328125*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"1", ",", "x"}], "]"}], "2"]], "Output",
 CellChangeTimes->{3.516992524*^9, 3.648223874658678*^9}]
}, Open  ]],

Cell["\<\
The Pauli raising and lowering operators are included as secondary operators\
\>", "Text",
 CellChangeTimes->{{3.51699253575*^9, 3.516992557015625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Sigma]", "Plus"], "[", "i", "]"}]], "Input",
 CellChangeTimes->{{3.516992527015625*^9, 3.51699253240625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"1", ",", "x"}], "]"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"1", ",", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.516992532953125*^9, 3.6482238747093678`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Sigma]", "Minus"], "[", "j", "]"}]], "Input",
 CellChangeTimes->{{3.516992565484375*^9, 3.516992576546875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"0", ",", "x"}], "]"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"0", ",", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.51699257709375*^9, 3.648223874760426*^9}]
}, Open  ]],

Cell["\<\
The optional third argument is used to denote different spin species, and \
therefore two operators of different species will commute.\
\>", "Text",
 CellChangeTimes->{{3.516992589546875*^9, 3.51699262428125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commutator", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "x", ",", "1"}], "]"}], ",", 
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"i", ",", "y", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.51699262596875*^9, 3.516992644765625*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.5169926453125*^9, 3.648223874809442*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Dagger]", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}, {3.516989620015625*^9, 
   3.51698962009375*^9}, {3.516989678515625*^9, 3.516989679671875*^9}, {
   3.51699143415625*^9, 3.516991436140625*^9}, {3.51699267096875*^9, 
   3.51699267171875*^9}}],

Cell[TextData[{
 "The dagger symbol, \[Dagger], is used in the representation of creation \
operators. The dagger symbol is not used as a superscript but is rather \
placed directly following the symbol ' f' for fermionic operators and ' b' \
for bosonic operators. To enter the dagger symbol find the symbol in the \
DiracQ palette or one of the other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " palettes or enter \[EscapeKey]dg",
 "\[EscapeKey]."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989353625*^9}, {3.51698962365625*^9, 
   3.516989625859375*^9}, 3.516989687328125*^9, {3.516989743109375*^9, 
   3.516989790078125*^9}, {3.516989822625*^9, 3.5169898505625*^9}, {
   3.516989888828125*^9, 3.51699002028125*^9}, {3.516991432546875*^9, 
   3.51699146084375*^9}, {3.51699268053125*^9, 3.51699274640625*^9}},
 Background->RGBColor[1., 1., 0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[HBar]", "Section",
 CellChangeTimes->{{3.51551654715625*^9, 3.515516549078125*^9}, {
   3.51638273184375*^9, 3.5163827321875*^9}, 3.5164751976137857`*^9, 
   3.5164754373356047`*^9, {3.516560301703125*^9, 3.516560302640625*^9}, {
   3.51656034775*^9, 3.516560351453125*^9}, {3.5165604086875*^9, 
   3.516560409671875*^9}, 3.516562420015625*^9, {3.5166432265625*^9, 
   3.516643226625*^9}, {3.5166450750625*^9, 3.516645080640625*^9}, {
   3.516986673953125*^9, 3.516986676734375*^9}, {3.516987346296875*^9, 
   3.516987349109375*^9}, {3.516987704046875*^9, 3.5169877045*^9}, {
   3.51698780459375*^9, 3.51698780559375*^9}, {3.516987984453125*^9, 
   3.516987987984375*^9}, {3.516989007703125*^9, 3.516989009203125*^9}, {
   3.516989348421875*^9, 3.516989348859375*^9}, {3.516989620015625*^9, 
   3.51698962009375*^9}, {3.516989678515625*^9, 3.516989679671875*^9}, {
   3.51699143415625*^9, 3.516991436140625*^9}, {3.51699267096875*^9, 
   3.51699267171875*^9}, {3.516992774359375*^9, 3.516992777328125*^9}}],

Cell[TextData[{
 "\[HBar] is the reduced Planck' s constant. To enter \[HBar] find the symbol \
in the DiracQ palette or one of the other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " palettes or enter \[EscapeKey]hb\[EscapeKey]."
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0.5}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.51535196190625*^9, 3.515351991703125*^9}, {
   3.51551621971875*^9, 3.515516245125*^9}, {3.51551645190625*^9, 
   3.51551652434375*^9}, 3.515516568453125*^9, {3.516382734390625*^9, 
   3.516382741734375*^9}, {3.516475195676261*^9, 3.5164752158483944`*^9}, {
   3.516475444882576*^9, 3.516475492086305*^9}, {3.516560309796875*^9, 
   3.516560326*^9}, {3.516560521671875*^9, 3.51656054584375*^9}, {
   3.51656059796875*^9, 3.516560600234375*^9}, {3.516560911140625*^9, 
   3.516560919953125*^9}, 3.516561312796875*^9, {3.51656242725*^9, 
   3.516562485578125*^9}, {3.516643101875*^9, 3.516643116640625*^9}, 
   3.516643160890625*^9, {3.5166450660625*^9, 3.516645218328125*^9}, {
   3.516645378390625*^9, 3.516645410296875*^9}, {3.51698668521875*^9, 
   3.51698674515625*^9}, {3.51698707778125*^9, 3.51698708771875*^9}, {
   3.51698735940625*^9, 3.516987360671875*^9}, {3.5169874345*^9, 
   3.516987447265625*^9}, {3.5169877074375*^9, 3.516987730890625*^9}, {
   3.516987814546875*^9, 3.516987815890625*^9}, {3.516987993984375*^9, 
   3.5169879955*^9}, {3.5169890058125*^9, 3.516989043671875*^9}, {
   3.516989351046875*^9, 3.516989353625*^9}, {3.51698962365625*^9, 
   3.516989625859375*^9}, 3.516989687328125*^9, {3.516989743109375*^9, 
   3.516989790078125*^9}, {3.516989822625*^9, 3.5169898505625*^9}, {
   3.516989888828125*^9, 3.51699002028125*^9}, {3.516991432546875*^9, 
   3.51699146084375*^9}, {3.51699268053125*^9, 3.51699274640625*^9}, {
   3.51699278771875*^9, 3.516992807109375*^9}},
 Background->RGBColor[1., 1., 0.85]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1275, 746},
WindowMargins->{{111, Automatic}, {Automatic, 26}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{594., 787.1999999999999}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3648198667-2372840"->{
  Cell[187671, 3816, 2749, 42, 70, "Print",
   CellTags->"Info3648198667-2372840"]},
 "Info3527444542-7055344"->{
  Cell[233356, 5065, 245, 4, 40, "Print",
   CellTags->"Info3527444542-7055344"]},
 "Info3527444474-7055344"->{
  Cell[264537, 5990, 474, 9, 40, "Print",
   CellTags->"Info3527444474-7055344"]},
 "Info3527444501-7055344"->{
  Cell[267630, 6077, 416, 7, 58, "Print",
   CellTags->"Info3527444501-7055344"]},
 "Info3527669217-7055344"->{
  Cell[275191, 6298, 348, 6, 40, "Print",
   CellTags->"Info3527669217-7055344"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3648198667-2372840", 423589, 10210},
 {"Info3527444542-7055344", 423703, 10213},
 {"Info3527444474-7055344", 423815, 10216},
 {"Info3527444501-7055344", 423927, 10219},
 {"Info3527669217-7055344", 424039, 10222}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 193, 6, 183, "Title"],
Cell[763, 30, 667, 13, 57, "Input"],
Cell[1433, 45, 332, 8, 58, "Text"],
Cell[CellGroupData[{
Cell[1790, 57, 117, 2, 35, "Input"],
Cell[1910, 61, 11882, 298, 441, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13829, 364, 110, 2, 65, "Section"],
Cell[13942, 368, 1644, 25, 225, "Text"],
Cell[CellGroupData[{
Cell[15611, 397, 273, 4, 54, "Subsection"],
Cell[CellGroupData[{
Cell[15909, 405, 127, 3, 36, "Input"],
Cell[16039, 410, 316, 5, 26, "Print"]
}, Open  ]],
Cell[16370, 418, 151, 3, 36, "Input"],
Cell[16524, 423, 430, 11, 36, "Input"],
Cell[CellGroupData[{
Cell[16979, 438, 158, 4, 36, "Input"],
Cell[17140, 444, 353, 7, 69, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17554, 458, 110, 2, 65, "Section"],
Cell[17667, 462, 744, 13, 91, "Text"],
Cell[CellGroupData[{
Cell[18436, 479, 136, 2, 42, "Subsection"],
Cell[18575, 483, 270, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[18870, 491, 202, 5, 33, "Input"],
Cell[19075, 498, 118, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[19254, 507, 33, 0, 62, "Section"],
Cell[19290, 509, 409, 9, 53, "Text"],
Cell[CellGroupData[{
Cell[19724, 522, 136, 2, 42, "Subsection"],
Cell[19863, 526, 317, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[20205, 536, 221, 5, 33, "Input"],
Cell[20429, 543, 235, 5, 70, "Output"]
}, Open  ]],
Cell[20679, 551, 178, 4, 32, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[20906, 561, 48, 1, 47, "Section"],
Cell[20957, 564, 534, 11, 72, "Text"],
Cell[CellGroupData[{
Cell[21516, 579, 97, 1, 30, "Subsubsection"],
Cell[21616, 582, 334, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[21975, 592, 270, 6, 33, "Input"],
Cell[22248, 600, 214, 5, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[22511, 611, 511, 10, 79, "Subsubsection"],
Cell[CellGroupData[{
Cell[23047, 625, 622, 17, 60, "Input"],
Cell[23672, 644, 554, 15, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[24287, 666, 43, 0, 62, "Section"],
Cell[24333, 668, 420, 9, 53, "Text"],
Cell[CellGroupData[{
Cell[24778, 681, 93, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[24896, 686, 136, 2, 33, "Input"],
Cell[25035, 690, 302, 4, 70, "Print"]
}, Open  ]],
Cell[25352, 697, 427, 11, 33, "Input"],
Cell[CellGroupData[{
Cell[25804, 712, 272, 6, 33, "Input"],
Cell[26079, 720, 305, 7, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[26445, 734, 98, 1, 62, "Section"],
Cell[26546, 737, 578, 10, 91, "Text"],
Cell[CellGroupData[{
Cell[27149, 751, 91, 1, 42, "Subsection"],
Cell[27243, 754, 262, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[27530, 763, 219, 5, 33, "Input"],
Cell[27752, 770, 121, 2, 70, "Output"]
}, Open  ]],
Cell[27888, 775, 116, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[28029, 780, 219, 5, 33, "Input"],
Cell[28251, 787, 92, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[28404, 795, 62, 1, 62, "Section"],
Cell[28469, 798, 743, 15, 72, "Text"],
Cell[CellGroupData[{
Cell[29237, 817, 119, 2, 42, "Subsection"],
Cell[29359, 821, 277, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[29661, 831, 217, 5, 33, "Input"],
Cell[29881, 838, 92, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[30034, 846, 87, 1, 62, "Section"],
Cell[30124, 849, 432, 8, 53, "Text"],
Cell[CellGroupData[{
Cell[30581, 861, 119, 2, 42, "Subsection"],
Cell[30703, 865, 308, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[31036, 875, 279, 7, 33, "Input"],
Cell[31318, 884, 249, 7, 70, "Output"]
}, Open  ]],
Cell[31582, 894, 840, 14, 51, "Text"],
Cell[CellGroupData[{
Cell[32447, 912, 217, 5, 33, "Input"],
Cell[32667, 919, 146, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[32874, 928, 95, 1, 62, "Section"],
Cell[32972, 931, 934, 17, 91, "Text"],
Cell[CellGroupData[{
Cell[33931, 952, 118, 2, 42, "Subsection"],
Cell[34052, 956, 277, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[34354, 966, 217, 5, 33, "Input"],
Cell[34574, 973, 94, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[34729, 981, 70, 1, 62, "Section"],
Cell[34802, 984, 450, 10, 53, "Text"],
Cell[CellGroupData[{
Cell[35277, 998, 136, 2, 42, "Subsection"],
Cell[35416, 1002, 357, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[35798, 1011, 311, 7, 33, "Input"],
Cell[36112, 1020, 208, 3, 70, "Output"]
}, Open  ]],
Cell[36335, 1026, 604, 10, 51, "Text"],
Cell[36942, 1038, 132, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[37099, 1043, 218, 5, 33, "Input"],
Cell[37320, 1050, 115, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[37496, 1059, 84, 2, 47, "Section"],
Cell[37583, 1063, 633, 11, 72, "Text"],
Cell[CellGroupData[{
Cell[38241, 1078, 161, 2, 42, "Subsection"],
Cell[CellGroupData[{
Cell[38427, 1084, 97, 1, 30, "Subsubsection"],
Cell[38527, 1087, 375, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[38927, 1097, 315, 7, 33, "Input"],
Cell[39245, 1106, 145, 3, 70, "Output"]
}, Open  ]],
Cell[39405, 1112, 745, 13, 51, "Text"],
Cell[CellGroupData[{
Cell[40175, 1129, 563, 16, 60, "Input"],
Cell[40741, 1147, 169, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[40983, 1157, 81, 1, 62, "Section"],
Cell[41067, 1160, 460, 10, 53, "Text"],
Cell[CellGroupData[{
Cell[41552, 1174, 93, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[41670, 1179, 136, 2, 33, "Input"],
Cell[41809, 1183, 298, 4, 70, "Print"]
}, Open  ]],
Cell[42122, 1190, 444, 11, 33, "Input"],
Cell[CellGroupData[{
Cell[42591, 1205, 288, 6, 33, "Input"],
Cell[42882, 1213, 301, 7, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[43244, 1227, 166, 3, 62, "Section"],
Cell[43413, 1232, 748, 13, 91, "Text"],
Cell[CellGroupData[{
Cell[44186, 1249, 93, 1, 42, "Subsection"],
Cell[44282, 1252, 665, 14, 51, "Text"],
Cell[CellGroupData[{
Cell[44972, 1270, 512, 13, 33, "Input"],
Cell[45487, 1285, 465, 10, 70, "Message"],
Cell[45955, 1297, 467, 10, 70, "Message"],
Cell[46425, 1309, 465, 10, 70, "Message"],
Cell[46893, 1321, 528, 11, 70, "Message"],
Cell[47424, 1334, 500, 10, 70, "Message"],
Cell[47927, 1346, 901, 16, 70, "Message"],
Cell[48831, 1364, 901, 16, 70, "Message"],
Cell[49735, 1382, 918, 16, 70, "Message"],
Cell[50656, 1400, 718, 20, 70, "Output"]
}, Open  ]],
Cell[51389, 1423, 509, 9, 51, "Text"],
Cell[CellGroupData[{
Cell[51923, 1436, 389, 11, 57, "Input"],
Cell[52315, 1449, 465, 10, 70, "Message"],
Cell[52783, 1461, 465, 10, 70, "Message"],
Cell[53251, 1473, 500, 10, 70, "Message"],
Cell[53754, 1485, 528, 11, 70, "Message"],
Cell[54285, 1498, 528, 11, 70, "Message"],
Cell[54816, 1511, 347, 10, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[55224, 1528, 115, 2, 62, "Section"],
Cell[55342, 1532, 1680, 32, 110, "Text"],
Cell[CellGroupData[{
Cell[57047, 1568, 93, 1, 42, "Subsection"],
Cell[57143, 1571, 406, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[57574, 1582, 177, 4, 33, "Input"],
Cell[57754, 1588, 141, 3, 70, "Output"]
}, Open  ]],
Cell[57910, 1594, 393, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[58328, 1605, 111, 3, 33, "Input"],
Cell[58442, 1610, 116, 2, 70, "Output"]
}, Open  ]],
Cell[58573, 1615, 88, 1, 33, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[58710, 1622, 162, 3, 47, "Section"],
Cell[58875, 1627, 465, 10, 53, "Text"],
Cell[CellGroupData[{
Cell[59365, 1641, 273, 4, 42, "Subsection"],
Cell[CellGroupData[{
Cell[59663, 1649, 127, 3, 33, "Input"],
Cell[59793, 1654, 339, 5, 70, "Print"]
}, Open  ]],
Cell[60147, 1662, 151, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[60323, 1669, 100, 1, 33, "Input"],
Cell[60426, 1672, 215, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60678, 1682, 137, 2, 33, "Input"],
Cell[60818, 1686, 133, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60988, 1694, 101, 1, 33, "Input"],
Cell[61092, 1697, 107, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[61260, 1706, 209, 4, 47, "Section"],
Cell[61472, 1712, 348, 6, 53, "Text"],
Cell[61823, 1720, 605, 10, 70, "Text"],
Cell[62431, 1732, 308, 6, 33, "Input"],
Cell[62742, 1740, 162, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[62929, 1747, 59874, 985, 725, "Input"],
Cell[122806, 2734, 59802, 983, 70, "Output"]
}, Open  ]],
Cell[182623, 3720, 2362, 34, 220, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[185022, 3759, 625, 9, 62, "Section"],
Cell[185650, 3770, 1137, 19, 72, "Text"],
Cell[CellGroupData[{
Cell[186812, 3793, 119, 2, 42, "Subsection"],
Cell[186934, 3797, 597, 11, 51, "Text"],
Cell[CellGroupData[{
Cell[187556, 3812, 112, 2, 33, "Input"],
Cell[187671, 3816, 2749, 42, 70, "Print",
 CellTags->"Info3648198667-2372840"]
}, Open  ]],
Cell[190435, 3861, 161, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[190621, 3868, 847, 21, 41, "Input"],
Cell[191471, 3891, 500, 10, 70, "Message"],
Cell[191974, 3903, 728, 18, 70, "Output"]
}, Open  ]],
Cell[192717, 3924, 137, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[192879, 3929, 542, 16, 41, "Input"],
Cell[193424, 3947, 500, 10, 70, "Message"],
Cell[193927, 3959, 496, 14, 70, "Output"]
}, Open  ]],
Cell[194438, 3976, 1158, 21, 59, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[195645, 4003, 206, 4, 47, "Section"],
Cell[195854, 4009, 503, 10, 46, "Text"],
Cell[CellGroupData[{
Cell[196382, 4023, 273, 4, 36, "Subsection"],
Cell[196658, 4029, 234, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[196917, 4037, 186, 5, 31, "Input"],
Cell[197106, 4044, 173, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197316, 4053, 389, 10, 92, "Input"],
Cell[197708, 4065, 120, 2, 70, "Output"]
}, Open  ]],
Cell[197843, 4070, 202, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[198070, 4078, 201, 4, 31, "Input"],
Cell[198274, 4084, 92, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198403, 4090, 198, 4, 31, "Input"],
Cell[198604, 4096, 92, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[198757, 4104, 111, 2, 62, "Section"],
Cell[198871, 4108, 971, 21, 67, "Text"],
Cell[CellGroupData[{
Cell[199867, 4133, 119, 2, 36, "Subsection"],
Cell[199989, 4137, 327, 6, 47, "Text"],
Cell[CellGroupData[{
Cell[200341, 4147, 267, 6, 31, "Input"],
Cell[200611, 4155, 240, 6, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[200912, 4168, 165, 3, 62, "Section"],
Cell[201080, 4173, 748, 13, 64, "Text"],
Cell[CellGroupData[{
Cell[201853, 4190, 119, 2, 36, "Subsection"],
Cell[201975, 4194, 347, 7, 29, "Text"],
Cell[202325, 4203, 1278, 19, 83, "Text"],
Cell[CellGroupData[{
Cell[203628, 4226, 342, 8, 31, "Input"],
Cell[203973, 4236, 470, 13, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204480, 4254, 650, 17, 49, "Input"],
Cell[205133, 4273, 639, 16, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[205833, 4296, 209, 4, 62, "Section"],
Cell[206045, 4302, 1424, 23, 100, "Text"],
Cell[CellGroupData[{
Cell[207494, 4329, 119, 2, 36, "Subsection"],
Cell[207616, 4333, 347, 7, 29, "Text"],
Cell[207966, 4342, 315, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[208306, 4352, 339, 6, 33, "Input"],
Cell[208648, 4360, 472, 12, 70, "Output"]
}, Open  ]],
Cell[209135, 4375, 197, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[209357, 4383, 254, 6, 33, "Input"],
Cell[209614, 4391, 72, 1, 70, "Output"]
}, Open  ]],
Cell[209701, 4395, 208, 4, 29, "Text"],
Cell[209912, 4401, 534, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[210471, 4420, 254, 6, 33, "Input"],
Cell[210728, 4428, 115, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[210904, 4437, 140, 2, 62, "Section"],
Cell[211047, 4441, 985, 18, 85, "Text"],
Cell[CellGroupData[{
Cell[212057, 4463, 118, 2, 36, "Subsection"],
Cell[212178, 4467, 341, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[212544, 4478, 266, 6, 31, "Input"],
Cell[212813, 4486, 242, 6, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[213116, 4499, 186, 3, 62, "Section"],
Cell[213305, 4504, 1468, 25, 62, "Text"],
Cell[CellGroupData[{
Cell[214798, 4533, 118, 2, 36, "Subsection"],
Cell[214919, 4537, 234, 5, 29, "Text"],
Cell[215156, 4544, 405, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[215586, 4555, 531, 13, 49, "Input"],
Cell[216120, 4570, 674, 20, 70, "Output"]
}, Open  ]],
Cell[216809, 4593, 297, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[217131, 4603, 174, 3, 31, "Input"],
Cell[217308, 4608, 375, 12, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[217744, 4627, 230, 3, 62, "Section"],
Cell[217977, 4632, 1208, 21, 44, "Text"],
Cell[CellGroupData[{
Cell[219210, 4657, 118, 2, 36, "Subsection"],
Cell[219331, 4661, 363, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[219719, 4672, 358, 6, 31, "Input"],
Cell[220080, 4680, 238, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220355, 4689, 150, 3, 31, "Input"],
Cell[220508, 4694, 149, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220694, 4702, 397, 11, 92, "Input"],
Cell[221094, 4715, 70, 1, 70, "Output"]
}, Open  ]],
Cell[221179, 4719, 218, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[221422, 4727, 210, 4, 31, "Input"],
Cell[221635, 4733, 92, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[221788, 4741, 250, 4, 62, "Section"],
Cell[222041, 4747, 1605, 29, 82, "Text"],
Cell[CellGroupData[{
Cell[223671, 4780, 118, 2, 36, "Subsection"],
Cell[223792, 4784, 471, 8, 47, "Text"],
Cell[CellGroupData[{
Cell[224288, 4796, 306, 8, 31, "Input"],
Cell[224597, 4806, 113, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224747, 4813, 259, 7, 31, "Input"],
Cell[225009, 4822, 92, 1, 70, "Output"]
}, Open  ]],
Cell[225116, 4826, 384, 7, 29, "Text"],
Cell[CellGroupData[{
Cell[225525, 4837, 279, 7, 31, "Input"],
Cell[225807, 4846, 118, 2, 70, "Output"]
}, Open  ]],
Cell[225940, 4851, 307, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[226272, 4861, 253, 8, 33, "Input"],
Cell[226528, 4871, 94, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[226683, 4879, 133, 2, 62, "Section"],
Cell[226819, 4883, 459, 7, 46, "Text"],
Cell[CellGroupData[{
Cell[227303, 4894, 119, 2, 36, "Subsection"],
Cell[227425, 4898, 306, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[227756, 4908, 334, 8, 31, "Input"],
Cell[228093, 4918, 356, 8, 70, "Output"]
}, Open  ]],
Cell[228464, 4929, 503, 8, 47, "Text"],
Cell[CellGroupData[{
Cell[228992, 4941, 360, 7, 31, "Input"],
Cell[229355, 4950, 291, 4, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[229707, 4961, 156, 2, 62, "Section"],
Cell[229866, 4965, 670, 17, 49, "Text"],
Cell[CellGroupData[{
Cell[230561, 4986, 119, 2, 36, "Subsection"],
Cell[230683, 4990, 394, 7, 29, "Text"],
Cell[CellGroupData[{
Cell[231102, 5001, 283, 5, 31, "Input"],
Cell[231388, 5008, 377, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231802, 5021, 343, 6, 31, "Input"],
Cell[232148, 5029, 401, 7, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232586, 5041, 245, 6, 31, "Input"],
Cell[232834, 5049, 124, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[233019, 5058, 334, 5, 62, "Section"],
Cell[233356, 5065, 245, 4, 40, "Print",
 CellTags->"Info3527444542-7055344"],
Cell[CellGroupData[{
Cell[233626, 5073, 119, 2, 36, "Subsection"],
Cell[233748, 5077, 1068, 25, 32, "Text"],
Cell[CellGroupData[{
Cell[234841, 5106, 451, 12, 35, "Input"],
Cell[235295, 5120, 1192, 39, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236524, 5164, 479, 10, 38, "Input"],
Cell[237006, 5176, 3485, 112, 70, "Output"]
}, Open  ]],
Cell[240506, 5291, 935, 18, 68, "Text"],
Cell[CellGroupData[{
Cell[241466, 5313, 124, 2, 31, "Input"],
Cell[241593, 5317, 2651, 87, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[244305, 5411, 198, 3, 62, "Section"],
Cell[244506, 5416, 663, 12, 46, "Text"],
Cell[CellGroupData[{
Cell[245194, 5432, 119, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[245338, 5438, 127, 3, 31, "Input"],
Cell[245468, 5443, 598, 9, 70, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246103, 5457, 105, 1, 31, "Input"],
Cell[246211, 5460, 352, 6, 70, "Output"]
}, Open  ]],
Cell[246578, 5469, 645, 16, 31, "Input"],
Cell[CellGroupData[{
Cell[247248, 5489, 222, 5, 31, "Input"],
Cell[247473, 5496, 124, 2, 70, "Output"]
}, Open  ]],
Cell[247612, 5501, 151, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[247788, 5508, 205, 4, 31, "Input"],
Cell[247996, 5514, 278, 4, 70, "Print"]
}, Open  ]],
Cell[248289, 5521, 663, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[248977, 5540, 380, 8, 31, "Input"],
Cell[249360, 5550, 152, 3, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[249573, 5560, 294, 4, 62, "Section"],
Cell[249870, 5566, 590, 12, 46, "Text"],
Cell[CellGroupData[{
Cell[250485, 5582, 119, 2, 36, "Subsection"],
Cell[250607, 5586, 423, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[251055, 5598, 137, 3, 31, "Input"],
Cell[251195, 5603, 171, 4, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[251427, 5614, 331, 5, 62, "Section"],
Cell[251761, 5621, 1197, 19, 82, "Text"],
Cell[CellGroupData[{
Cell[252983, 5644, 119, 2, 36, "Subsection"],
Cell[253105, 5648, 375, 7, 29, "Text"],
Cell[253483, 5657, 519, 8, 47, "Text"],
Cell[254005, 5667, 2179, 76, 165, "Text"],
Cell[256187, 5745, 189, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[256401, 5753, 476, 15, 49, "Input"],
Cell[256880, 5770, 1235, 41, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[258176, 5818, 386, 5, 62, "Section"],
Cell[258565, 5825, 1389, 22, 82, "Text"],
Cell[CellGroupData[{
Cell[259979, 5851, 119, 2, 36, "Subsection"],
Cell[260101, 5855, 488, 9, 29, "Text"],
Cell[260592, 5866, 123, 1, 29, "Text"],
Cell[260718, 5869, 437, 11, 52, "Input"],
Cell[CellGroupData[{
Cell[261180, 5884, 178, 3, 31, "Input"],
Cell[261361, 5889, 302, 7, 70, "Output"]
}, Open  ]],
Cell[261678, 5899, 158, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[261861, 5906, 181, 3, 31, "Input"],
Cell[262045, 5911, 418, 12, 70, "Output"]
}, Open  ]],
Cell[262478, 5926, 224, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[262727, 5934, 207, 4, 31, "Input"],
Cell[262937, 5940, 426, 12, 70, "Output"]
}, Open  ]],
Cell[263378, 5955, 253, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[263656, 5964, 127, 2, 31, "Input"],
Cell[263786, 5968, 228, 6, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[264075, 5981, 459, 7, 62, "Section"],
Cell[264537, 5990, 474, 9, 40, "Print",
 CellTags->"Info3527444474-7055344"],
Cell[CellGroupData[{
Cell[265036, 6003, 119, 2, 36, "Subsection"],
Cell[265158, 6007, 306, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[265489, 6016, 615, 17, 33, "Input"],
Cell[266107, 6035, 636, 17, 70, "Output"]
}, Open  ]],
Cell[266758, 6055, 297, 6, 29, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[267104, 6067, 523, 8, 62, "Section"],
Cell[267630, 6077, 416, 7, 58, "Print",
 CellTags->"Info3527444501-7055344"],
Cell[CellGroupData[{
Cell[268071, 6088, 119, 2, 36, "Subsection"],
Cell[268193, 6092, 301, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[268519, 6101, 655, 18, 33, "Input"],
Cell[269177, 6121, 606, 16, 70, "Output"]
}, Open  ]],
Cell[269798, 6140, 293, 5, 29, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[270140, 6151, 346, 5, 62, "Section"],
Cell[270489, 6158, 1294, 23, 64, "Text"],
Cell[CellGroupData[{
Cell[271808, 6185, 119, 2, 36, "Subsection"],
Cell[271930, 6189, 411, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[272366, 6201, 210, 5, 31, "Input"],
Cell[272579, 6208, 118, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272734, 6215, 260, 7, 31, "Input"],
Cell[272997, 6224, 121, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273155, 6231, 256, 7, 31, "Input"],
Cell[273414, 6240, 91, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273542, 6246, 156, 3, 31, "Input"],
Cell[273701, 6251, 310, 9, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274048, 6265, 156, 3, 31, "Input"],
Cell[274207, 6270, 334, 10, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[274602, 6287, 586, 9, 62, "Section"],
Cell[275191, 6298, 348, 6, 40, "Print",
 CellTags->"Info3527669217-7055344"],
Cell[CellGroupData[{
Cell[275564, 6308, 119, 2, 36, "Subsection"],
Cell[275686, 6312, 483, 9, 29, "Text"],
Cell[276172, 6323, 257, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[276454, 6332, 1266, 35, 33, "Input"],
Cell[277723, 6369, 294, 5, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[278078, 6381, 399, 6, 62, "Section"],
Cell[278480, 6389, 1217, 20, 64, "Text"],
Cell[CellGroupData[{
Cell[279722, 6413, 119, 2, 36, "Subsection"],
Cell[279844, 6417, 562, 9, 47, "Text"],
Cell[280409, 6428, 522, 16, 67, "Input"],
Cell[CellGroupData[{
Cell[280956, 6448, 130, 2, 31, "Input"],
Cell[281089, 6452, 427, 12, 70, "Output"]
}, Open  ]],
Cell[281531, 6467, 655, 11, 29, "Text"],
Cell[CellGroupData[{
Cell[282211, 6482, 306, 7, 31, "Input"],
Cell[282520, 6491, 208, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282765, 6499, 181, 4, 31, "Input"],
Cell[282949, 6505, 135, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283121, 6512, 207, 5, 31, "Input"],
Cell[283331, 6519, 212, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283580, 6529, 577, 14, 31, "Input"],
Cell[284160, 6545, 413, 10, 70, "Output"]
}, Open  ]],
Cell[284588, 6558, 1074, 18, 64, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[285711, 6582, 546, 8, 62, "Section"],
Cell[286260, 6592, 1015, 18, 46, "Text"],
Cell[CellGroupData[{
Cell[287300, 6614, 119, 2, 36, "Subsection"],
Cell[287422, 6618, 543, 8, 47, "Text"],
Cell[287968, 6628, 483, 9, 29, "Text"],
Cell[CellGroupData[{
Cell[288476, 6641, 1224, 34, 33, "Input"],
Cell[289703, 6677, 827, 20, 70, "Output"]
}, Open  ]],
Cell[290545, 6700, 232, 5, 29, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[290826, 6711, 500, 7, 62, "Section"],
Cell[291329, 6720, 971, 17, 46, "Text"],
Cell[CellGroupData[{
Cell[292325, 6741, 119, 2, 36, "Subsection"],
Cell[292447, 6745, 435, 7, 47, "Text"],
Cell[292885, 6754, 483, 9, 29, "Text"],
Cell[CellGroupData[{
Cell[293393, 6767, 1177, 33, 33, "Input"],
Cell[294573, 6802, 808, 20, 70, "Output"]
}, Open  ]],
Cell[295396, 6825, 144, 1, 29, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[295589, 6832, 391, 6, 62, "Section"],
Cell[295983, 6840, 1316, 24, 64, "Text"],
Cell[CellGroupData[{
Cell[297324, 6868, 119, 2, 36, "Subsection"],
Cell[297446, 6872, 411, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[297882, 6884, 210, 5, 31, "Input"],
Cell[298095, 6891, 162, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298294, 6898, 260, 7, 31, "Input"],
Cell[298557, 6907, 141, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298735, 6914, 256, 7, 31, "Input"],
Cell[298994, 6923, 116, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299147, 6930, 200, 4, 31, "Input"],
Cell[299350, 6936, 359, 11, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299746, 6952, 202, 4, 31, "Input"],
Cell[299951, 6958, 356, 10, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[300368, 6975, 446, 6, 62, "Section"],
Cell[300817, 6983, 1703, 29, 64, "Text"],
Cell[CellGroupData[{
Cell[302545, 7016, 139, 2, 36, "Subsection"],
Cell[302687, 7020, 518, 9, 29, "Text"],
Cell[303208, 7031, 180, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[303413, 7039, 692, 16, 31, "Input"],
Cell[304108, 7057, 964, 26, 70, "Output"],
Cell[305075, 7085, 447, 9, 30, "Output"]
}, Open  ]],
Cell[305537, 7097, 201, 5, 29, "Text"],
Cell[305741, 7104, 2688, 78, 86, "Input"],
Cell[CellGroupData[{
Cell[308454, 7186, 1135, 20, 43, "Input"],
Cell[309592, 7208, 214, 5, 70, "Output"],
Cell[309809, 7215, 192, 5, 30, "Output"]
}, Open  ]],
Cell[310016, 7223, 542, 9, 47, "Text"],
Cell[CellGroupData[{
Cell[310583, 7236, 807, 16, 31, "Input"],
Cell[311393, 7254, 30134, 909, 70, "Output"],
Cell[341530, 8165, 1056, 25, 47, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[342647, 8197, 452, 6, 62, "Section"],
Cell[343102, 8205, 1778, 51, 49, "Text"],
Cell[CellGroupData[{
Cell[344905, 8260, 119, 2, 36, "Subsection"],
Cell[345027, 8264, 411, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[345463, 8276, 110, 1, 31, "Input"],
Cell[345576, 8279, 134, 3, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[345771, 8289, 493, 7, 62, "Section"],
Cell[346267, 8298, 1474, 23, 64, "Text"],
Cell[CellGroupData[{
Cell[347766, 8325, 119, 2, 36, "Subsection"],
Cell[347888, 8329, 411, 8, 29, "Text"],
Cell[348302, 8339, 365, 6, 29, "Text"],
Cell[348670, 8347, 629, 21, 79, "Input"],
Cell[349302, 8370, 392, 7, 29, "Text"],
Cell[CellGroupData[{
Cell[349719, 8381, 539, 17, 76, "Input"],
Cell[350261, 8400, 960, 34, 70, "Output"]
}, Open  ]],
Cell[351236, 8437, 284, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[351545, 8446, 178, 3, 31, "Input"],
Cell[351726, 8451, 136, 2, 70, "Output"]
}, Open  ]],
Cell[351877, 8456, 343, 7, 29, "Text"],
Cell[CellGroupData[{
Cell[352245, 8467, 130, 2, 31, "Input"],
Cell[352378, 8471, 969, 30, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[353408, 8508, 498, 7, 62, "Section"],
Cell[353909, 8517, 1617, 25, 82, "Text"],
Cell[CellGroupData[{
Cell[355551, 8546, 119, 2, 36, "Subsection"],
Cell[355673, 8550, 593, 9, 29, "Text"],
Cell[356269, 8561, 445, 11, 31, "Input"],
Cell[356717, 8574, 206, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[356948, 8582, 184, 3, 31, "Input"],
Cell[357135, 8587, 428, 11, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[357624, 8605, 543, 8, 62, "Section"],
Cell[358170, 8615, 1569, 25, 64, "Text"],
Cell[CellGroupData[{
Cell[359764, 8644, 119, 2, 36, "Subsection"],
Cell[359886, 8648, 803, 12, 47, "Text"],
Cell[360692, 8662, 127, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[360844, 8667, 335, 8, 31, "Input"],
Cell[361182, 8677, 254, 6, 70, "Output"]
}, Open  ]],
Cell[361451, 8686, 228, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[361704, 8694, 468, 13, 31, "Input"],
Cell[362175, 8709, 375, 10, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[362611, 8726, 584, 8, 62, "Section"],
Cell[363198, 8736, 1430, 23, 64, "Text"],
Cell[CellGroupData[{
Cell[364653, 8763, 119, 2, 36, "Subsection"],
Cell[364775, 8767, 504, 9, 29, "Text"],
Cell[365282, 8778, 222, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[365529, 8785, 382, 9, 31, "Input"],
Cell[365914, 8796, 171, 4, 70, "Output"]
}, Open  ]],
Cell[366100, 8803, 271, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[366396, 8812, 517, 14, 31, "Input"],
Cell[366916, 8828, 221, 6, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[367198, 8841, 634, 9, 62, "Section"],
Cell[367835, 8852, 1407, 22, 82, "Text"],
Cell[CellGroupData[{
Cell[369267, 8878, 119, 2, 54, "Subsection"],
Cell[369389, 8882, 504, 9, 29, "Text"],
Cell[369896, 8893, 269, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[370190, 8900, 324, 8, 47, "Input"],
Cell[370517, 8910, 216, 5, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370770, 8920, 533, 13, 49, "Input"],
Cell[371306, 8935, 329, 8, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[371696, 8950, 679, 10, 80, "Section"],
Cell[372378, 8962, 1432, 23, 82, "Text"],
Cell[CellGroupData[{
Cell[373835, 8989, 119, 2, 54, "Subsection"],
Cell[373957, 8993, 562, 10, 29, "Text"],
Cell[374522, 9005, 344, 6, 29, "Text"],
Cell[CellGroupData[{
Cell[374891, 9015, 187, 4, 31, "Input"],
Cell[375081, 9021, 91, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375209, 9027, 199, 4, 31, "Input"],
Cell[375411, 9033, 120, 2, 70, "Output"]
}, Open  ]],
Cell[375546, 9038, 131, 1, 29, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[375726, 9045, 720, 10, 80, "Section"],
Cell[376449, 9057, 1352, 22, 46, "Text"],
Cell[CellGroupData[{
Cell[377826, 9083, 119, 2, 36, "Subsection"],
Cell[377948, 9087, 658, 10, 29, "Text"],
Cell[378609, 9099, 205, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[378839, 9107, 272, 7, 31, "Input"],
Cell[379114, 9116, 139, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379290, 9123, 259, 7, 31, "Input"],
Cell[379552, 9132, 92, 1, 70, "Output"]
}, Open  ]],
Cell[379659, 9136, 217, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[379901, 9145, 153, 3, 31, "Input"],
Cell[380057, 9150, 309, 9, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[380427, 9166, 818, 12, 62, "Section"],
Cell[381248, 9180, 3060, 56, 82, "Text"],
Cell[CellGroupData[{
Cell[384333, 9240, 119, 2, 36, "Subsection"],
Cell[384455, 9244, 601, 8, 29, "Text"],
Cell[385059, 9254, 631, 15, 34, "Text"],
Cell[CellGroupData[{
Cell[385715, 9273, 274, 7, 31, "Input"],
Cell[385992, 9282, 265, 7, 70, "Output"]
}, Open  ]],
Cell[386272, 9292, 286, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[386583, 9301, 275, 7, 31, "Input"],
Cell[386861, 9310, 120, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387018, 9317, 284, 7, 27, "Input"],
Cell[387305, 9326, 367, 8, 70, "Output"]
}, Open  ]],
Cell[387687, 9337, 232, 4, 26, "Text"],
Cell[CellGroupData[{
Cell[387944, 9345, 331, 8, 27, "Input"],
Cell[388278, 9355, 167, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388482, 9362, 384, 9, 27, "Input"],
Cell[388869, 9373, 250, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389156, 9384, 350, 9, 27, "Input"],
Cell[389509, 9395, 124, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389670, 9402, 356, 9, 27, "Input"],
Cell[390029, 9413, 268, 7, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[390358, 9427, 770, 11, 62, "Section"],
Cell[391131, 9440, 1399, 23, 43, "Text"],
Cell[CellGroupData[{
Cell[392555, 9467, 119, 2, 34, "Subsection"],
Cell[392677, 9471, 658, 10, 26, "Text"],
Cell[393338, 9483, 254, 5, 26, "Text"],
Cell[CellGroupData[{
Cell[393617, 9492, 272, 7, 27, "Input"],
Cell[393892, 9501, 162, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394091, 9508, 259, 7, 27, "Input"],
Cell[394353, 9517, 117, 2, 70, "Output"]
}, Open  ]],
Cell[394485, 9522, 217, 5, 26, "Text"],
Cell[CellGroupData[{
Cell[394727, 9531, 153, 3, 30, "Input"],
Cell[394883, 9536, 335, 10, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[395279, 9553, 819, 12, 62, "Section"],
Cell[396101, 9567, 1448, 24, 43, "Text"],
Cell[CellGroupData[{
Cell[397574, 9595, 119, 2, 34, "Subsection"],
Cell[397696, 9599, 658, 10, 26, "Text"],
Cell[398357, 9611, 300, 5, 26, "Text"],
Cell[CellGroupData[{
Cell[398682, 9620, 272, 7, 27, "Input"],
Cell[398957, 9629, 210, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399204, 9637, 259, 7, 27, "Input"],
Cell[399466, 9646, 116, 2, 70, "Output"]
}, Open  ]],
Cell[399597, 9651, 217, 5, 26, "Text"],
Cell[CellGroupData[{
Cell[399839, 9660, 153, 3, 30, "Input"],
Cell[399995, 9665, 333, 10, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[400389, 9682, 872, 12, 62, "Section"],
Cell[401264, 9696, 2042, 33, 58, "Text"],
Cell[CellGroupData[{
Cell[403331, 9733, 119, 2, 34, "Subsection"],
Cell[403453, 9737, 594, 8, 26, "Text"],
Cell[CellGroupData[{
Cell[404072, 9749, 148, 3, 27, "Input"],
Cell[404223, 9754, 93, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404353, 9760, 150, 3, 27, "Input"],
Cell[404506, 9765, 91, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404634, 9771, 149, 3, 27, "Input"],
Cell[404786, 9776, 91, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404914, 9782, 207, 4, 27, "Input"],
Cell[405124, 9788, 91, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405252, 9794, 353, 9, 48, "Input"],
Cell[405608, 9805, 215, 3, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[405884, 9815, 924, 13, 62, "Section"],
Cell[406811, 9830, 1990, 31, 58, "Text"],
Cell[CellGroupData[{
Cell[408826, 9865, 119, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[408970, 9871, 658, 10, 27, "Input"],
Cell[409631, 9883, 91, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409759, 9889, 159, 3, 27, "Input"],
Cell[409921, 9894, 109, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410067, 9901, 161, 3, 27, "Input"],
Cell[410231, 9906, 92, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[410384, 9914, 921, 13, 62, "Section"],
Cell[411308, 9929, 2194, 39, 61, "Text"],
Cell[CellGroupData[{
Cell[413527, 9972, 119, 2, 34, "Subsection"],
Cell[413649, 9976, 594, 8, 26, "Text"],
Cell[414246, 9986, 149, 3, 26, "Text"],
Cell[CellGroupData[{
Cell[414420, 9993, 273, 7, 27, "Input"],
Cell[414696, 10002, 91, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414824, 10008, 245, 6, 27, "Input"],
Cell[415072, 10016, 168, 4, 70, "Output"]
}, Open  ]],
Cell[415255, 10023, 162, 3, 26, "Text"],
Cell[CellGroupData[{
Cell[415442, 10030, 153, 3, 30, "Input"],
Cell[415598, 10035, 271, 7, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415906, 10047, 155, 3, 30, "Input"],
Cell[416064, 10052, 268, 7, 70, "Output"]
}, Open  ]],
Cell[416347, 10062, 223, 4, 26, "Text"],
Cell[CellGroupData[{
Cell[416595, 10070, 293, 7, 27, "Input"],
Cell[416891, 10079, 90, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[417042, 10087, 970, 14, 62, "Section"],
Cell[418015, 10103, 2048, 34, 58, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[420100, 10142, 1014, 14, 62, "Section"],
Cell[421117, 10158, 1877, 31, 43, "Text"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
